{"version":3,"file":"index.js","sources":["../../../src/plugins/babel/worker/type.ts","../../../src/plugins/babel/worker/index.ts","../../../src/plugins/babel/index.ts"],"sourcesContent":["export interface IImportDependencies {\n    uri: string;\n    defaultDependency: string,\n    namespaceDependency: string;\n    namedDependencies: string[];\n}\n\nexport interface IBabelService {\n    esm2Amd: (code: string) => Promise<[string, IImportDependencies[]]>;\n    jsx: (code: string) => Promise<string>;\n}\n\nexport const BabelServiceId = 'code-sandbox-babel-service';\n","import BabelWorker from './worker?worker&inline';\nimport { IBabelService, BabelServiceId } from \"./type\";\nimport { callProxy } from \"../../../core/proxy\";\n\nconst worker = new BabelWorker();\n\nconst serviceKeys: Array<keyof IBabelService> = ['jsx', 'esm2Amd'];\nconst service: IBabelService = serviceKeys.reduce((previousValue, currentValue) => {\n    return {\n        ...previousValue,\n        [currentValue]: async (...args: unknown[]) => {\n            return await callProxy<IBabelService>({\n                win: worker,\n                serviceId: BabelServiceId,\n                method: currentValue,\n                payload: args\n            });\n        }\n    }\n}, {} as IBabelService);\n\nexport default service;\n","import service from './worker';\nimport { BasePlugin } from \"../types\";\n\nclass JsxPlugin extends BasePlugin {\n    constructor() {\n        super();\n        this.pluginId = 'code-sandbox-jsx-plugin';\n    }\n\n    async beforeModuleGenerate(ctx, meta) {\n        meta.factory = await service.jsx(meta.factory);\n        return meta;\n    }\n}\n\nclass EsmToAmdPlugin extends BasePlugin {\n    constructor() {\n        super();\n        this.pluginId = 'code-sandbox-esm-to-amd-plugin';\n    }\n\n    async beforeModuleGenerate(ctx, meta) {\n        const [code] = await service.esm2Amd(meta.factory);\n        meta.factory = code;\n        return meta;\n    }\n}\n\nexport { EsmToAmdPlugin, JsxPlugin };\n"],"names":["BabelWorker"],"mappings":";;;;;;;;;;;;AAYO,MAAM,iBAAiB;ACR9B,MAAM,SAAS,IAAIA;AAEnB,MAAM,cAA0C,CAAC,OAAO,SAAS;AACjE,MAAM,UAAyB,YAAY,OAAO,CAAC,eAAe,iBAAiB;AACxE,SAAA;AAAA,IACH,GAAG;AAAA,IACH,CAAC,YAAY,GAAG,UAAU,SAAoB;AAC1C,aAAO,MAAM,UAAyB;AAAA,QAClC,KAAK;AAAA,QACL,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,SAAS;AAAA,MAAA,CACZ;AAAA,IACL;AAAA,EAAA;AAER,GAAG,EAAmB;AChBtB,MAAM,kBAAkB,WAAW;AAAA,EAC/B,cAAc;AACJ;AACN,SAAK,WAAW;AAAA,EACpB;AAAA,EAEA,MAAM,qBAAqB,KAAK,MAAM;AAClC,SAAK,UAAU,MAAM,QAAQ,IAAI,KAAK,OAAO;AACtC,WAAA;AAAA,EACX;AACJ;AAEA,MAAM,uBAAuB,WAAW;AAAA,EACpC,cAAc;AACJ;AACN,SAAK,WAAW;AAAA,EACpB;AAAA,EAEA,MAAM,qBAAqB,KAAK,MAAM;AAClC,UAAM,CAAC,IAAI,IAAI,MAAM,QAAQ,QAAQ,KAAK,OAAO;AACjD,SAAK,UAAU;AACR,WAAA;AAAA,EACX;AACJ;"}