{"ast":{"type":"Document","children":[{"type":"Yaml","value":"title: '管程'\ntags: ['操作系统','管程']","loc":{"start":{"line":1,"column":0},"end":{"line":4,"column":3}},"range":[0,39],"raw":"---\ntitle: '管程'\ntags: ['操作系统','管程']\n---"},{"type":"Header","depth":1,"children":[{"type":"Str","value":"管程","loc":{"start":{"line":5,"column":2},"end":{"line":5,"column":4}},"range":[42,44],"raw":"管程"}],"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":4}},"range":[40,44],"raw":"# 管程"},{"type":"Paragraph","children":[{"type":"Str","value":"信号量的缺点：使用信号量机制来解决同步问题的时候，不得不考虑","loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}},"range":[46,76],"raw":"信号量的缺点：使用信号量机制来解决同步问题的时候，不得不考虑"},{"type":"Strong","children":[{"type":"Str","value":"PV操作的顺序","loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":39}},"range":[78,85],"raw":"PV操作的顺序"}],"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":41}},"range":[76,87],"raw":"**PV操作的顺序**"},{"type":"Str","value":"，造成编写程序困难，易出错。","loc":{"start":{"line":7,"column":41},"end":{"line":7,"column":55}},"range":[87,101],"raw":"，造成编写程序困难，易出错。"}],"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":55}},"range":[46,101],"raw":"信号量的缺点：使用信号量机制来解决同步问题的时候，不得不考虑**PV操作的顺序**，造成编写程序困难，易出错。"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"管程的定义和基本特征","loc":{"start":{"line":9,"column":3},"end":{"line":9,"column":13}},"range":[106,116],"raw":"管程的定义和基本特征"}],"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":13}},"range":[103,116],"raw":"## 管程的定义和基本特征"},{"type":"Paragraph","children":[{"type":"Str","value":"管程是一种特殊的软件模块，组成：","loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":16}},"range":[118,134],"raw":"管程是一种特殊的软件模块，组成："}],"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":16}},"range":[118,134],"raw":"管程是一种特殊的软件模块，组成："},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"局部于管程的共享数据结构说明；","loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":17}},"range":[138,153],"raw":"局部于管程的共享数据结构说明；"}],"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":17}},"range":[138,153],"raw":"局部于管程的共享数据结构说明；"}],"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":17}},"range":[136,153],"raw":"- 局部于管程的共享数据结构说明；"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"对该数据结构结构进行操作的一组过程；","loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":20}},"range":[156,174],"raw":"对该数据结构结构进行操作的一组过程；"}],"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":20}},"range":[156,174],"raw":"对该数据结构结构进行操作的一组过程；"}],"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":20}},"range":[154,174],"raw":"- 对该数据结构结构进行操作的一组过程；"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"对局部于管程的共享数据设置初始值的语句；","loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":22}},"range":[177,197],"raw":"对局部于管程的共享数据设置初始值的语句；"}],"loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":22}},"range":[177,197],"raw":"对局部于管程的共享数据设置初始值的语句；"}],"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":22}},"range":[175,197],"raw":"- 对局部于管程的共享数据设置初始值的语句；"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"管程的名字。","loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":8}},"range":[200,206],"raw":"管程的名字。"}],"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":8}},"range":[200,206],"raw":"管程的名字。"}],"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":8}},"range":[198,206],"raw":"- 管程的名字。"}],"loc":{"start":{"line":13,"column":0},"end":{"line":16,"column":8}},"range":[136,206],"raw":"- 局部于管程的共享数据结构说明；\n- 对该数据结构结构进行操作的一组过程；\n- 对局部于管程的共享数据设置初始值的语句；\n- 管程的名字。"},{"type":"Paragraph","children":[{"type":"Str","value":"管程的特征：","loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":6}},"range":[208,214],"raw":"管程的特征："}],"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":6}},"range":[208,214],"raw":"管程的特征："},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"局部于管程的数据只能被管程内的过程访问；","loc":{"start":{"line":20,"column":2},"end":{"line":20,"column":22}},"range":[218,238],"raw":"局部于管程的数据只能被管程内的过程访问；"}],"loc":{"start":{"line":20,"column":2},"end":{"line":20,"column":22}},"range":[218,238],"raw":"局部于管程的数据只能被管程内的过程访问；"}],"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":22}},"range":[216,238],"raw":"- 局部于管程的数据只能被管程内的过程访问；"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"一个进程只有通过管程内的过程才能进入管程访问共享数据；","loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":29}},"range":[241,268],"raw":"一个进程只有通过管程内的过程才能进入管程访问共享数据；"}],"loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":29}},"range":[241,268],"raw":"一个进程只有通过管程内的过程才能进入管程访问共享数据；"}],"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":29}},"range":[239,268],"raw":"- 一个进程只有通过管程内的过程才能进入管程访问共享数据；"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"每次","loc":{"start":{"line":22,"column":2},"end":{"line":22,"column":4}},"range":[271,273],"raw":"每次"},{"type":"Strong","children":[{"type":"Str","value":"仅允许一个进程","loc":{"start":{"line":22,"column":6},"end":{"line":22,"column":13}},"range":[275,282],"raw":"仅允许一个进程"}],"loc":{"start":{"line":22,"column":4},"end":{"line":22,"column":15}},"range":[273,284],"raw":"**仅允许一个进程**"},{"type":"Str","value":"在管程内执行某个内部过程。","loc":{"start":{"line":22,"column":15},"end":{"line":22,"column":28}},"range":[284,297],"raw":"在管程内执行某个内部过程。"}],"loc":{"start":{"line":22,"column":2},"end":{"line":22,"column":28}},"range":[271,297],"raw":"每次**仅允许一个进程**在管程内执行某个内部过程。"}],"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":28}},"range":[269,297],"raw":"- 每次**仅允许一个进程**在管程内执行某个内部过程。"}],"loc":{"start":{"line":20,"column":0},"end":{"line":22,"column":28}},"range":[216,297],"raw":"- 局部于管程的数据只能被管程内的过程访问；\n- 一个进程只有通过管程内的过程才能进入管程访问共享数据；\n- 每次**仅允许一个进程**在管程内执行某个内部过程。"},{"type":"Paragraph","children":[{"type":"Strong","children":[{"type":"Str","value":"由编译器实现个进程互斥进入管程的过程","loc":{"start":{"line":24,"column":2},"end":{"line":24,"column":20}},"range":[301,319],"raw":"由编译器实现个进程互斥进入管程的过程"}],"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":22}},"range":[299,321],"raw":"**由编译器实现个进程互斥进入管程的过程**"}],"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":22}},"range":[299,321],"raw":"**由编译器实现个进程互斥进入管程的过程**"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"Java中的管程","loc":{"start":{"line":28,"column":3},"end":{"line":28,"column":11}},"range":[328,336],"raw":"Java中的管程"}],"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":11}},"range":[325,336],"raw":"## Java中的管程"},{"type":"Paragraph","children":[{"type":"Str","value":"java中可以使用synchronized描述一个方法，这个方法在同一时间段内只能被一个进程调用","loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":48}},"range":[338,386],"raw":"java中可以使用synchronized描述一个方法，这个方法在同一时间段内只能被一个进程调用"}],"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":48}},"range":[338,386],"raw":"java中可以使用synchronized描述一个方法，这个方法在同一时间段内只能被一个进程调用"},{"type":"CodeBlock","lang":"java","meta":null,"value":"static class monitor{\n    private Item buffer[] = new Item[N];\n    private int count = 0;\n    \n    public synchronized void insert(Item item){\n        ......\n    }\n}","loc":{"start":{"line":32,"column":0},"end":{"line":41,"column":3}},"range":[388,565],"raw":"```java\nstatic class monitor{\n    private Item buffer[] = new Item[N];\n    private int count = 0;\n    \n    public synchronized void insert(Item item){\n        ......\n    }\n}\n```"}],"loc":{"start":{"line":1,"column":0},"end":{"line":43,"column":0}},"range":[0,567],"raw":"---\ntitle: '管程'\ntags: ['操作系统','管程']\n---\n# 管程\n\n信号量的缺点：使用信号量机制来解决同步问题的时候，不得不考虑**PV操作的顺序**，造成编写程序困难，易出错。\n\n## 管程的定义和基本特征\n\n管程是一种特殊的软件模块，组成：\n\n- 局部于管程的共享数据结构说明；\n- 对该数据结构结构进行操作的一组过程；\n- 对局部于管程的共享数据设置初始值的语句；\n- 管程的名字。\n\n管程的特征：\n\n- 局部于管程的数据只能被管程内的过程访问；\n- 一个进程只有通过管程内的过程才能进入管程访问共享数据；\n- 每次**仅允许一个进程**在管程内执行某个内部过程。\n\n**由编译器实现个进程互斥进入管程的过程**\n\n\n\n## Java中的管程\n\njava中可以使用synchronized描述一个方法，这个方法在同一时间段内只能被一个进程调用\n\n```java\nstatic class monitor{\n    private Item buffer[] = new Item[N];\n    private int count = 0;\n    \n    public synchronized void insert(Item item){\n        ......\n    }\n}\n```\n\n"},"catalogue":{"title":"管程","json-path":"2020-08-15-管程.json","mdate":"2022-08-30T14:19:31.454Z","tags":["操作系统","管程"]}}