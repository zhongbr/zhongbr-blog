{"ast":{"type":"Document","children":[{"type":"Yaml","value":"'title': 'webpack配置'\n'tags': ['前端', 'webpack', 'TypeScript']","loc":{"start":{"line":1,"column":0},"end":{"line":4,"column":3}},"range":[0,68],"raw":"---\n'title': 'webpack配置'\n'tags': ['前端', 'webpack', 'TypeScript']\n---"},{"type":"Header","depth":1,"children":[{"type":"Str","value":"Webpack配置","loc":{"start":{"line":6,"column":2},"end":{"line":6,"column":11}},"range":[72,81],"raw":"Webpack配置"}],"loc":{"start":{"line":6,"column":0},"end":{"line":6,"column":11}},"range":[70,81],"raw":"# Webpack配置"},{"type":"Paragraph","children":[{"type":"Str","value":"webpack是现代JavaScript程序的静态模块打包器，webpack打包应用程序时会先从入口程序出发，建立一张包含应用程序所有模块的依赖关系图，然后将这张依赖关系图转换成一个或者多个bundle。","loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":102}},"range":[83,185],"raw":"webpack是现代JavaScript程序的静态模块打包器，webpack打包应用程序时会先从入口程序出发，建立一张包含应用程序所有模块的依赖关系图，然后将这张依赖关系图转换成一个或者多个bundle。"}],"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":102}},"range":[83,185],"raw":"webpack是现代JavaScript程序的静态模块打包器，webpack打包应用程序时会先从入口程序出发，建立一张包含应用程序所有模块的依赖关系图，然后将这张依赖关系图转换成一个或者多个bundle。"},{"type":"Paragraph","children":[{"type":"Str","value":"官方文档：","loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":5}},"range":[187,192],"raw":"官方文档："},{"type":"Link","title":null,"url":"https://www.webpackjs.com/concepts/","children":[{"type":"Str","value":"webpack","loc":{"start":{"line":10,"column":6},"end":{"line":10,"column":13}},"range":[193,200],"raw":"webpack"}],"loc":{"start":{"line":10,"column":5},"end":{"line":10,"column":51}},"range":[192,238],"raw":"[webpack](https://www.webpackjs.com/concepts/)"}],"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"range":[187,238],"raw":"官方文档：[webpack](https://www.webpackjs.com/concepts/)"},{"type":"HorizontalRule","loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":3}},"range":[240,243],"raw":"---"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"[Entry] 入口","loc":{"start":{"line":14,"column":3},"end":{"line":14,"column":13}},"range":[248,258],"raw":"[Entry] 入口"}],"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":13}},"range":[245,258],"raw":"## [Entry] 入口"},{"type":"Paragraph","children":[{"type":"Str","value":"指示webpack应该使用哪个模块最为应用程序依赖关系图的开始，打包时webpack会找出所有与entry模块有直接或者间接依赖关系的模块，处理之后输出到bundle中。","loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":85}},"range":[260,345],"raw":"指示webpack应该使用哪个模块最为应用程序依赖关系图的开始，打包时webpack会找出所有与entry模块有直接或者间接依赖关系的模块，处理之后输出到bundle中。"}],"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":85}},"range":[260,345],"raw":"指示webpack应该使用哪个模块最为应用程序依赖关系图的开始，打包时webpack会找出所有与entry模块有直接或者间接依赖关系的模块，处理之后输出到bundle中。"},{"type":"Paragraph","children":[{"type":"Str","value":"entry可以配置成一个字符串，表示一个入口模块的路径，也可以被配置成一个键值对对象，键表示入口的name，值表示对应入口模块的路径。","loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":67}},"range":[347,414],"raw":"entry可以配置成一个字符串，表示一个入口模块的路径，也可以被配置成一个键值对对象，键表示入口的name，值表示对应入口模块的路径。"}],"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":67}},"range":[347,414],"raw":"entry可以配置成一个字符串，表示一个入口模块的路径，也可以被配置成一个键值对对象，键表示入口的name，值表示对应入口模块的路径。"},{"type":"CodeBlock","lang":"javascript","meta":null,"value":"module.exports = {\n  entry:{\n    entry_1: 'path/to/entry_1.js',\n    entry_2: 'path/to/entry_2.js'\n  }\n}","loc":{"start":{"line":20,"column":0},"end":{"line":27,"column":3}},"range":[416,537],"raw":"```javascript\nmodule.exports = {\n  entry:{\n    entry_1: 'path/to/entry_1.js',\n    entry_2: 'path/to/entry_2.js'\n  }\n}\n```"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"[Output] 出口","loc":{"start":{"line":29,"column":3},"end":{"line":29,"column":14}},"range":[542,553],"raw":"[Output] 出口"}],"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":14}},"range":[539,553],"raw":"## [Output] 出口"},{"type":"Paragraph","children":[{"type":"Str","value":"指示webpack应该讲bundles输出到的位置以及输出文件的命名规则，默认是 ","loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":41}},"range":[555,596],"raw":"指示webpack应该讲bundles输出到的位置以及输出文件的命名规则，默认是 "},{"type":"Strong","children":[{"type":"Str","value":"./dist","loc":{"start":{"line":31,"column":43},"end":{"line":31,"column":49}},"range":[598,604],"raw":"./dist"}],"loc":{"start":{"line":31,"column":41},"end":{"line":31,"column":51}},"range":[596,606],"raw":"**./dist**"}],"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":51}},"range":[555,606],"raw":"指示webpack应该讲bundles输出到的位置以及输出文件的命名规则，默认是 **./dist**"},{"type":"CodeBlock","lang":"javascript","meta":null,"value":"const path = require('path');\n\nmodule.exports = {\n  entry: './path/to/my/entry/file.js',\n  output: {\n    path: path.resolve(__dirname, 'dist'),\n    filename: 'my-first-webpack.bundle.js'\n  }\n};","loc":{"start":{"line":33,"column":0},"end":{"line":43,"column":3}},"range":[608,819],"raw":"```javascript\nconst path = require('path');\n\nmodule.exports = {\n  entry: './path/to/my/entry/file.js',\n  output: {\n    path: path.resolve(__dirname, 'dist'),\n    filename: 'my-first-webpack.bundle.js'\n  }\n};\n```"},{"type":"Paragraph","children":[{"type":"Str","value":"output字段的配置项：","loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":13}},"range":[821,834],"raw":"output字段的配置项："},{"type":"Link","title":null,"url":"https://www.webpackjs.com/configuration/output/","children":[{"type":"Str","value":"webpack-output","loc":{"start":{"line":45,"column":14},"end":{"line":45,"column":28}},"range":[835,849],"raw":"webpack-output"}],"loc":{"start":{"line":45,"column":13},"end":{"line":45,"column":78}},"range":[834,899],"raw":"[webpack-output](https://www.webpackjs.com/configuration/output/)"}],"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":78}},"range":[821,899],"raw":"output字段的配置项：[webpack-output](https://www.webpackjs.com/configuration/output/)"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"[Loader]","loc":{"start":{"line":47,"column":3},"end":{"line":47,"column":11}},"range":[904,912],"raw":"[Loader]"}],"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":11}},"range":[901,912],"raw":"## [Loader]"},{"type":"Paragraph","children":[{"type":"Str","value":"webpack本身只能处理JavaScript，所以处理非JavaScript文件时，需要使用loader，loader可以让webpack可以处理非JavaScript文件，将非JavaScript文件处理成webpack可以打包处理的模块。","loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":122}},"range":[914,1036],"raw":"webpack本身只能处理JavaScript，所以处理非JavaScript文件时，需要使用loader，loader可以让webpack可以处理非JavaScript文件，将非JavaScript文件处理成webpack可以打包处理的模块。"}],"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":122}},"range":[914,1036],"raw":"webpack本身只能处理JavaScript，所以处理非JavaScript文件时，需要使用loader，loader可以让webpack可以处理非JavaScript文件，将非JavaScript文件处理成webpack可以打包处理的模块。"},{"type":"Paragraph","children":[{"type":"Str","value":"loader有两个字段：","loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":12}},"range":[1038,1050],"raw":"loader有两个字段："}],"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":12}},"range":[1038,1050],"raw":"loader有两个字段："},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"test: 用来标识出应该被处理的文件的文件名的正则表达式","loc":{"start":{"line":53,"column":2},"end":{"line":53,"column":31}},"range":[1054,1083],"raw":"test: 用来标识出应该被处理的文件的文件名的正则表达式"}],"loc":{"start":{"line":53,"column":2},"end":{"line":53,"column":31}},"range":[1054,1083],"raw":"test: 用来标识出应该被处理的文件的文件名的正则表达式"}],"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":31}},"range":[1052,1083],"raw":"- test: 用来标识出应该被处理的文件的文件名的正则表达式"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"use: 用来标识处理满足test正则表达式的文件时应该使用的loader","loc":{"start":{"line":54,"column":2},"end":{"line":54,"column":39}},"range":[1086,1123],"raw":"use: 用来标识处理满足test正则表达式的文件时应该使用的loader"}],"loc":{"start":{"line":54,"column":2},"end":{"line":54,"column":39}},"range":[1086,1123],"raw":"use: 用来标识处理满足test正则表达式的文件时应该使用的loader"}],"loc":{"start":{"line":54,"column":0},"end":{"line":54,"column":39}},"range":[1084,1123],"raw":"- use: 用来标识处理满足test正则表达式的文件时应该使用的loader"}],"loc":{"start":{"line":53,"column":0},"end":{"line":54,"column":39}},"range":[1052,1123],"raw":"- test: 用来标识出应该被处理的文件的文件名的正则表达式\n- use: 用来标识处理满足test正则表达式的文件时应该使用的loader"},{"type":"HorizontalRule","loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":3}},"range":[1125,1128],"raw":"---"},{"type":"Paragraph","children":[{"type":"Str","value":"例如如下的配置告诉webpack在遇到 require('xxx.txt')文件的时候，应该先使用raw-loader处理之后再继续进行webpack处理。","loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":78}},"range":[1130,1208],"raw":"例如如下的配置告诉webpack在遇到 require('xxx.txt')文件的时候，应该先使用raw-loader处理之后再继续进行webpack处理。"}],"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":78}},"range":[1130,1208],"raw":"例如如下的配置告诉webpack在遇到 require('xxx.txt')文件的时候，应该先使用raw-loader处理之后再继续进行webpack处理。"},{"type":"CodeBlock","lang":"javascript","meta":null,"value":"const path = require('path');\n\nconst config = {\n  output: {\n    filename: 'my-first-webpack.bundle.js'\n  },\n  module: {\n    rules: [\n      { test: /\\.txt$/, use: 'raw-loader' }\n    ]\n  }\n};\n\nmodule.exports = config;","loc":{"start":{"line":60,"column":0},"end":{"line":75,"column":3}},"range":[1210,1443],"raw":"```javascript\nconst path = require('path');\n\nconst config = {\n  output: {\n    filename: 'my-first-webpack.bundle.js'\n  },\n  module: {\n    rules: [\n      { test: /\\.txt$/, use: 'raw-loader' }\n    ]\n  }\n};\n\nmodule.exports = config;\n```"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"[Plugin] 插件","loc":{"start":{"line":79,"column":3},"end":{"line":79,"column":14}},"range":[1450,1461],"raw":"[Plugin] 插件"}],"loc":{"start":{"line":79,"column":0},"end":{"line":79,"column":14}},"range":[1447,1461],"raw":"## [Plugin] 插件"},{"type":"Paragraph","children":[{"type":"Str","value":"webpack的plugin可以实现loader无法实现的其他功能，插件是一个具有apply方法的对象，可以在实例化的时候向其传递参数。","loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":68}},"range":[1463,1531],"raw":"webpack的plugin可以实现loader无法实现的其他功能，插件是一个具有apply方法的对象，可以在实例化的时候向其传递参数。"}],"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":68}},"range":[1463,1531],"raw":"webpack的plugin可以实现loader无法实现的其他功能，插件是一个具有apply方法的对象，可以在实例化的时候向其传递参数。"},{"type":"CodeBlock","lang":"javascript","meta":null,"value":"const HtmlWebpackPlugin = require('html-webpack-plugin'); //通过 npm 安装\nconst webpack = require('webpack'); //访问内置的插件\nconst path = require('path');\n\nconst config = {\n  entry: './path/to/my/entry/file.js',\n  output: {\n    filename: 'my-first-webpack.bundle.js',\n    path: path.resolve(__dirname, 'dist')\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.(js|jsx)$/,\n        use: 'babel-loader'\n      }\n    ]\n  },\n  plugins: [\n    new webpack.optimize.UglifyJsPlugin(),\n    new HtmlWebpackPlugin({template: './src/index.html'})\n  ]\n};\n\nmodule.exports = config","loc":{"start":{"line":83,"column":0},"end":{"line":109,"column":3}},"range":[1533,2111],"raw":"```javascript\nconst HtmlWebpackPlugin = require('html-webpack-plugin'); //通过 npm 安装\nconst webpack = require('webpack'); //访问内置的插件\nconst path = require('path');\n\nconst config = {\n  entry: './path/to/my/entry/file.js',\n  output: {\n    filename: 'my-first-webpack.bundle.js',\n    path: path.resolve(__dirname, 'dist')\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.(js|jsx)$/,\n        use: 'babel-loader'\n      }\n    ]\n  },\n  plugins: [\n    new webpack.optimize.UglifyJsPlugin(),\n    new HtmlWebpackPlugin({template: './src/index.html'})\n  ]\n};\n\nmodule.exports = config\n```"}],"loc":{"start":{"line":1,"column":0},"end":{"line":111,"column":0}},"range":[0,2113],"raw":"---\n'title': 'webpack配置'\n'tags': ['前端', 'webpack', 'TypeScript']\n---\n\n# Webpack配置\n\nwebpack是现代JavaScript程序的静态模块打包器，webpack打包应用程序时会先从入口程序出发，建立一张包含应用程序所有模块的依赖关系图，然后将这张依赖关系图转换成一个或者多个bundle。\n\n官方文档：[webpack](https://www.webpackjs.com/concepts/)\n\n---\n\n## [Entry] 入口\n\n指示webpack应该使用哪个模块最为应用程序依赖关系图的开始，打包时webpack会找出所有与entry模块有直接或者间接依赖关系的模块，处理之后输出到bundle中。\n\nentry可以配置成一个字符串，表示一个入口模块的路径，也可以被配置成一个键值对对象，键表示入口的name，值表示对应入口模块的路径。\n\n```javascript\nmodule.exports = {\n  entry:{\n    entry_1: 'path/to/entry_1.js',\n    entry_2: 'path/to/entry_2.js'\n  }\n}\n```\n\n## [Output] 出口\n\n指示webpack应该讲bundles输出到的位置以及输出文件的命名规则，默认是 **./dist**\n\n```javascript\nconst path = require('path');\n\nmodule.exports = {\n  entry: './path/to/my/entry/file.js',\n  output: {\n    path: path.resolve(__dirname, 'dist'),\n    filename: 'my-first-webpack.bundle.js'\n  }\n};\n```\n\noutput字段的配置项：[webpack-output](https://www.webpackjs.com/configuration/output/)\n\n## [Loader]\n\nwebpack本身只能处理JavaScript，所以处理非JavaScript文件时，需要使用loader，loader可以让webpack可以处理非JavaScript文件，将非JavaScript文件处理成webpack可以打包处理的模块。\n\nloader有两个字段：\n\n- test: 用来标识出应该被处理的文件的文件名的正则表达式\n- use: 用来标识处理满足test正则表达式的文件时应该使用的loader\n\n---\n\n例如如下的配置告诉webpack在遇到 require('xxx.txt')文件的时候，应该先使用raw-loader处理之后再继续进行webpack处理。\n\n```javascript\nconst path = require('path');\n\nconst config = {\n  output: {\n    filename: 'my-first-webpack.bundle.js'\n  },\n  module: {\n    rules: [\n      { test: /\\.txt$/, use: 'raw-loader' }\n    ]\n  }\n};\n\nmodule.exports = config;\n```\n\n\n\n## [Plugin] 插件\n\nwebpack的plugin可以实现loader无法实现的其他功能，插件是一个具有apply方法的对象，可以在实例化的时候向其传递参数。\n\n```javascript\nconst HtmlWebpackPlugin = require('html-webpack-plugin'); //通过 npm 安装\nconst webpack = require('webpack'); //访问内置的插件\nconst path = require('path');\n\nconst config = {\n  entry: './path/to/my/entry/file.js',\n  output: {\n    filename: 'my-first-webpack.bundle.js',\n    path: path.resolve(__dirname, 'dist')\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.(js|jsx)$/,\n        use: 'babel-loader'\n      }\n    ]\n  },\n  plugins: [\n    new webpack.optimize.UglifyJsPlugin(),\n    new HtmlWebpackPlugin({template: './src/index.html'})\n  ]\n};\n\nmodule.exports = config\n```\n\n"},"catalogue":{"title":"webpack配置","json-path":"2020-11-25-webpack配置.json","mdate":"2022-08-30T14:19:31.455Z","tags":["前端","webpack","TypeScript"]}}