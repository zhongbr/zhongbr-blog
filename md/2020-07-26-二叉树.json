{"ast":{"type":"Document","children":[{"type":"Yaml","value":"tags: ['数据结构','树']","loc":{"start":{"line":1,"column":0},"end":{"line":3,"column":3}},"range":[0,26],"raw":"---\ntags: ['数据结构','树']\n---"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"二叉树","loc":{"start":{"line":5,"column":3},"end":{"line":5,"column":6}},"range":[31,34],"raw":"二叉树"}],"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":6}},"range":[28,34],"raw":"## 二叉树"},{"type":"BlockQuote","children":[{"type":"Paragraph","children":[{"type":"Str","value":"每个结点至多有两棵子树，且子树有左右之分，不可以颠倒次序的树称为","loc":{"start":{"line":7,"column":2},"end":{"line":7,"column":34}},"range":[38,70],"raw":"每个结点至多有两棵子树，且子树有左右之分，不可以颠倒次序的树称为"},{"type":"Strong","children":[{"type":"Str","value":"二叉树","loc":{"start":{"line":7,"column":36},"end":{"line":7,"column":39}},"range":[72,75],"raw":"二叉树"}],"loc":{"start":{"line":7,"column":34},"end":{"line":7,"column":41}},"range":[70,77],"raw":"**二叉树**"},{"type":"Str","value":"。","loc":{"start":{"line":7,"column":41},"end":{"line":7,"column":42}},"range":[77,78],"raw":"。"}],"loc":{"start":{"line":7,"column":2},"end":{"line":7,"column":42}},"range":[38,78],"raw":"每个结点至多有两棵子树，且子树有左右之分，不可以颠倒次序的树称为**二叉树**。"}],"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"range":[36,78],"raw":"> 每个结点至多有两棵子树，且子树有左右之分，不可以颠倒次序的树称为**二叉树**。"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"满二叉树","loc":{"start":{"line":9,"column":4},"end":{"line":9,"column":8}},"range":[84,88],"raw":"满二叉树"}],"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":8}},"range":[80,88],"raw":"### 满二叉树"},{"type":"BlockQuote","children":[{"type":"Paragraph","children":[{"type":"Str","value":"一棵深度为k且有$$2^{k}-1$$个结点的二叉树称为","loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":30}},"range":[92,120],"raw":"一棵深度为k且有$$2^{k}-1$$个结点的二叉树称为"},{"type":"Strong","children":[{"type":"Str","value":"满二叉树","loc":{"start":{"line":11,"column":32},"end":{"line":11,"column":36}},"range":[122,126],"raw":"满二叉树"}],"loc":{"start":{"line":11,"column":30},"end":{"line":11,"column":38}},"range":[120,128],"raw":"**满二叉树**"},{"type":"Str","value":"，即每一层上的结点数都是最大结点数。","loc":{"start":{"line":11,"column":38},"end":{"line":11,"column":56}},"range":[128,146],"raw":"，即每一层上的结点数都是最大结点数。"}],"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":56}},"range":[92,146],"raw":"一棵深度为k且有$$2^{k}-1$$个结点的二叉树称为**满二叉树**，即每一层上的结点数都是最大结点数。"}],"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":56}},"range":[90,146],"raw":"> 一棵深度为k且有$$2^{k}-1$$个结点的二叉树称为**满二叉树**，即每一层上的结点数都是最大结点数。"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"完全二叉树","loc":{"start":{"line":13,"column":4},"end":{"line":13,"column":9}},"range":[152,157],"raw":"完全二叉树"}],"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":9}},"range":[148,157],"raw":"### 完全二叉树"},{"type":"BlockQuote","children":[{"type":"Paragraph","children":[{"type":"Str","value":"一个深度为k的二叉树，终端结点只出现在第k层和第k-1层上，且第k层所有的结点都聚集在左边的二叉树称为","loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":53}},"range":[161,212],"raw":"一个深度为k的二叉树，终端结点只出现在第k层和第k-1层上，且第k层所有的结点都聚集在左边的二叉树称为"},{"type":"Strong","children":[{"type":"Str","value":"完全二叉树","loc":{"start":{"line":15,"column":55},"end":{"line":15,"column":60}},"range":[214,219],"raw":"完全二叉树"}],"loc":{"start":{"line":15,"column":53},"end":{"line":15,"column":62}},"range":[212,221],"raw":"**完全二叉树**"},{"type":"Str","value":"。","loc":{"start":{"line":15,"column":62},"end":{"line":15,"column":63}},"range":[221,222],"raw":"。"}],"loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":63}},"range":[161,222],"raw":"一个深度为k的二叉树，终端结点只出现在第k层和第k-1层上，且第k层所有的结点都聚集在左边的二叉树称为**完全二叉树**。"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/26/lUAKTQwhbxjROCL.png","alt":"PNG?? 2.png","loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":67}},"range":[227,292],"raw":"![PNG?? 2.png](https://i.loli.net/2020/07/26/lUAKTQwhbxjROCL.png)"}],"loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":67}},"range":[227,292],"raw":"![PNG?? 2.png](https://i.loli.net/2020/07/26/lUAKTQwhbxjROCL.png)"}],"loc":{"start":{"line":15,"column":0},"end":{"line":17,"column":67}},"range":[159,292],"raw":"> 一个深度为k的二叉树，终端结点只出现在第k层和第k-1层上，且第k层所有的结点都聚集在左边的二叉树称为**完全二叉树**。\n>\n> ![PNG?? 2.png](https://i.loli.net/2020/07/26/lUAKTQwhbxjROCL.png)"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"二叉树的性质","loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":10}},"range":[298,304],"raw":"二叉树的性质"}],"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":10}},"range":[294,304],"raw":"### 二叉树的性质"},{"type":"List","ordered":true,"start":1,"spread":true,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"二叉树的第i层至多有$$2^{i-1}(i \\geq 1)$$个结点","loc":{"start":{"line":21,"column":3},"end":{"line":21,"column":37}},"range":[309,343],"raw":"二叉树的第i层至多有$$2^{i-1}(i \\geq 1)$$个结点"}],"loc":{"start":{"line":21,"column":3},"end":{"line":21,"column":37}},"range":[309,343],"raw":"二叉树的第i层至多有$$2^{i-1}(i \\geq 1)$$个结点"}],"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}},"range":[306,343],"raw":"1. 二叉树的第i层至多有$$2^{i-1}(i \\geq 1)$$个结点"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"深度为k的二叉树至多有$$2^{k}-1(k\\geq1)$$个结点","loc":{"start":{"line":23,"column":3},"end":{"line":23,"column":36}},"range":[348,381],"raw":"深度为k的二叉树至多有$$2^{k}-1(k\\geq1)$$个结点"}],"loc":{"start":{"line":23,"column":3},"end":{"line":23,"column":36}},"range":[348,381],"raw":"深度为k的二叉树至多有$$2^{k}-1(k\\geq1)$$个结点"}],"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}},"range":[345,381],"raw":"2. 深度为k的二叉树至多有$$2^{k}-1(k\\geq1)$$个结点"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"对于任意一棵二叉树，如果其终端结点数为$$n_{0}$$，度为2的结点数为$$n_{2}$$，则$$n_{0}=n_{2}+1$$","loc":{"start":{"line":25,"column":3},"end":{"line":25,"column":68}},"range":[386,451],"raw":"对于任意一棵二叉树，如果其终端结点数为$$n_{0}$$，度为2的结点数为$$n_{2}$$，则$$n_{0}=n_{2}+1$$"}],"loc":{"start":{"line":25,"column":3},"end":{"line":25,"column":68}},"range":[386,451],"raw":"对于任意一棵二叉树，如果其终端结点数为$$n_{0}$$，度为2的结点数为$$n_{2}$$，则$$n_{0}=n_{2}+1$$"}],"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":68}},"range":[383,451],"raw":"3. 对于任意一棵二叉树，如果其终端结点数为$$n_{0}$$，度为2的结点数为$$n_{2}$$，则$$n_{0}=n_{2}+1$$"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"具有n个结点的完全二叉树的深度为$$[log_{2}n]+1$$。","loc":{"start":{"line":27,"column":3},"end":{"line":27,"column":36}},"range":[456,489],"raw":"具有n个结点的完全二叉树的深度为$$[log_{2}n]+1$$。"}],"loc":{"start":{"line":27,"column":3},"end":{"line":27,"column":36}},"range":[456,489],"raw":"具有n个结点的完全二叉树的深度为$$[log_{2}n]+1$$。"}],"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":36}},"range":[453,489],"raw":"4. 具有n个结点的完全二叉树的深度为$$[log_{2}n]+1$$。"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"具有n个结点的完全二叉树，其结点按照层序编号，对任意一个结点$$i(1 \\leq i \\leq n)$$，有：","loc":{"start":{"line":29,"column":3},"end":{"line":29,"column":58}},"range":[494,549],"raw":"具有n个结点的完全二叉树，其结点按照层序编号，对任意一个结点$$i(1 \\leq i \\leq n)$$，有："}],"loc":{"start":{"line":29,"column":3},"end":{"line":29,"column":58}},"range":[494,549],"raw":"具有n个结点的完全二叉树，其结点按照层序编号，对任意一个结点$$i(1 \\leq i \\leq n)$$，有："}],"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":58}},"range":[491,549],"raw":"5. 具有n个结点的完全二叉树，其结点按照层序编号，对任意一个结点$$i(1 \\leq i \\leq n)$$，有："}],"loc":{"start":{"line":21,"column":0},"end":{"line":29,"column":58}},"range":[306,549],"raw":"1. 二叉树的第i层至多有$$2^{i-1}(i \\geq 1)$$个结点\n\n2. 深度为k的二叉树至多有$$2^{k}-1(k\\geq1)$$个结点\n\n3. 对于任意一棵二叉树，如果其终端结点数为$$n_{0}$$，度为2的结点数为$$n_{2}$$，则$$n_{0}=n_{2}+1$$\n\n4. 具有n个结点的完全二叉树的深度为$$[log_{2}n]+1$$。\n\n5. 具有n个结点的完全二叉树，其结点按照层序编号，对任意一个结点$$i(1 \\leq i \\leq n)$$，有："},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"如果i=1，那么这个结点是根节点，如果i>1，则其双亲是[i/2]","loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":35}},"range":[552,585],"raw":"如果i=1，那么这个结点是根节点，如果i>1，则其双亲是[i/2]"}],"loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":35}},"range":[552,585],"raw":"如果i=1，那么这个结点是根节点，如果i>1，则其双亲是[i/2]"}],"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":35}},"range":[550,585],"raw":"- 如果i=1，那么这个结点是根节点，如果i>1，则其双亲是[i/2]"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"如果2i > n，则该结点无左孩子结点，否则其左孩子结点是2i","loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":33}},"range":[588,619],"raw":"如果2i > n，则该结点无左孩子结点，否则其左孩子结点是2i"}],"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":33}},"range":[588,619],"raw":"如果2i > n，则该结点无左孩子结点，否则其左孩子结点是2i"}],"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":33}},"range":[586,619],"raw":"- 如果2i > n，则该结点无左孩子结点，否则其左孩子结点是2i"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"如果2i+1 > n，则该结点无右孩子，否则其右孩子结点是2i+1","loc":{"start":{"line":32,"column":2},"end":{"line":32,"column":35}},"range":[622,655],"raw":"如果2i+1 > n，则该结点无右孩子，否则其右孩子结点是2i+1"}],"loc":{"start":{"line":32,"column":2},"end":{"line":32,"column":35}},"range":[622,655],"raw":"如果2i+1 > n，则该结点无右孩子，否则其右孩子结点是2i+1"}],"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":35}},"range":[620,655],"raw":"- 如果2i+1 > n，则该结点无右孩子，否则其右孩子结点是2i+1"}],"loc":{"start":{"line":30,"column":0},"end":{"line":32,"column":35}},"range":[550,655],"raw":"- 如果i=1，那么这个结点是根节点，如果i>1，则其双亲是[i/2]\n- 如果2i > n，则该结点无左孩子结点，否则其左孩子结点是2i\n- 如果2i+1 > n，则该结点无右孩子，否则其右孩子结点是2i+1"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"二叉树的存储结构","loc":{"start":{"line":36,"column":4},"end":{"line":36,"column":12}},"range":[663,671],"raw":"二叉树的存储结构"}],"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":12}},"range":[659,671],"raw":"### 二叉树的存储结构"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"顺序存储结构","loc":{"start":{"line":38,"column":5},"end":{"line":38,"column":11}},"range":[678,684],"raw":"顺序存储结构"}],"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":11}},"range":[673,684],"raw":"#### 顺序存储结构"},{"type":"Paragraph","children":[{"type":"Str","value":"对于完全二叉树，可以用一组连续的存储单元，自上而下，自左至右存储完全二叉树的每一个结点元素，即将完全二叉树编号为i的结点存储在一位数组的下表为i-1的存储单元中。","loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":81}},"range":[686,767],"raw":"对于完全二叉树，可以用一组连续的存储单元，自上而下，自左至右存储完全二叉树的每一个结点元素，即将完全二叉树编号为i的结点存储在一位数组的下表为i-1的存储单元中。"}],"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":81}},"range":[686,767],"raw":"对于完全二叉树，可以用一组连续的存储单元，自上而下，自左至右存储完全二叉树的每一个结点元素，即将完全二叉树编号为i的结点存储在一位数组的下表为i-1的存储单元中。"},{"type":"Paragraph","children":[{"type":"Str","value":"对于一般的二叉树，应将其结点与完全二叉树的每个结点对应，存储在一维数组中。","loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":37}},"range":[769,806],"raw":"对于一般的二叉树，应将其结点与完全二叉树的每个结点对应，存储在一维数组中。"}],"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":37}},"range":[769,806],"raw":"对于一般的二叉树，应将其结点与完全二叉树的每个结点对应，存储在一维数组中。"},{"type":"Paragraph","children":[{"type":"Strong","children":[{"type":"Str","value":"如果是一棵深度为k的单支树，仍然需要","loc":{"start":{"line":44,"column":2},"end":{"line":44,"column":20}},"range":[810,828],"raw":"如果是一棵深度为k的单支树，仍然需要"}],"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":22}},"range":[808,830],"raw":"**如果是一棵深度为k的单支树，仍然需要**"},{"type":"Str","value":"\n$$\n2^{k}-1\n$$\n","loc":{"start":{"line":44,"column":22},"end":{"line":48,"column":0}},"range":[830,845],"raw":"\n$$\n2^{k}-1\n$$\n"},{"type":"Strong","children":[{"type":"Str","value":"个存储单元","loc":{"start":{"line":48,"column":2},"end":{"line":48,"column":7}},"range":[847,852],"raw":"个存储单元"}],"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":9}},"range":[845,854],"raw":"**个存储单元**"}],"loc":{"start":{"line":44,"column":0},"end":{"line":48,"column":9}},"range":[808,854],"raw":"**如果是一棵深度为k的单支树，仍然需要**\n$$\n2^{k}-1\n$$\n**个存储单元**"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"链式存储结构","loc":{"start":{"line":52,"column":5},"end":{"line":52,"column":11}},"range":[863,869],"raw":"链式存储结构"}],"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":11}},"range":[858,869],"raw":"#### 链式存储结构"},{"type":"Paragraph","children":[{"type":"Str","value":"使用包含有**数据域和左、右指针域（可以增加一个指向双亲结点指针域）**的结点组成的二叉链表（三叉链表）存储二叉树。","loc":{"start":{"line":54,"column":0},"end":{"line":54,"column":58}},"range":[871,929],"raw":"使用包含有**数据域和左、右指针域（可以增加一个指向双亲结点指针域）**的结点组成的二叉链表（三叉链表）存储二叉树。"}],"loc":{"start":{"line":54,"column":0},"end":{"line":54,"column":58}},"range":[871,929],"raw":"使用包含有**数据域和左、右指针域（可以增加一个指向双亲结点指针域）**的结点组成的二叉链表（三叉链表）存储二叉树。"},{"type":"Paragraph","children":[{"type":"Str","value":"三叉链表存储的二叉树相较于二叉链表存储的二叉树，寻找结点的双亲结点更加容易，可以直接找到，而二叉链表存储而查询要寻找一个结点的双亲结点需要从头遍历。","loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":74}},"range":[931,1005],"raw":"三叉链表存储的二叉树相较于二叉链表存储的二叉树，寻找结点的双亲结点更加容易，可以直接找到，而二叉链表存储而查询要寻找一个结点的双亲结点需要从头遍历。"}],"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":74}},"range":[931,1005],"raw":"三叉链表存储的二叉树相较于二叉链表存储的二叉树，寻找结点的双亲结点更加容易，可以直接找到，而二叉链表存储而查询要寻找一个结点的双亲结点需要从头遍历。"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/26/QMr2Gojc4tFbmyv.png","alt":"PNG??.png","loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":63}},"range":[1007,1070],"raw":"![PNG??.png](https://i.loli.net/2020/07/26/QMr2Gojc4tFbmyv.png)"}],"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":63}},"range":[1007,1070],"raw":"![PNG??.png](https://i.loli.net/2020/07/26/QMr2Gojc4tFbmyv.png)"}],"loc":{"start":{"line":1,"column":0},"end":{"line":58,"column":63}},"range":[0,1070],"raw":"---\ntags: ['数据结构','树']\n---\n\n## 二叉树\n\n> 每个结点至多有两棵子树，且子树有左右之分，不可以颠倒次序的树称为**二叉树**。\n\n### 满二叉树\n\n> 一棵深度为k且有$$2^{k}-1$$个结点的二叉树称为**满二叉树**，即每一层上的结点数都是最大结点数。\n\n### 完全二叉树\n\n> 一个深度为k的二叉树，终端结点只出现在第k层和第k-1层上，且第k层所有的结点都聚集在左边的二叉树称为**完全二叉树**。\n>\n> ![PNG?? 2.png](https://i.loli.net/2020/07/26/lUAKTQwhbxjROCL.png)\n\n### 二叉树的性质\n\n1. 二叉树的第i层至多有$$2^{i-1}(i \\geq 1)$$个结点\n\n2. 深度为k的二叉树至多有$$2^{k}-1(k\\geq1)$$个结点\n\n3. 对于任意一棵二叉树，如果其终端结点数为$$n_{0}$$，度为2的结点数为$$n_{2}$$，则$$n_{0}=n_{2}+1$$\n\n4. 具有n个结点的完全二叉树的深度为$$[log_{2}n]+1$$。\n\n5. 具有n个结点的完全二叉树，其结点按照层序编号，对任意一个结点$$i(1 \\leq i \\leq n)$$，有：\n- 如果i=1，那么这个结点是根节点，如果i>1，则其双亲是[i/2]\n- 如果2i > n，则该结点无左孩子结点，否则其左孩子结点是2i\n- 如果2i+1 > n，则该结点无右孩子，否则其右孩子结点是2i+1\n\n\n\n### 二叉树的存储结构\n\n#### 顺序存储结构\n\n对于完全二叉树，可以用一组连续的存储单元，自上而下，自左至右存储完全二叉树的每一个结点元素，即将完全二叉树编号为i的结点存储在一位数组的下表为i-1的存储单元中。\n\n对于一般的二叉树，应将其结点与完全二叉树的每个结点对应，存储在一维数组中。\n\n**如果是一棵深度为k的单支树，仍然需要**\n$$\n2^{k}-1\n$$\n**个存储单元**\n\n\n\n#### 链式存储结构\n\n使用包含有**数据域和左、右指针域（可以增加一个指向双亲结点指针域）**的结点组成的二叉链表（三叉链表）存储二叉树。\n\n三叉链表存储的二叉树相较于二叉链表存储的二叉树，寻找结点的双亲结点更加容易，可以直接找到，而二叉链表存储而查询要寻找一个结点的双亲结点需要从头遍历。\n\n![PNG??.png](https://i.loli.net/2020/07/26/QMr2Gojc4tFbmyv.png)"},"catalogue":{"title":"2020-07-26-二叉树","json-path":"2020-07-26-二叉树.json","mdate":"2022-08-30T14:19:31.448Z","tags":["数据结构","树"]}}