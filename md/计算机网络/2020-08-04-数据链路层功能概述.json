{"ast":{"type":"Document","children":[{"type":"Yaml","value":"title: '数据链路层功能概述'\ntags: ['计算机网络','数据链路层']","loc":{"start":{"line":1,"column":0},"end":{"line":4,"column":3}},"range":[0,50],"raw":"﻿---\ntitle: '数据链路层功能概述'\ntags: ['计算机网络','数据链路层']\n--","visible":false},{"type":"Header","depth":1,"children":[{"type":"Str","value":"数据链路层功能概述","loc":{"start":{"line":5,"column":2},"end":{"line":5,"column":11}},"range":[53,62],"raw":" 数据链路层功能概"}],"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":11}},"range":[51,62],"raw":"\n# 数据链路层功能概"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"数据链路层的基本概念","loc":{"start":{"line":7,"column":3},"end":{"line":7,"column":13}},"range":[67,77],"raw":" 数据链路层的基本概"}],"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":13}},"range":[64,77],"raw":"\n## 数据链路层的基本概"},{"type":"Paragraph","children":[{"type":"Str","value":"结点：主机、路由器","loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":9}},"range":[79,88],"raw":"\n结点：主机、路由"}],"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":9}},"range":[79,88],"raw":"\n结点：主机、路由"},{"type":"Paragraph","children":[{"type":"Str","value":"链路：网络中两个结点之间的","loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":13}},"range":[90,103],"raw":"\n链路：网络中两个结点之间"},{"type":"Strong","children":[{"type":"Str","value":"物理通道","loc":{"start":{"line":11,"column":15},"end":{"line":11,"column":19}},"range":[105,109],"raw":"*物理通"}],"loc":{"start":{"line":11,"column":13},"end":{"line":11,"column":21}},"range":[103,111],"raw":"的**物理通道*"},{"type":"Str","value":"，链路的主要介质有双绞线、光纤、微波等，分有线链路和无线链路。","loc":{"start":{"line":11,"column":21},"end":{"line":11,"column":52}},"range":[111,142],"raw":"*，链路的主要介质有双绞线、光纤、微波等，分有线链路和无线链路"}],"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":52}},"range":[90,142],"raw":"\n链路：网络中两个结点之间的**物理通道**，链路的主要介质有双绞线、光纤、微波等，分有线链路和无线链路"},{"type":"Paragraph","children":[{"type":"Str","value":"数据链路：网络中两个结点之间的","loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":15}},"range":[144,159],"raw":"\n数据链路：网络中两个结点之间"},{"type":"Strong","children":[{"type":"Str","value":"逻辑通道","loc":{"start":{"line":13,"column":17},"end":{"line":13,"column":21}},"range":[161,165],"raw":"*逻辑通"}],"loc":{"start":{"line":13,"column":15},"end":{"line":13,"column":23}},"range":[159,167],"raw":"的**逻辑通道*"},{"type":"Str","value":"，把实现控制数据传输协议的硬件和软件加到链路上就构成了数据链路。","loc":{"start":{"line":13,"column":23},"end":{"line":13,"column":55}},"range":[167,199],"raw":"*，把实现控制数据传输协议的硬件和软件加到链路上就构成了数据链路"}],"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":55}},"range":[144,199],"raw":"\n数据链路：网络中两个结点之间的**逻辑通道**，把实现控制数据传输协议的硬件和软件加到链路上就构成了数据链路"},{"type":"Paragraph","children":[{"type":"Str","value":"帧：链路层的协议数据单元，封装网络层的数据报。","loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":23}},"range":[201,224],"raw":"\n帧：链路层的协议数据单元，封装网络层的数据报"}],"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":23}},"range":[201,224],"raw":"\n帧：链路层的协议数据单元，封装网络层的数据报"},{"type":"Paragraph","children":[{"type":"Strong","children":[{"type":"Str","value":"数据链路层","loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":7}},"range":[228,233],"raw":"*数据链路"}],"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":9}},"range":[226,235],"raw":"\n**数据链路层*"},{"type":"Str","value":"负责通过一条链路向结点的另一个链路传送数据报。在物理层提供的服务的基础上，向网络层提供服务，最基本的服务是将来源于网络层的数据可靠地传输到相邻结点地目标机网络层。主要作用是加强物理层传输原始比特流的功能，将物理层提供的可能出错的物理连接改造为","loc":{"start":{"line":17,"column":9},"end":{"line":17,"column":130}},"range":[235,356],"raw":"*负责通过一条链路向结点的另一个链路传送数据报。在物理层提供的服务的基础上，向网络层提供服务，最基本的服务是将来源于网络层的数据可靠地传输到相邻结点地目标机网络层。主要作用是加强物理层传输原始比特流的功能，将物理层提供的可能出错的物理连接改造"},{"type":"Strong","children":[{"type":"Str","value":"逻辑上无差错的数据链路","loc":{"start":{"line":17,"column":132},"end":{"line":17,"column":143}},"range":[358,369],"raw":"*逻辑上无差错的数据链"}],"loc":{"start":{"line":17,"column":130},"end":{"line":17,"column":145}},"range":[356,371],"raw":"为**逻辑上无差错的数据链路*"},{"type":"Str","value":"，使之对网络层表现为一条无差错的链路。","loc":{"start":{"line":17,"column":145},"end":{"line":17,"column":164}},"range":[371,390],"raw":"*，使之对网络层表现为一条无差错的链路"}],"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":164}},"range":[226,390],"raw":"\n**数据链路层**负责通过一条链路向结点的另一个链路传送数据报。在物理层提供的服务的基础上，向网络层提供服务，最基本的服务是将来源于网络层的数据可靠地传输到相邻结点地目标机网络层。主要作用是加强物理层传输原始比特流的功能，将物理层提供的可能出错的物理连接改造为**逻辑上无差错的数据链路**，使之对网络层表现为一条无差错的链路"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"数据链路层的功能","loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":12}},"range":[396,404],"raw":" 数据链路层的功"}],"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":12}},"range":[392,404],"raw":"\n### 数据链路层的功"},{"type":"List","ordered":true,"start":1,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"为网路层提供服务：无确认无连接服务，有确认无连接服务，有确认面向连接的服务。","loc":{"start":{"line":21,"column":3},"end":{"line":21,"column":41}},"range":[409,447],"raw":" 为网路层提供服务：无确认无连接服务，有确认无连接服务，有确认面向连接的服务"},{"type":"Strong","children":[{"type":"Str","value":"有连接的服务一定是有确认的！","loc":{"start":{"line":21,"column":43},"end":{"line":21,"column":57}},"range":[449,463],"raw":"*有连接的服务一定是有确认的"}],"loc":{"start":{"line":21,"column":41},"end":{"line":21,"column":59}},"range":[447,465],"raw":"。**有连接的服务一定是有确认的！*"}],"loc":{"start":{"line":21,"column":3},"end":{"line":21,"column":59}},"range":[409,465],"raw":" 为网路层提供服务：无确认无连接服务，有确认无连接服务，有确认面向连接的服务。**有连接的服务一定是有确认的！*"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"无确认无连接的服务：对丢失的包数据链路层不负责重发，由上层应用负责处理。适用于误码率低的通信通道或实时通信。","loc":{"start":{"line":22,"column":5},"end":{"line":22,"column":59}},"range":[471,525],"raw":" 无确认无连接的服务：对丢失的包数据链路层不负责重发，由上层应用负责处理。适用于误码率低的通信通道或实时通信"}],"loc":{"start":{"line":22,"column":5},"end":{"line":22,"column":59}},"range":[471,525],"raw":" 无确认无连接的服务：对丢失的包数据链路层不负责重发，由上层应用负责处理。适用于误码率低的通信通道或实时通信"}],"loc":{"start":{"line":22,"column":3},"end":{"line":22,"column":59}},"range":[469,525],"raw":" - 无确认无连接的服务：对丢失的包数据链路层不负责重发，由上层应用负责处理。适用于误码率低的通信通道或实时通信"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"有确认无连接的服务：不需要建立连接，但是目的机器收到数据后需要发送回执确认，源机器在一段时间内未收到确认就会重发。适用于误码率较高的通信通道。","loc":{"start":{"line":23,"column":5},"end":{"line":23,"column":76}},"range":[531,602],"raw":" 有确认无连接的服务：不需要建立连接，但是目的机器收到数据后需要发送回执确认，源机器在一段时间内未收到确认就会重发。适用于误码率较高的通信通道"}],"loc":{"start":{"line":23,"column":5},"end":{"line":23,"column":76}},"range":[531,602],"raw":" 有确认无连接的服务：不需要建立连接，但是目的机器收到数据后需要发送回执确认，源机器在一段时间内未收到确认就会重发。适用于误码率较高的通信通道"}],"loc":{"start":{"line":23,"column":3},"end":{"line":23,"column":76}},"range":[529,602],"raw":" - 有确认无连接的服务：不需要建立连接，但是目的机器收到数据后需要发送回执确认，源机器在一段时间内未收到确认就会重发。适用于误码率较高的通信通道"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"有确认有链接的服务：建立数据链路、传输帧、释放数据链路。每一帧都需要确认，才能发送下一帧。适用于对通信要求较高的场合。","loc":{"start":{"line":24,"column":5},"end":{"line":24,"column":64}},"range":[608,667],"raw":" 有确认有链接的服务：建立数据链路、传输帧、释放数据链路。每一帧都需要确认，才能发送下一帧。适用于对通信要求较高的场合"}],"loc":{"start":{"line":24,"column":5},"end":{"line":24,"column":64}},"range":[608,667],"raw":" 有确认有链接的服务：建立数据链路、传输帧、释放数据链路。每一帧都需要确认，才能发送下一帧。适用于对通信要求较高的场合"}],"loc":{"start":{"line":24,"column":3},"end":{"line":24,"column":64}},"range":[606,667],"raw":" - 有确认有链接的服务：建立数据链路、传输帧、释放数据链路。每一帧都需要确认，才能发送下一帧。适用于对通信要求较高的场合"}],"loc":{"start":{"line":22,"column":3},"end":{"line":24,"column":64}},"range":[469,667],"raw":" - 无确认无连接的服务：对丢失的包数据链路层不负责重发，由上层应用负责处理。适用于误码率低的通信通道或实时通信。\n   - 有确认无连接的服务：不需要建立连接，但是目的机器收到数据后需要发送回执确认，源机器在一段时间内未收到确认就会重发。适用于误码率较高的通信通道。\n   - 有确认有链接的服务：建立数据链路、传输帧、释放数据链路。每一帧都需要确认，才能发送下一帧。适用于对通信要求较高的场合"}],"loc":{"start":{"line":21,"column":0},"end":{"line":24,"column":64}},"range":[406,667],"raw":"\n1. 为网路层提供服务：无确认无连接服务，有确认无连接服务，有确认面向连接的服务。**有连接的服务一定是有确认的！**\n   - 无确认无连接的服务：对丢失的包数据链路层不负责重发，由上层应用负责处理。适用于误码率低的通信通道或实时通信。\n   - 有确认无连接的服务：不需要建立连接，但是目的机器收到数据后需要发送回执确认，源机器在一段时间内未收到确认就会重发。适用于误码率较高的通信通道。\n   - 有确认有链接的服务：建立数据链路、传输帧、释放数据链路。每一帧都需要确认，才能发送下一帧。适用于对通信要求较高的场合"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"链路管理：连接的建立、维持和释放（用于面向连接的服务）。","loc":{"start":{"line":25,"column":3},"end":{"line":25,"column":31}},"range":[671,699],"raw":" 链路管理：连接的建立、维持和释放（用于面向连接的服务）"}],"loc":{"start":{"line":25,"column":3},"end":{"line":25,"column":31}},"range":[671,699],"raw":" 链路管理：连接的建立、维持和释放（用于面向连接的服务）"}],"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":31}},"range":[668,699],"raw":"\n2. 链路管理：连接的建立、维持和释放（用于面向连接的服务）"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"组帧","loc":{"start":{"line":26,"column":3},"end":{"line":26,"column":5}},"range":[703,705],"raw":" 组"}],"loc":{"start":{"line":26,"column":3},"end":{"line":26,"column":5}},"range":[703,705],"raw":" 组"}],"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":5}},"range":[700,705],"raw":"\n3. 组"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"流量控制。","loc":{"start":{"line":27,"column":3},"end":{"line":27,"column":8}},"range":[709,714],"raw":" 流量控制"}],"loc":{"start":{"line":27,"column":3},"end":{"line":27,"column":8}},"range":[709,714],"raw":" 流量控制"}],"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":8}},"range":[706,714],"raw":"\n4. 流量控制"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"差错控制（帧错/位错）。","loc":{"start":{"line":28,"column":3},"end":{"line":28,"column":15}},"range":[718,730],"raw":" 差错控制（帧错/位错）"}],"loc":{"start":{"line":28,"column":3},"end":{"line":28,"column":15}},"range":[718,730],"raw":" 差错控制（帧错/位错）"}],"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":15}},"range":[715,730],"raw":"\n5. 差错控制（帧错/位错）"}],"loc":{"start":{"line":21,"column":0},"end":{"line":28,"column":15}},"range":[406,730],"raw":"\n1. 为网路层提供服务：无确认无连接服务，有确认无连接服务，有确认面向连接的服务。**有连接的服务一定是有确认的！**\n   - 无确认无连接的服务：对丢失的包数据链路层不负责重发，由上层应用负责处理。适用于误码率低的通信通道或实时通信。\n   - 有确认无连接的服务：不需要建立连接，但是目的机器收到数据后需要发送回执确认，源机器在一段时间内未收到确认就会重发。适用于误码率较高的通信通道。\n   - 有确认有链接的服务：建立数据链路、传输帧、释放数据链路。每一帧都需要确认，才能发送下一帧。适用于对通信要求较高的场合。\n2. 链路管理：连接的建立、维持和释放（用于面向连接的服务）。\n3. 组帧\n4. 流量控制。\n5. 差错控制（帧错/位错）"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"组帧","loc":{"start":{"line":30,"column":5},"end":{"line":30,"column":7}},"range":[737,739],"raw":" 组"}],"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":7}},"range":[732,739],"raw":"\n#### 组"},{"type":"Paragraph","children":[{"type":"Str","value":"在一段数据的前后部分添加头部和尾部，构成一个帧。接收端在收到物理层上交比特流后，就能根据首部和尾部标记，从收到的比特流中识别出帧的开始和结束。","loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":71}},"range":[741,812],"raw":"\n在一段数据的前后部分添加头部和尾部，构成一个帧。接收端在收到物理层上交比特流后，就能根据首部和尾部标记，从收到的比特流中识别出帧的开始和结束"}],"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":71}},"range":[741,812],"raw":"\n在一段数据的前后部分添加头部和尾部，构成一个帧。接收端在收到物理层上交比特流后，就能根据首部和尾部标记，从收到的比特流中识别出帧的开始和结束"},{"type":"Paragraph","children":[{"type":"Str","value":"帧同步：接收方应当能从接收到的二进制比特流中区分出帧的起始和终止","loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":32}},"range":[814,846],"raw":"\n帧同步：接收方应当能从接收到的二进制比特流中区分出帧的起始和终"}],"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":32}},"range":[814,846],"raw":"\n帧同步：接收方应当能从接收到的二进制比特流中区分出帧的起始和终"},{"type":"Paragraph","children":[{"type":"Str","value":"帧长：帧开始到帧结束的长度称为帧长","loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":17}},"range":[848,865],"raw":"\n帧长：帧开始到帧结束的长度称为帧"}],"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":17}},"range":[848,865],"raw":"\n帧长：帧开始到帧结束的长度称为帧"},{"type":"Paragraph","children":[{"type":"Str","value":"透明传输：不管要传输的数据是什么比特组合，都应该可以在链路上传送。如果传输的数据恰巧和某个控制信息相同的时候，要采取一定的措施，使接收方不会将这样的数据误认为是某种控制信息。这样才能保证数据链路层的传输时透明的。","loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":106}},"range":[867,973],"raw":"\n透明传输：不管要传输的数据是什么比特组合，都应该可以在链路上传送。如果传输的数据恰巧和某个控制信息相同的时候，要采取一定的措施，使接收方不会将这样的数据误认为是某种控制信息。这样才能保证数据链路层的传输时透明的"}],"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":106}},"range":[867,973],"raw":"\n透明传输：不管要传输的数据是什么比特组合，都应该可以在链路上传送。如果传输的数据恰巧和某个控制信息相同的时候，要采取一定的措施，使接收方不会将这样的数据误认为是某种控制信息。这样才能保证数据链路层的传输时透明的"},{"type":"Header","depth":5,"children":[{"type":"Str","value":"字符计数法","loc":{"start":{"line":40,"column":6},"end":{"line":40,"column":11}},"range":[981,986],"raw":" 字符计数"}],"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":11}},"range":[975,986],"raw":"\n##### 字符计数"},{"type":"Paragraph","children":[{"type":"Str","value":"帧首部使用一个计数字段（第一个字节，8位）来表明帧内的字符数。","loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":31}},"range":[988,1019],"raw":"\n帧首部使用一个计数字段（第一个字节，8位）来表明帧内的字符数"}],"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":31}},"range":[988,1019],"raw":"\n帧首部使用一个计数字段（第一个字节，8位）来表明帧内的字符数"},{"type":"Paragraph","children":[{"type":"Str","value":"缺点：如果帧的计数字段发生错误，会导致出错的帧和后面的帧都出现错误","loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":33}},"range":[1021,1054],"raw":"\n缺点：如果帧的计数字段发生错误，会导致出错的帧和后面的帧都出现错"}],"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":33}},"range":[1021,1054],"raw":"\n缺点：如果帧的计数字段发生错误，会导致出错的帧和后面的帧都出现错"},{"type":"Header","depth":5,"children":[{"type":"Str","value":"字符填充法","loc":{"start":{"line":46,"column":6},"end":{"line":46,"column":11}},"range":[1062,1067],"raw":" 字符填充"}],"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":11}},"range":[1056,1067],"raw":"\n##### 字符填充"},{"type":"Paragraph","children":[{"type":"Str","value":"使用特定的字节（定界符）表示帧的首部和帧的尾部。","loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":24}},"range":[1069,1093],"raw":"\n使用特定的字节（定界符）表示帧的首部和帧的尾部"}],"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":24}},"range":[1069,1093],"raw":"\n使用特定的字节（定界符）表示帧的首部和帧的尾部"},{"type":"Paragraph","children":[{"type":"Str","value":"适用于：","loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":4}},"range":[1095,1099],"raw":"\n适用于"}],"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":4}},"range":[1095,1099],"raw":"\n适用于"},{"type":"List","ordered":true,"start":1,"spread":true,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"传输的帧由文本组成时（文本文件内的字符都是从键盘输入的，都是ASCII码）不管从键盘上输入的什么字符都可以放在帧里传过去，即透明传输。","loc":{"start":{"line":51,"column":3},"end":{"line":51,"column":70}},"range":[1103,1170],"raw":" 传输的帧由文本组成时（文本文件内的字符都是从键盘输入的，都是ASCII码）不管从键盘上输入的什么字符都可以放在帧里传过去，即透明传输"}],"loc":{"start":{"line":51,"column":3},"end":{"line":51,"column":70}},"range":[1103,1170],"raw":" 传输的帧由文本组成时（文本文件内的字符都是从键盘输入的，都是ASCII码）不管从键盘上输入的什么字符都可以放在帧里传过去，即透明传输"}],"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":70}},"range":[1100,1170],"raw":"\n1. 传输的帧由文本组成时（文本文件内的字符都是从键盘输入的，都是ASCII码）不管从键盘上输入的什么字符都可以放在帧里传过去，即透明传输"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"当传送的帧是由非ASCII码的文本文件组成的时候（二进制代码的程序或图像等），就要采用字符填充方法实现透明传输。","loc":{"start":{"line":53,"column":3},"end":{"line":53,"column":59}},"range":[1175,1231],"raw":" 当传送的帧是由非ASCII码的文本文件组成的时候（二进制代码的程序或图像等），就要采用字符填充方法实现透明传输"}],"loc":{"start":{"line":53,"column":3},"end":{"line":53,"column":59}},"range":[1175,1231],"raw":" 当传送的帧是由非ASCII码的文本文件组成的时候（二进制代码的程序或图像等），就要采用字符填充方法实现透明传输"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"在发送的时候添加转义符","loc":{"start":{"line":54,"column":5},"end":{"line":54,"column":16}},"range":[1237,1248],"raw":" 在发送的时候添加转义"}],"loc":{"start":{"line":54,"column":5},"end":{"line":54,"column":16}},"range":[1237,1248],"raw":" 在发送的时候添加转义"}],"loc":{"start":{"line":54,"column":3},"end":{"line":54,"column":16}},"range":[1235,1248],"raw":" - 在发送的时候添加转义"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"在接收的时候移除转义符","loc":{"start":{"line":55,"column":5},"end":{"line":55,"column":16}},"range":[1254,1265],"raw":" 在接收的时候移除转义"}],"loc":{"start":{"line":55,"column":5},"end":{"line":55,"column":16}},"range":[1254,1265],"raw":" 在接收的时候移除转义"}],"loc":{"start":{"line":55,"column":3},"end":{"line":55,"column":16}},"range":[1252,1265],"raw":" - 在接收的时候移除转义"}],"loc":{"start":{"line":54,"column":3},"end":{"line":55,"column":16}},"range":[1235,1265],"raw":" - 在发送的时候添加转义符\n   - 在接收的时候移除转义"}],"loc":{"start":{"line":53,"column":0},"end":{"line":55,"column":16}},"range":[1172,1265],"raw":"\n2. 当传送的帧是由非ASCII码的文本文件组成的时候（二进制代码的程序或图像等），就要采用字符填充方法实现透明传输。\n   - 在发送的时候添加转义符\n   - 在接收的时候移除转义"}],"loc":{"start":{"line":51,"column":0},"end":{"line":55,"column":16}},"range":[1100,1265],"raw":"\n1. 传输的帧由文本组成时（文本文件内的字符都是从键盘输入的，都是ASCII码）不管从键盘上输入的什么字符都可以放在帧里传过去，即透明传输。\n\n2. 当传送的帧是由非ASCII码的文本文件组成的时候（二进制代码的程序或图像等），就要采用字符填充方法实现透明传输。\n   - 在发送的时候添加转义符\n   - 在接收的时候移除转义"},{"type":"Header","depth":5,"children":[{"type":"Str","value":"零比特填充法","loc":{"start":{"line":57,"column":6},"end":{"line":57,"column":12}},"range":[1273,1279],"raw":" 零比特填充"}],"loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":12}},"range":[1267,1279],"raw":"\n##### 零比特填充"},{"type":"Paragraph","children":[{"type":"Str","value":"帧的定界符位‘01111110’，在发送端发送数据的时候，扫描整个信息字段，只要出现来连续的5个1就填充一个0","loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":55}},"range":[1281,1336],"raw":"\n帧的定界符位‘01111110’，在发送端发送数据的时候，扫描整个信息字段，只要出现来连续的5个1就填充一个"}],"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":55}},"range":[1281,1336],"raw":"\n帧的定界符位‘01111110’，在发送端发送数据的时候，扫描整个信息字段，只要出现来连续的5个1就填充一个"},{"type":"Paragraph","children":[{"type":"Str","value":"在接收端接收到一个帧的时候，先找到标志字段确定边界，再用硬件对比特流进行删除，发现连续的5个1时就把后面的0删除。","loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":57}},"range":[1338,1395],"raw":"\n在接收端接收到一个帧的时候，先找到标志字段确定边界，再用硬件对比特流进行删除，发现连续的5个1时就把后面的0删除"}],"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":57}},"range":[1338,1395],"raw":"\n在接收端接收到一个帧的时候，先找到标志字段确定边界，再用硬件对比特流进行删除，发现连续的5个1时就把后面的0删除"},{"type":"Header","depth":5,"children":[{"type":"Str","value":"违规编码法","loc":{"start":{"line":63,"column":6},"end":{"line":63,"column":11}},"range":[1403,1408],"raw":" 违规编码"}],"loc":{"start":{"line":63,"column":0},"end":{"line":63,"column":11}},"range":[1397,1408],"raw":"\n##### 违规编码"},{"type":"Paragraph","children":[{"type":"Str","value":"使用编码方式中不会用到的电平方式来作为帧的定界符","loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":24}},"range":[1410,1434],"raw":"\n使用编码方式中不会用到的电平方式来作为帧的定界"}],"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":24}},"range":[1410,1434],"raw":"\n使用编码方式中不会用到的电平方式来作为帧的定界"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"差错控制","loc":{"start":{"line":67,"column":5},"end":{"line":67,"column":9}},"range":[1441,1445],"raw":" 差错控"}],"loc":{"start":{"line":67,"column":0},"end":{"line":67,"column":9}},"range":[1436,1445],"raw":"\n#### 差错控"},{"type":"Paragraph","children":[{"type":"Str","value":"传输中的差错都是由噪声引起的","loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":14}},"range":[1447,1461],"raw":"\n传输中的差错都是由噪声引起"}],"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":14}},"range":[1447,1461],"raw":"\n传输中的差错都是由噪声引起"},{"type":"List","ordered":true,"start":1,"spread":true,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"由于线路本身电气特性所产生的随机噪声（热噪声），是信道固有的，随机产生的\n解决方案：提高信噪比","loc":{"start":{"line":71,"column":3},"end":{"line":72,"column":13}},"range":[1466,1516],"raw":" 由于线路本身电气特性所产生的随机噪声（热噪声），是信道固有的，随机产生的\n   解决方案：提高信噪"}],"loc":{"start":{"line":71,"column":3},"end":{"line":72,"column":13}},"range":[1466,1516],"raw":" 由于线路本身电气特性所产生的随机噪声（热噪声），是信道固有的，随机产生的\n   解决方案：提高信噪"}],"loc":{"start":{"line":71,"column":0},"end":{"line":72,"column":13}},"range":[1463,1516],"raw":"\n1. 由于线路本身电气特性所产生的随机噪声（热噪声），是信道固有的，随机产生的\n   解决方案：提高信噪"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"外界特定的短暂原因所造成的冲击噪声，是产生差错的主要原因。\n解决方案：通常利用编码技术来解决","loc":{"start":{"line":74,"column":3},"end":{"line":75,"column":19}},"range":[1521,1570],"raw":" 外界特定的短暂原因所造成的冲击噪声，是产生差错的主要原因。\n   解决方案：通常利用编码技术来解"}],"loc":{"start":{"line":74,"column":3},"end":{"line":75,"column":19}},"range":[1521,1570],"raw":" 外界特定的短暂原因所造成的冲击噪声，是产生差错的主要原因。\n   解决方案：通常利用编码技术来解"}],"loc":{"start":{"line":74,"column":0},"end":{"line":75,"column":19}},"range":[1518,1570],"raw":"\n2. 外界特定的短暂原因所造成的冲击噪声，是产生差错的主要原因。\n   解决方案：通常利用编码技术来解"}],"loc":{"start":{"line":71,"column":0},"end":{"line":75,"column":19}},"range":[1463,1570],"raw":"\n1. 由于线路本身电气特性所产生的随机噪声（热噪声），是信道固有的，随机产生的\n   解决方案：提高信噪比\n\n2. 外界特定的短暂原因所造成的冲击噪声，是产生差错的主要原因。\n   解决方案：通常利用编码技术来解"},{"type":"Paragraph","children":[{"type":"Str","value":"差错：","loc":{"start":{"line":77,"column":0},"end":{"line":77,"column":3}},"range":[1572,1575],"raw":"\n差错"}],"loc":{"start":{"line":77,"column":0},"end":{"line":77,"column":3}},"range":[1572,1575],"raw":"\n差错"},{"type":"List","ordered":true,"start":1,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"位错：比特位出错1变成0、0变成1","loc":{"start":{"line":79,"column":3},"end":{"line":79,"column":20}},"range":[1580,1597],"raw":" 位错：比特位出错1变成0、0变成"}],"loc":{"start":{"line":79,"column":3},"end":{"line":79,"column":20}},"range":[1580,1597],"raw":" 位错：比特位出错1变成0、0变成"}],"loc":{"start":{"line":79,"column":0},"end":{"line":79,"column":20}},"range":[1577,1597],"raw":"\n1. 位错：比特位出错1变成0、0变成"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"帧错：","loc":{"start":{"line":80,"column":3},"end":{"line":80,"column":6}},"range":[1601,1604],"raw":" 帧错"}],"loc":{"start":{"line":80,"column":3},"end":{"line":80,"column":6}},"range":[1601,1604],"raw":" 帧错"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"帧丢失","loc":{"start":{"line":81,"column":5},"end":{"line":81,"column":8}},"range":[1610,1613],"raw":" 帧丢"}],"loc":{"start":{"line":81,"column":5},"end":{"line":81,"column":8}},"range":[1610,1613],"raw":" 帧丢"}],"loc":{"start":{"line":81,"column":3},"end":{"line":81,"column":8}},"range":[1608,1613],"raw":" - 帧丢"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"帧重复","loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":8}},"range":[1619,1622],"raw":" 帧重"}],"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":8}},"range":[1619,1622],"raw":" 帧重"}],"loc":{"start":{"line":82,"column":3},"end":{"line":82,"column":8}},"range":[1617,1622],"raw":" - 帧重"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"帧失序","loc":{"start":{"line":83,"column":5},"end":{"line":83,"column":8}},"range":[1628,1631],"raw":" 帧失"}],"loc":{"start":{"line":83,"column":5},"end":{"line":83,"column":8}},"range":[1628,1631],"raw":" 帧失"}],"loc":{"start":{"line":83,"column":3},"end":{"line":83,"column":8}},"range":[1626,1631],"raw":" - 帧失"}],"loc":{"start":{"line":81,"column":3},"end":{"line":83,"column":8}},"range":[1608,1631],"raw":" - 帧丢失\n   - 帧重复\n   - 帧失"}],"loc":{"start":{"line":80,"column":0},"end":{"line":83,"column":8}},"range":[1598,1631],"raw":"\n2. 帧错：\n   - 帧丢失\n   - 帧重复\n   - 帧失"}],"loc":{"start":{"line":79,"column":0},"end":{"line":83,"column":8}},"range":[1577,1631],"raw":"\n1. 位错：比特位出错1变成0、0变成1\n2. 帧错：\n   - 帧丢失\n   - 帧重复\n   - 帧失"},{"type":"Header","depth":5,"children":[{"type":"Str","value":"差错控制（比特错）","loc":{"start":{"line":85,"column":6},"end":{"line":85,"column":15}},"range":[1639,1648],"raw":" 差错控制（比特错"}],"loc":{"start":{"line":85,"column":0},"end":{"line":85,"column":15}},"range":[1633,1648],"raw":"\n##### 差错控制（比特错"},{"type":"Header","depth":6,"children":[{"type":"Str","value":"检错编码","loc":{"start":{"line":87,"column":7},"end":{"line":87,"column":11}},"range":[1657,1661],"raw":" 检错编"}],"loc":{"start":{"line":87,"column":0},"end":{"line":87,"column":11}},"range":[1650,1661],"raw":"\n###### 检错编"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"奇偶校验码\nn-1位信息元和1位校验码，奇（偶）校验码是指在信息元前面加上一个校验码后，整个比特流的1的个数位奇（偶）数，只能检查出奇数个比特错误，检错能力为50%。","loc":{"start":{"line":89,"column":2},"end":{"line":90,"column":79}},"range":[1665,1750],"raw":" 奇偶校验码\n  n-1位信息元和1位校验码，奇（偶）校验码是指在信息元前面加上一个校验码后，整个比特流的1的个数位奇（偶）数，只能检查出奇数个比特错误，检错能力为50%"}],"loc":{"start":{"line":89,"column":2},"end":{"line":90,"column":79}},"range":[1665,1750],"raw":" 奇偶校验码\n  n-1位信息元和1位校验码，奇（偶）校验码是指在信息元前面加上一个校验码后，整个比特流的1的个数位奇（偶）数，只能检查出奇数个比特错误，检错能力为50%"}],"loc":{"start":{"line":89,"column":0},"end":{"line":90,"column":79}},"range":[1663,1750],"raw":"\n- 奇偶校验码\n  n-1位信息元和1位校验码，奇（偶）校验码是指在信息元前面加上一个校验码后，整个比特流的1的个数位奇（偶）数，只能检查出奇数个比特错误，检错能力为50%"},{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"CRC循环冗余码","loc":{"start":{"line":91,"column":2},"end":{"line":91,"column":10}},"range":[1753,1761],"raw":" CRC循环冗余"}],"loc":{"start":{"line":91,"column":2},"end":{"line":91,"column":10}},"range":[1753,1761],"raw":" CRC循环冗余"},{"type":"HorizontalRule","loc":{"start":{"line":93,"column":2},"end":{"line":93,"column":20}},"range":[1765,1783],"raw":" *****************"},{"type":"Paragraph","children":[{"type":"Str","value":"发送端发送：","loc":{"start":{"line":95,"column":2},"end":{"line":95,"column":8}},"range":[1787,1793],"raw":" 发送端发送"}],"loc":{"start":{"line":95,"column":2},"end":{"line":95,"column":8}},"range":[1787,1793],"raw":" 发送端发送"},{"type":"Paragraph","children":[{"type":"Str","value":"最终发送的数据 = 要发送的数据 << (生成多项式的阶数) + 帧校验序列FCS","loc":{"start":{"line":97,"column":2},"end":{"line":97,"column":43}},"range":[1799,1840],"raw":" 最终发送的数据 = 要发送的数据 << (生成多项式的阶数) + 帧校验序列FC"}],"loc":{"start":{"line":97,"column":2},"end":{"line":97,"column":43}},"range":[1799,1840],"raw":" 最终发送的数据 = 要发送的数据 << (生成多项式的阶数) + 帧校验序列FC"},{"type":"Paragraph","children":[{"type":"Str","value":"FCS = 要发送的数据 % 生成多项式","loc":{"start":{"line":99,"column":2},"end":{"line":99,"column":22}},"range":[1844,1864],"raw":" FCS = 要发送的数据 % 生成多项"}],"loc":{"start":{"line":99,"column":2},"end":{"line":99,"column":22}},"range":[1844,1864],"raw":" FCS = 要发送的数据 % 生成多项"},{"type":"Paragraph","children":[{"type":"Str","value":"生成多项式有两种表达形式，如下：","loc":{"start":{"line":101,"column":2},"end":{"line":101,"column":18}},"range":[1868,1884],"raw":" 生成多项式有两种表达形式，如下"}],"loc":{"start":{"line":101,"column":2},"end":{"line":101,"column":18}},"range":[1868,1884],"raw":" 生成多项式有两种表达形式，如下"},{"type":"Paragraph","children":[{"type":"Str","value":"生成多项式： ","loc":{"start":{"line":103,"column":2},"end":{"line":103,"column":9}},"range":[1888,1895],"raw":" 生成多项式："},{"type":"InlineMath","value":"x^{4}+x^{1}+x^{0} \\leftrightarrow 10011","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"x^{4}+x^{1}+x^{0} \\leftrightarrow 10011"}]},"loc":{"start":{"line":103,"column":9},"end":{"line":103,"column":50}},"range":[1895,1936],"raw":" $x^{4}+x^{1}+x^{0} \\leftrightarrow 10011"}],"loc":{"start":{"line":103,"column":2},"end":{"line":103,"column":51}},"range":[1888,1937],"raw":" 生成多项式： $x^{4}+x^{1}+x^{0} \\leftrightarrow 10011$"},{"type":"HorizontalRule","loc":{"start":{"line":105,"column":2},"end":{"line":105,"column":20}},"range":[1941,1959],"raw":" *****************"},{"type":"Paragraph","children":[{"type":"Str","value":"接收端检查：","loc":{"start":{"line":107,"column":2},"end":{"line":107,"column":8}},"range":[1963,1969],"raw":" 接收端检查"}],"loc":{"start":{"line":107,"column":2},"end":{"line":107,"column":8}},"range":[1963,1969],"raw":" 接收端检查"},{"type":"Paragraph","children":[{"type":"Str","value":"把收到的每一个帧都除以相同的生成多项式，检查余数是否为0","loc":{"start":{"line":109,"column":2},"end":{"line":109,"column":30}},"range":[1973,2001],"raw":" 把收到的每一个帧都除以相同的生成多项式，检查余数是否为"}],"loc":{"start":{"line":109,"column":2},"end":{"line":109,"column":30}},"range":[1973,2001],"raw":" 把收到的每一个帧都除以相同的生成多项式，检查余数是否为"}],"loc":{"start":{"line":91,"column":0},"end":{"line":109,"column":30}},"range":[1751,2001],"raw":"\n- CRC循环冗余码\n\n  ******************\n\n  发送端发送：\n  \n  最终发送的数据 = 要发送的数据 << (生成多项式的阶数) + 帧校验序列FCS\n\n  FCS = 要发送的数据 % 生成多项式\n\n  生成多项式有两种表达形式，如下：\n\n  生成多项式： $x^{4}+x^{1}+x^{0} \\leftrightarrow 10011$ \n\n  ******************\n\n  接收端检查：\n\n  把收到的每一个帧都除以相同的生成多项式，检查余数是否为"}],"loc":{"start":{"line":89,"column":0},"end":{"line":109,"column":30}},"range":[1663,2001],"raw":"\n- 奇偶校验码\n  n-1位信息元和1位校验码，奇（偶）校验码是指在信息元前面加上一个校验码后，整个比特流的1的个数位奇（偶）数，只能检查出奇数个比特错误，检错能力为50%。\n- CRC循环冗余码\n\n  ******************\n\n  发送端发送：\n  \n  最终发送的数据 = 要发送的数据 << (生成多项式的阶数) + 帧校验序列FCS\n\n  FCS = 要发送的数据 % 生成多项式\n\n  生成多项式有两种表达形式，如下：\n\n  生成多项式： $x^{4}+x^{1}+x^{0} \\leftrightarrow 10011$ \n\n  ******************\n\n  接收端检查：\n\n  把收到的每一个帧都除以相同的生成多项式，检查余数是否为"},{"type":"Header","depth":5,"children":[{"type":"Str","value":"纠错编码","loc":{"start":{"line":111,"column":6},"end":{"line":111,"column":10}},"range":[2009,2013],"raw":" 纠错编"}],"loc":{"start":{"line":111,"column":0},"end":{"line":111,"column":10}},"range":[2003,2013],"raw":"\n##### 纠错编"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"海明码","loc":{"start":{"line":113,"column":2},"end":{"line":113,"column":5}},"range":[2017,2020],"raw":" 海明"}],"loc":{"start":{"line":113,"column":2},"end":{"line":113,"column":5}},"range":[2017,2020],"raw":" 海明"}],"loc":{"start":{"line":113,"column":0},"end":{"line":113,"column":5}},"range":[2015,2020],"raw":"\n- 海明"}],"loc":{"start":{"line":113,"column":0},"end":{"line":113,"column":5}},"range":[2015,2020],"raw":"\n- 海明"},{"type":"Paragraph","children":[{"type":"Str","value":"数据的链路层的编码针对一组比特，它通过冗余码的技术实现一组二进制比特串在传输过程是否出现了差错。","loc":{"start":{"line":115,"column":0},"end":{"line":115,"column":48}},"range":[2022,2070],"raw":"\n数据的链路层的编码针对一组比特，它通过冗余码的技术实现一组二进制比特串在传输过程是否出现了差错"}],"loc":{"start":{"line":115,"column":0},"end":{"line":115,"column":48}},"range":[2022,2070],"raw":"\n数据的链路层的编码针对一组比特，它通过冗余码的技术实现一组二进制比特串在传输过程是否出现了差错"},{"type":"Paragraph","children":[{"type":"Str","value":"冗余码：在数据发送之前，先按某种关系附加上一定的冗余位，构成一个符合某一规则的码字后再发送。当要发送的有效数据变化的时候，相应的冗余码也随之改变，使码字遵从不变的规则。接收端根据收到码字是否仍符合原规则，从而判断是否出错。","loc":{"start":{"line":117,"column":0},"end":{"line":117,"column":111}},"range":[2072,2183],"raw":"\n冗余码：在数据发送之前，先按某种关系附加上一定的冗余位，构成一个符合某一规则的码字后再发送。当要发送的有效数据变化的时候，相应的冗余码也随之改变，使码字遵从不变的规则。接收端根据收到码字是否仍符合原规则，从而判断是否出错"}],"loc":{"start":{"line":117,"column":0},"end":{"line":117,"column":111}},"range":[2072,2183],"raw":"\n冗余码：在数据发送之前，先按某种关系附加上一定的冗余位，构成一个符合某一规则的码字后再发送。当要发送的有效数据变化的时候，相应的冗余码也随之改变，使码字遵从不变的规则。接收端根据收到码字是否仍符合原规则，从而判断是否出错"},{"type":"Paragraph","children":[{"type":"Str","value":"发现双比特错，纠正单比特错。一个比特位发生错误，就会引起多个海明码发生改变，可以根据改变了的海明码确定发生错误的比特位。","loc":{"start":{"line":119,"column":0},"end":{"line":119,"column":60}},"range":[2185,2245],"raw":"\n发现双比特错，纠正单比特错。一个比特位发生错误，就会引起多个海明码发生改变，可以根据改变了的海明码确定发生错误的比特位"}],"loc":{"start":{"line":119,"column":0},"end":{"line":119,"column":60}},"range":[2185,2245],"raw":"\n发现双比特错，纠正单比特错。一个比特位发生错误，就会引起多个海明码发生改变，可以根据改变了的海明码确定发生错误的比特位"},{"type":"Paragraph","children":[{"type":"Str","value":"海明不等式： ","loc":{"start":{"line":121,"column":0},"end":{"line":121,"column":7}},"range":[2247,2254],"raw":"\n海明不等式："},{"type":"InlineMath","value":"2^{r} \\geq k + r + 1","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"2^{r} \\geq k + r + 1"}]},"loc":{"start":{"line":121,"column":7},"end":{"line":121,"column":29}},"range":[2254,2276],"raw":" $2^{r} \\geq k + r + 1"},{"type":"Str","value":" ，r为冗余信息位，k位信息位","loc":{"start":{"line":121,"column":29},"end":{"line":121,"column":44}},"range":[2276,2291],"raw":"$ ，r为冗余信息位，k位信息"}],"loc":{"start":{"line":121,"column":0},"end":{"line":121,"column":44}},"range":[2247,2291],"raw":"\n海明不等式： $2^{r} \\geq k + r + 1$ ，r为冗余信息位，k位信息"},{"type":"Paragraph","children":[{"type":"Str","value":"发送数据：","loc":{"start":{"line":123,"column":0},"end":{"line":123,"column":5}},"range":[2293,2298],"raw":"\n发送数据"}],"loc":{"start":{"line":123,"column":0},"end":{"line":123,"column":5}},"range":[2293,2298],"raw":"\n发送数据"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"求校验码的位数：根据海明不等式和数据的位数可以求得最小的校验码位数r","loc":{"start":{"line":125,"column":2},"end":{"line":125,"column":36}},"range":[2302,2336],"raw":" 求校验码的位数：根据海明不等式和数据的位数可以求得最小的校验码位数"}],"loc":{"start":{"line":125,"column":2},"end":{"line":125,"column":36}},"range":[2302,2336],"raw":" 求校验码的位数：根据海明不等式和数据的位数可以求得最小的校验码位数"}],"loc":{"start":{"line":125,"column":0},"end":{"line":125,"column":36}},"range":[2300,2336],"raw":"\n- 求校验码的位数：根据海明不等式和数据的位数可以求得最小的校验码位数"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"确定校验码的位置：校验码只能放在2的几次方的位置， ","loc":{"start":{"line":126,"column":2},"end":{"line":126,"column":28}},"range":[2339,2365],"raw":" 确定校验码的位置：校验码只能放在2的几次方的位置，"},{"type":"InlineMath","value":"2^{0}(0001)、2^{1}(0010)、2^{2}(0100) ...","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"2^{0}(0001)、2^{1}(0010)、2^{2}(0100) ..."}]},"loc":{"start":{"line":126,"column":28},"end":{"line":126,"column":69}},"range":[2365,2406],"raw":" $2^{0}(0001)、2^{1}(0010)、2^{2}(0100) ..."}],"loc":{"start":{"line":126,"column":2},"end":{"line":126,"column":70}},"range":[2339,2407],"raw":" 确定校验码的位置：校验码只能放在2的几次方的位置， $2^{0}(0001)、2^{1}(0010)、2^{2}(0100) ...$"}],"loc":{"start":{"line":126,"column":0},"end":{"line":126,"column":70}},"range":[2337,2407],"raw":"\n- 确定校验码的位置：校验码只能放在2的几次方的位置， $2^{0}(0001)、2^{1}(0010)、2^{2}(0100) ...$"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"确定要传输的数据：将海明码 ","loc":{"start":{"line":127,"column":2},"end":{"line":127,"column":16}},"range":[2410,2424],"raw":" 确定要传输的数据：将海明码"},{"type":"InlineMath","value":"P_{n}","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"P_{n}"}]},"loc":{"start":{"line":127,"column":16},"end":{"line":127,"column":23}},"range":[2424,2431],"raw":" $P_{n}"},{"type":"Str","value":" 与所有数据在海明码 ","loc":{"start":{"line":127,"column":23},"end":{"line":127,"column":34}},"range":[2431,2442],"raw":"$ 与所有数据在海明码"},{"type":"InlineMath","value":"P_{n}","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"P_{n}"}]},"loc":{"start":{"line":127,"column":34},"end":{"line":127,"column":41}},"range":[2442,2449],"raw":" $P_{n}"},{"type":"Str","value":" 中1的位置对应数据位也为1的数据异或，令异或的结果为0，可以求得 ","loc":{"start":{"line":127,"column":41},"end":{"line":127,"column":75}},"range":[2449,2483],"raw":"$ 中1的位置对应数据位也为1的数据异或，令异或的结果为0，可以求得"},{"type":"InlineMath","value":"P_{n}","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"P_{n}"}]},"loc":{"start":{"line":127,"column":75},"end":{"line":127,"column":82}},"range":[2483,2490],"raw":" $P_{n}"},{"type":"Str","value":" 。","loc":{"start":{"line":127,"column":82},"end":{"line":127,"column":84}},"range":[2490,2492],"raw":"$ "}],"loc":{"start":{"line":127,"column":2},"end":{"line":127,"column":84}},"range":[2410,2492],"raw":" 确定要传输的数据：将海明码 $P_{n}$ 与所有数据在海明码 $P_{n}$ 中1的位置对应数据位也为1的数据异或，令异或的结果为0，可以求得 $P_{n}$ "}],"loc":{"start":{"line":127,"column":0},"end":{"line":127,"column":84}},"range":[2408,2492],"raw":"\n- 确定要传输的数据：将海明码 $P_{n}$ 与所有数据在海明码 $P_{n}$ 中1的位置对应数据位也为1的数据异或，令异或的结果为0，可以求得 $P_{n}$ "}],"loc":{"start":{"line":125,"column":0},"end":{"line":127,"column":84}},"range":[2300,2492],"raw":"\n- 求校验码的位数：根据海明不等式和数据的位数可以求得最小的校验码位数r\n- 确定校验码的位置：校验码只能放在2的几次方的位置， $2^{0}(0001)、2^{1}(0010)、2^{2}(0100) ...$ \n- 确定要传输的数据：将海明码 $P_{n}$ 与所有数据在海明码 $P_{n}$ 中1的位置对应数据位也为1的数据异或，令异或的结果为0，可以求得 $P_{n}$ "},{"type":"Paragraph","children":[{"type":"Str","value":"校验数据：","loc":{"start":{"line":129,"column":0},"end":{"line":129,"column":5}},"range":[2494,2499],"raw":"\n校验数据"}],"loc":{"start":{"line":129,"column":0},"end":{"line":129,"column":5}},"range":[2494,2499],"raw":"\n校验数据"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"根据收到的数据，计算海明码序列 ","loc":{"start":{"line":131,"column":2},"end":{"line":131,"column":18}},"range":[2503,2519],"raw":" 根据收到的数据，计算海明码序列"},{"type":"InlineMath","value":"\\\\{P_{n}, P_{n-1}..., P_{1}\\\\}","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"\\\\{P_{n}, P_{n-1}..., P_{1}\\\\}"}]},"loc":{"start":{"line":131,"column":18},"end":{"line":131,"column":50}},"range":[2519,2551],"raw":" $\\\\{P_{n}, P_{n-1}..., P_{1}\\\\}"},{"type":"Str","value":" ，转换成十进制数即为发生错误的位数。","loc":{"start":{"line":131,"column":50},"end":{"line":131,"column":69}},"range":[2551,2570],"raw":"$ ，转换成十进制数即为发生错误的位数"}],"loc":{"start":{"line":131,"column":2},"end":{"line":131,"column":69}},"range":[2503,2570],"raw":" 根据收到的数据，计算海明码序列 $\\\\{P_{n}, P_{n-1}..., P_{1}\\\\}$ ，转换成十进制数即为发生错误的位数"}],"loc":{"start":{"line":131,"column":0},"end":{"line":131,"column":69}},"range":[2501,2570],"raw":"\n- 根据收到的数据，计算海明码序列 $\\\\{P_{n}, P_{n-1}..., P_{1}\\\\}$ ，转换成十进制数即为发生错误的位数"}],"loc":{"start":{"line":131,"column":0},"end":{"line":131,"column":69}},"range":[2501,2570],"raw":"\n- 根据收到的数据，计算海明码序列 $\\\\{P_{n}, P_{n-1}..., P_{1}\\\\}$ ，转换成十进制数即为发生错误的位数"}],"loc":{"start":{"line":1,"column":0},"end":{"line":132,"column":0}},"range":[0,2571],"raw":"﻿---\ntitle: '数据链路层功能概述'\ntags: ['计算机网络','数据链路层']\n---\n# 数据链路层功能概述\n\n## 数据链路层的基本概念\n\n结点：主机、路由器\n\n链路：网络中两个结点之间的**物理通道**，链路的主要介质有双绞线、光纤、微波等，分有线链路和无线链路。\n\n数据链路：网络中两个结点之间的**逻辑通道**，把实现控制数据传输协议的硬件和软件加到链路上就构成了数据链路。\n\n帧：链路层的协议数据单元，封装网络层的数据报。\n\n**数据链路层**负责通过一条链路向结点的另一个链路传送数据报。在物理层提供的服务的基础上，向网络层提供服务，最基本的服务是将来源于网络层的数据可靠地传输到相邻结点地目标机网络层。主要作用是加强物理层传输原始比特流的功能，将物理层提供的可能出错的物理连接改造为**逻辑上无差错的数据链路**，使之对网络层表现为一条无差错的链路。\n\n### 数据链路层的功能\n\n1. 为网路层提供服务：无确认无连接服务，有确认无连接服务，有确认面向连接的服务。**有连接的服务一定是有确认的！**\n   - 无确认无连接的服务：对丢失的包数据链路层不负责重发，由上层应用负责处理。适用于误码率低的通信通道或实时通信。\n   - 有确认无连接的服务：不需要建立连接，但是目的机器收到数据后需要发送回执确认，源机器在一段时间内未收到确认就会重发。适用于误码率较高的通信通道。\n   - 有确认有链接的服务：建立数据链路、传输帧、释放数据链路。每一帧都需要确认，才能发送下一帧。适用于对通信要求较高的场合。\n2. 链路管理：连接的建立、维持和释放（用于面向连接的服务）。\n3. 组帧\n4. 流量控制。\n5. 差错控制（帧错/位错）。\n\n#### 组帧\n\n在一段数据的前后部分添加头部和尾部，构成一个帧。接收端在收到物理层上交比特流后，就能根据首部和尾部标记，从收到的比特流中识别出帧的开始和结束。\n\n帧同步：接收方应当能从接收到的二进制比特流中区分出帧的起始和终止\n\n帧长：帧开始到帧结束的长度称为帧长\n\n透明传输：不管要传输的数据是什么比特组合，都应该可以在链路上传送。如果传输的数据恰巧和某个控制信息相同的时候，要采取一定的措施，使接收方不会将这样的数据误认为是某种控制信息。这样才能保证数据链路层的传输时透明的。\n\n##### 字符计数法\n\n帧首部使用一个计数字段（第一个字节，8位）来表明帧内的字符数。\n\n缺点：如果帧的计数字段发生错误，会导致出错的帧和后面的帧都出现错误\n\n##### 字符填充法\n\n使用特定的字节（定界符）表示帧的首部和帧的尾部。\n\n适用于：\n1. 传输的帧由文本组成时（文本文件内的字符都是从键盘输入的，都是ASCII码）不管从键盘上输入的什么字符都可以放在帧里传过去，即透明传输。\n\n2. 当传送的帧是由非ASCII码的文本文件组成的时候（二进制代码的程序或图像等），就要采用字符填充方法实现透明传输。\n   - 在发送的时候添加转义符\n   - 在接收的时候移除转义符\n\n##### 零比特填充法\n\n帧的定界符位‘01111110’，在发送端发送数据的时候，扫描整个信息字段，只要出现来连续的5个1就填充一个0\n\n在接收端接收到一个帧的时候，先找到标志字段确定边界，再用硬件对比特流进行删除，发现连续的5个1时就把后面的0删除。\n\n##### 违规编码法\n\n使用编码方式中不会用到的电平方式来作为帧的定界符\n\n#### 差错控制\n\n传输中的差错都是由噪声引起的\n\n1. 由于线路本身电气特性所产生的随机噪声（热噪声），是信道固有的，随机产生的\n   解决方案：提高信噪比\n\n2. 外界特定的短暂原因所造成的冲击噪声，是产生差错的主要原因。\n   解决方案：通常利用编码技术来解决\n\n差错：\n\n1. 位错：比特位出错1变成0、0变成1\n2. 帧错：\n   - 帧丢失\n   - 帧重复\n   - 帧失序\n\n##### 差错控制（比特错）\n\n###### 检错编码\n\n- 奇偶校验码\n  n-1位信息元和1位校验码，奇（偶）校验码是指在信息元前面加上一个校验码后，整个比特流的1的个数位奇（偶）数，只能检查出奇数个比特错误，检错能力为50%。\n- CRC循环冗余码\n\n  ******************\n\n  发送端发送：\n  \n  最终发送的数据 = 要发送的数据 << (生成多项式的阶数) + 帧校验序列FCS\n\n  FCS = 要发送的数据 % 生成多项式\n\n  生成多项式有两种表达形式，如下：\n\n  生成多项式： $x^{4}+x^{1}+x^{0} \\leftrightarrow 10011$ \n\n  ******************\n\n  接收端检查：\n\n  把收到的每一个帧都除以相同的生成多项式，检查余数是否为0\n\n##### 纠错编码\n\n- 海明码\n\n数据的链路层的编码针对一组比特，它通过冗余码的技术实现一组二进制比特串在传输过程是否出现了差错。\n\n冗余码：在数据发送之前，先按某种关系附加上一定的冗余位，构成一个符合某一规则的码字后再发送。当要发送的有效数据变化的时候，相应的冗余码也随之改变，使码字遵从不变的规则。接收端根据收到码字是否仍符合原规则，从而判断是否出错。\n\n发现双比特错，纠正单比特错。一个比特位发生错误，就会引起多个海明码发生改变，可以根据改变了的海明码确定发生错误的比特位。\n\n海明不等式： $2^{r} \\geq k + r + 1$ ，r为冗余信息位，k位信息位\n\n发送数据：\n\n- 求校验码的位数：根据海明不等式和数据的位数可以求得最小的校验码位数r\n- 确定校验码的位置：校验码只能放在2的几次方的位置， $2^{0}(0001)、2^{1}(0010)、2^{2}(0100) ...$ \n- 确定要传输的数据：将海明码 $P_{n}$ 与所有数据在海明码 $P_{n}$ 中1的位置对应数据位也为1的数据异或，令异或的结果为0，可以求得 $P_{n}$ 。\n\n校验数据：\n\n- 根据收到的数据，计算海明码序列 $\\\\{P_{n}, P_{n-1}..., P_{1}\\\\}$ ，转换成十进制数即为发生错误的位数。"},"catalogue":{"title":"数据链路层功能概述","json-path":"计算机网络/2020-08-04-数据链路层功能概述.json","mdate":"2020-08-04","cover":"https://i.328888.xyz/2023/01/01/tZuxv.jpeg","icon":"🐒","visible":true,"tags":["计算机网络","数据链路层"]}}