{"ast":{"type":"Document","children":[{"type":"Yaml","value":"title: 'TCP协议'\ntags: ['计算机网路','传输层','TCP']","loc":{"start":{"line":1,"column":0},"end":{"line":4,"column":3}},"range":[0,50],"raw":"﻿---\ntitle: 'TCP协议'\ntags: ['计算机网路','传输层','TCP']\n--","visible":false},{"type":"Header","depth":1,"children":[{"type":"Str","value":"TCP协议的特点和TCP报文格式","loc":{"start":{"line":5,"column":2},"end":{"line":5,"column":18}},"range":[53,69],"raw":" TCP协议的特点和TCP报文格"}],"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":18}},"range":[51,69],"raw":"\n# TCP协议的特点和TCP报文格"},{"type":"HorizontalRule","loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":5}},"range":[71,76],"raw":"\n****"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"特点","loc":{"start":{"line":9,"column":3},"end":{"line":9,"column":5}},"range":[81,83],"raw":" 特"}],"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":5}},"range":[78,83],"raw":"\n## 特"},{"type":"List","ordered":true,"start":1,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"面向连接（虚连接）的传输层协议","loc":{"start":{"line":11,"column":3},"end":{"line":11,"column":18}},"range":[88,103],"raw":" 面向连接（虚连接）的传输层协"}],"loc":{"start":{"line":11,"column":3},"end":{"line":11,"column":18}},"range":[88,103],"raw":" 面向连接（虚连接）的传输层协"}],"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":18}},"range":[85,103],"raw":"\n1. 面向连接（虚连接）的传输层协"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"每一条TCP连接只能是点对点的","loc":{"start":{"line":12,"column":3},"end":{"line":12,"column":18}},"range":[107,122],"raw":" 每一条TCP连接只能是点对点"}],"loc":{"start":{"line":12,"column":3},"end":{"line":12,"column":18}},"range":[107,122],"raw":" 每一条TCP连接只能是点对点"}],"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":18}},"range":[104,122],"raw":"\n2. 每一条TCP连接只能是点对点"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"TCP可以提供可靠的交付服务，无差错，不丢失、不重复、按照顺序到达","loc":{"start":{"line":13,"column":3},"end":{"line":13,"column":36}},"range":[126,159],"raw":" TCP可以提供可靠的交付服务，无差错，不丢失、不重复、按照顺序到"}],"loc":{"start":{"line":13,"column":3},"end":{"line":13,"column":36}},"range":[126,159],"raw":" TCP可以提供可靠的交付服务，无差错，不丢失、不重复、按照顺序到"}],"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}},"range":[123,159],"raw":"\n3. TCP可以提供可靠的交付服务，无差错，不丢失、不重复、按照顺序到"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"可以提供全双工通信","loc":{"start":{"line":14,"column":3},"end":{"line":14,"column":12}},"range":[163,172],"raw":" 可以提供全双工通"}],"loc":{"start":{"line":14,"column":3},"end":{"line":14,"column":12}},"range":[163,172],"raw":" 可以提供全双工通"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"发送缓存：准备发送的数据 & 已发送但尚未收到确认的数据 的队列","loc":{"start":{"line":15,"column":5},"end":{"line":15,"column":37}},"range":[178,210],"raw":" 发送缓存：准备发送的数据 & 已发送但尚未收到确认的数据 的队"}],"loc":{"start":{"line":15,"column":5},"end":{"line":15,"column":37}},"range":[178,210],"raw":" 发送缓存：准备发送的数据 & 已发送但尚未收到确认的数据 的队"}],"loc":{"start":{"line":15,"column":3},"end":{"line":15,"column":37}},"range":[176,210],"raw":" - 发送缓存：准备发送的数据 & 已发送但尚未收到确认的数据 的队"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"接收缓存：按序到达但未被接收应用程序读取的数据 & 不按序到达的数据","loc":{"start":{"line":16,"column":5},"end":{"line":16,"column":39}},"range":[216,250],"raw":" 接收缓存：按序到达但未被接收应用程序读取的数据 & 不按序到达的数"}],"loc":{"start":{"line":16,"column":5},"end":{"line":16,"column":39}},"range":[216,250],"raw":" 接收缓存：按序到达但未被接收应用程序读取的数据 & 不按序到达的数"}],"loc":{"start":{"line":16,"column":3},"end":{"line":16,"column":39}},"range":[214,250],"raw":" - 接收缓存：按序到达但未被接收应用程序读取的数据 & 不按序到达的数"}],"loc":{"start":{"line":15,"column":3},"end":{"line":16,"column":39}},"range":[176,250],"raw":" - 发送缓存：准备发送的数据 & 已发送但尚未收到确认的数据 的队列\n   - 接收缓存：按序到达但未被接收应用程序读取的数据 & 不按序到达的数"}],"loc":{"start":{"line":14,"column":0},"end":{"line":16,"column":39}},"range":[160,250],"raw":"\n4. 可以提供全双工通信\n   - 发送缓存：准备发送的数据 & 已发送但尚未收到确认的数据 的队列\n   - 接收缓存：按序到达但未被接收应用程序读取的数据 & 不按序到达的数"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"面向字节流：TCP把应用程序交下来的数据仅仅看成是一连串无结构的字节流","loc":{"start":{"line":17,"column":3},"end":{"line":17,"column":38}},"range":[254,289],"raw":" 面向字节流：TCP把应用程序交下来的数据仅仅看成是一连串无结构的字节"}],"loc":{"start":{"line":17,"column":3},"end":{"line":17,"column":38}},"range":[254,289],"raw":" 面向字节流：TCP把应用程序交下来的数据仅仅看成是一连串无结构的字节"}],"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":38}},"range":[251,289],"raw":"\n5. 面向字节流：TCP把应用程序交下来的数据仅仅看成是一连串无结构的字节"}],"loc":{"start":{"line":11,"column":0},"end":{"line":17,"column":38}},"range":[85,289],"raw":"\n1. 面向连接（虚连接）的传输层协议\n2. 每一条TCP连接只能是点对点的\n3. TCP可以提供可靠的交付服务，无差错，不丢失、不重复、按照顺序到达\n4. 可以提供全双工通信\n   - 发送缓存：准备发送的数据 & 已发送但尚未收到确认的数据 的队列\n   - 接收缓存：按序到达但未被接收应用程序读取的数据 & 不按序到达的数据\n5. 面向字节流：TCP把应用程序交下来的数据仅仅看成是一连串无结构的字节"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"RTT估计方法","loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":11}},"range":[295,302],"raw":" RTT估计方"}],"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":11}},"range":[291,302],"raw":"\n### RTT估计方"},{"type":"Paragraph","children":[{"type":"InlineMath","value":"新估计RTT=(1-\\alpha) * (旧RTT) + \\alpha*新RTT样本","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"新估计RTT=(1-\\alpha) * (旧RTT) + \\alpha*新RTT样本"}]},"loc":{"start":{"line":21,"column":1},"end":{"line":21,"column":45}},"range":[305,349],"raw":" $新估计RTT=(1-\\alpha) * (旧RTT) + \\alpha*新RTT样本"}],"loc":{"start":{"line":21,"column":1},"end":{"line":21,"column":46}},"range":[305,350],"raw":" $新估计RTT=(1-\\alpha) * (旧RTT) + \\alpha*新RTT样本$"},{"type":"HorizontalRule","loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":5}},"range":[352,357],"raw":"\n****"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"首部格式","loc":{"start":{"line":25,"column":3},"end":{"line":25,"column":7}},"range":[362,366],"raw":" 首部格"}],"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":7}},"range":[359,366],"raw":"\n## 首部格"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/08/11/YzRPSbdorQX2fsy.png","alt":"截屏 2020-08-11 下午4.11.16.png","loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":81}},"range":[368,449],"raw":"\n![截屏 2020-08-11 下午4.11.16.png](https://i.loli.net/2020/08/11/YzRPSbdorQX2fsy.png"}],"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":81}},"range":[368,449],"raw":"\n![截屏 2020-08-11 下午4.11.16.png](https://i.loli.net/2020/08/11/YzRPSbdorQX2fsy.png"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"源端口、目的端口：一个占用两个字节","loc":{"start":{"line":29,"column":2},"end":{"line":29,"column":19}},"range":[453,470],"raw":" 源端口、目的端口：一个占用两个字"}],"loc":{"start":{"line":29,"column":2},"end":{"line":29,"column":19}},"range":[453,470],"raw":" 源端口、目的端口：一个占用两个字"}],"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":19}},"range":[451,470],"raw":"\n- 源端口、目的端口：一个占用两个字"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"序号：在一个TCP连接中，传送的字节流中的每一个字节都按照顺序编号，本字段表示本报文段所发送的数据的第一个字节的序号。","loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":61}},"range":[473,532],"raw":" 序号：在一个TCP连接中，传送的字节流中的每一个字节都按照顺序编号，本字段表示本报文段所发送的数据的第一个字节的序号"}],"loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":61}},"range":[473,532],"raw":" 序号：在一个TCP连接中，传送的字节流中的每一个字节都按照顺序编号，本字段表示本报文段所发送的数据的第一个字节的序号"}],"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":61}},"range":[471,532],"raw":"\n- 序号：在一个TCP连接中，传送的字节流中的每一个字节都按照顺序编号，本字段表示本报文段所发送的数据的第一个字节的序号"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"确认号：期望收到对方下一个报文段的第一个数据字节的序号。若确认号为N，证明到序号N-1为止的数据都已经正确接收。","loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":58}},"range":[535,591],"raw":" 确认号：期望收到对方下一个报文段的第一个数据字节的序号。若确认号为N，证明到序号N-1为止的数据都已经正确接收"}],"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":58}},"range":[535,591],"raw":" 确认号：期望收到对方下一个报文段的第一个数据字节的序号。若确认号为N，证明到序号N-1为止的数据都已经正确接收"}],"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":58}},"range":[533,591],"raw":"\n- 确认号：期望收到对方下一个报文段的第一个数据字节的序号。若确认号为N，证明到序号N-1为止的数据都已经正确接收"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"数据便宜（首部长度）：TCP报文段的数据起始处距离TCP报文段的起始处有多远，以4字节为单位，即1个数为4字节。","loc":{"start":{"line":32,"column":2},"end":{"line":32,"column":58}},"range":[594,650],"raw":" 数据便宜（首部长度）：TCP报文段的数据起始处距离TCP报文段的起始处有多远，以4字节为单位，即1个数为4字节"}],"loc":{"start":{"line":32,"column":2},"end":{"line":32,"column":58}},"range":[594,650],"raw":" 数据便宜（首部长度）：TCP报文段的数据起始处距离TCP报文段的起始处有多远，以4字节为单位，即1个数为4字节"}],"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":58}},"range":[592,650],"raw":"\n- 数据便宜（首部长度）：TCP报文段的数据起始处距离TCP报文段的起始处有多远，以4字节为单位，即1个数为4字节"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"控制位：","loc":{"start":{"line":33,"column":2},"end":{"line":33,"column":6}},"range":[653,657],"raw":" 控制位"}],"loc":{"start":{"line":33,"column":2},"end":{"line":33,"column":6}},"range":[653,657],"raw":" 控制位"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"URG紧急位：URG=1时，表明此报文段有紧急数据，是高优先级的数据，应该尽快传送，不用在缓存里排队，配合紧急指针字段使用","loc":{"start":{"line":34,"column":4},"end":{"line":34,"column":65}},"range":[662,723],"raw":" URG紧急位：URG=1时，表明此报文段有紧急数据，是高优先级的数据，应该尽快传送，不用在缓存里排队，配合紧急指针字段使"}],"loc":{"start":{"line":34,"column":4},"end":{"line":34,"column":65}},"range":[662,723],"raw":" URG紧急位：URG=1时，表明此报文段有紧急数据，是高优先级的数据，应该尽快传送，不用在缓存里排队，配合紧急指针字段使"}],"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":65}},"range":[660,723],"raw":" - URG紧急位：URG=1时，表明此报文段有紧急数据，是高优先级的数据，应该尽快传送，不用在缓存里排队，配合紧急指针字段使"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"ACK确认位：ACK=1时确认号有效，在连接建立后所有的传送都必须把ACK置位1","loc":{"start":{"line":35,"column":4},"end":{"line":35,"column":44}},"range":[728,768],"raw":" ACK确认位：ACK=1时确认号有效，在连接建立后所有的传送都必须把ACK置位"}],"loc":{"start":{"line":35,"column":4},"end":{"line":35,"column":44}},"range":[728,768],"raw":" ACK确认位：ACK=1时确认号有效，在连接建立后所有的传送都必须把ACK置位"}],"loc":{"start":{"line":35,"column":2},"end":{"line":35,"column":44}},"range":[726,768],"raw":" - ACK确认位：ACK=1时确认号有效，在连接建立后所有的传送都必须把ACK置位"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"PSH推送位：PSH=1时接收方应该尽快交付给接收应用进程，不再等到缓存填满再向上交付","loc":{"start":{"line":36,"column":4},"end":{"line":36,"column":47}},"range":[773,816],"raw":" PSH推送位：PSH=1时接收方应该尽快交付给接收应用进程，不再等到缓存填满再向上交"}],"loc":{"start":{"line":36,"column":4},"end":{"line":36,"column":47}},"range":[773,816],"raw":" PSH推送位：PSH=1时接收方应该尽快交付给接收应用进程，不再等到缓存填满再向上交"}],"loc":{"start":{"line":36,"column":2},"end":{"line":36,"column":47}},"range":[771,816],"raw":" - PSH推送位：PSH=1时接收方应该尽快交付给接收应用进程，不再等到缓存填满再向上交"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"RST复位：RST=1时表明TCP连接中出现严重的差错，必须释放连接，然后重新建立传输连接","loc":{"start":{"line":37,"column":4},"end":{"line":37,"column":49}},"range":[821,866],"raw":" RST复位：RST=1时表明TCP连接中出现严重的差错，必须释放连接，然后重新建立传输连"}],"loc":{"start":{"line":37,"column":4},"end":{"line":37,"column":49}},"range":[821,866],"raw":" RST复位：RST=1时表明TCP连接中出现严重的差错，必须释放连接，然后重新建立传输连"}],"loc":{"start":{"line":37,"column":2},"end":{"line":37,"column":49}},"range":[819,866],"raw":" - RST复位：RST=1时表明TCP连接中出现严重的差错，必须释放连接，然后重新建立传输连"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"SYN同步位：SYN=1时，表明是一个连接请求/连接接受报文","loc":{"start":{"line":38,"column":4},"end":{"line":38,"column":34}},"range":[871,901],"raw":" SYN同步位：SYN=1时，表明是一个连接请求/连接接受报"}],"loc":{"start":{"line":38,"column":4},"end":{"line":38,"column":34}},"range":[871,901],"raw":" SYN同步位：SYN=1时，表明是一个连接请求/连接接受报"}],"loc":{"start":{"line":38,"column":2},"end":{"line":38,"column":34}},"range":[869,901],"raw":" - SYN同步位：SYN=1时，表明是一个连接请求/连接接受报"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"FIN终止位：FIN=1时，表明此报文段发送方的数据已经发送完，要求释放连接","loc":{"start":{"line":39,"column":4},"end":{"line":39,"column":42}},"range":[906,944],"raw":" FIN终止位：FIN=1时，表明此报文段发送方的数据已经发送完，要求释放连"}],"loc":{"start":{"line":39,"column":4},"end":{"line":39,"column":42}},"range":[906,944],"raw":" FIN终止位：FIN=1时，表明此报文段发送方的数据已经发送完，要求释放连"}],"loc":{"start":{"line":39,"column":2},"end":{"line":39,"column":42}},"range":[904,944],"raw":" - FIN终止位：FIN=1时，表明此报文段发送方的数据已经发送完，要求释放连"}],"loc":{"start":{"line":34,"column":2},"end":{"line":39,"column":42}},"range":[660,944],"raw":" - URG紧急位：URG=1时，表明此报文段有紧急数据，是高优先级的数据，应该尽快传送，不用在缓存里排队，配合紧急指针字段使用\n  - ACK确认位：ACK=1时确认号有效，在连接建立后所有的传送都必须把ACK置位1\n  - PSH推送位：PSH=1时接收方应该尽快交付给接收应用进程，不再等到缓存填满再向上交付\n  - RST复位：RST=1时表明TCP连接中出现严重的差错，必须释放连接，然后重新建立传输连接\n  - SYN同步位：SYN=1时，表明是一个连接请求/连接接受报文\n  - FIN终止位：FIN=1时，表明此报文段发送方的数据已经发送完，要求释放连"}],"loc":{"start":{"line":33,"column":0},"end":{"line":39,"column":42}},"range":[651,944],"raw":"\n- 控制位：\n  - URG紧急位：URG=1时，表明此报文段有紧急数据，是高优先级的数据，应该尽快传送，不用在缓存里排队，配合紧急指针字段使用\n  - ACK确认位：ACK=1时确认号有效，在连接建立后所有的传送都必须把ACK置位1\n  - PSH推送位：PSH=1时接收方应该尽快交付给接收应用进程，不再等到缓存填满再向上交付\n  - RST复位：RST=1时表明TCP连接中出现严重的差错，必须释放连接，然后重新建立传输连接\n  - SYN同步位：SYN=1时，表明是一个连接请求/连接接受报文\n  - FIN终止位：FIN=1时，表明此报文段发送方的数据已经发送完，要求释放连"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"窗口：指的是发送本报文段的一方的接收窗口（自己的接收窗口），即现在允许接收的数据量","loc":{"start":{"line":40,"column":2},"end":{"line":40,"column":43}},"range":[947,988],"raw":" 窗口：指的是发送本报文段的一方的接收窗口（自己的接收窗口），即现在允许接收的数据"}],"loc":{"start":{"line":40,"column":2},"end":{"line":40,"column":43}},"range":[947,988],"raw":" 窗口：指的是发送本报文段的一方的接收窗口（自己的接收窗口），即现在允许接收的数据"}],"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":43}},"range":[945,988],"raw":"\n- 窗口：指的是发送本报文段的一方的接收窗口（自己的接收窗口），即现在允许接收的数据"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"检验和：检验首部+数据部分，检验时要加上12B的伪首部，第四个字段为6","loc":{"start":{"line":41,"column":2},"end":{"line":41,"column":37}},"range":[991,1026],"raw":" 检验和：检验首部+数据部分，检验时要加上12B的伪首部，第四个字段为"}],"loc":{"start":{"line":41,"column":2},"end":{"line":41,"column":37}},"range":[991,1026],"raw":" 检验和：检验首部+数据部分，检验时要加上12B的伪首部，第四个字段为"}],"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":37}},"range":[989,1026],"raw":"\n- 检验和：检验首部+数据部分，检验时要加上12B的伪首部，第四个字段为"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"紧急指针：URG紧急位=1时才有意义，指出本报文段中紧急数据的字节数，从数据部分开始位到紧急指针的位是紧急数据，剩下的数据是普通数据。","loc":{"start":{"line":42,"column":2},"end":{"line":42,"column":69}},"range":[1029,1096],"raw":" 紧急指针：URG紧急位=1时才有意义，指出本报文段中紧急数据的字节数，从数据部分开始位到紧急指针的位是紧急数据，剩下的数据是普通数据"}],"loc":{"start":{"line":42,"column":2},"end":{"line":42,"column":69}},"range":[1029,1096],"raw":" 紧急指针：URG紧急位=1时才有意义，指出本报文段中紧急数据的字节数，从数据部分开始位到紧急指针的位是紧急数据，剩下的数据是普通数据"}],"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":69}},"range":[1027,1096],"raw":"\n- 紧急指针：URG紧急位=1时才有意义，指出本报文段中紧急数据的字节数，从数据部分开始位到紧急指针的位是紧急数据，剩下的数据是普通数据"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"选项：最大报文段长度MSS、窗口扩大、时间戳、选择确认等","loc":{"start":{"line":43,"column":2},"end":{"line":43,"column":30}},"range":[1099,1127],"raw":" 选项：最大报文段长度MSS、窗口扩大、时间戳、选择确认"}],"loc":{"start":{"line":43,"column":2},"end":{"line":43,"column":30}},"range":[1099,1127],"raw":" 选项：最大报文段长度MSS、窗口扩大、时间戳、选择确认"}],"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":30}},"range":[1097,1127],"raw":"\n- 选项：最大报文段长度MSS、窗口扩大、时间戳、选择确认"}],"loc":{"start":{"line":29,"column":0},"end":{"line":43,"column":30}},"range":[451,1127],"raw":"\n- 源端口、目的端口：一个占用两个字节\n- 序号：在一个TCP连接中，传送的字节流中的每一个字节都按照顺序编号，本字段表示本报文段所发送的数据的第一个字节的序号。\n- 确认号：期望收到对方下一个报文段的第一个数据字节的序号。若确认号为N，证明到序号N-1为止的数据都已经正确接收。\n- 数据便宜（首部长度）：TCP报文段的数据起始处距离TCP报文段的起始处有多远，以4字节为单位，即1个数为4字节。\n- 控制位：\n  - URG紧急位：URG=1时，表明此报文段有紧急数据，是高优先级的数据，应该尽快传送，不用在缓存里排队，配合紧急指针字段使用\n  - ACK确认位：ACK=1时确认号有效，在连接建立后所有的传送都必须把ACK置位1\n  - PSH推送位：PSH=1时接收方应该尽快交付给接收应用进程，不再等到缓存填满再向上交付\n  - RST复位：RST=1时表明TCP连接中出现严重的差错，必须释放连接，然后重新建立传输连接\n  - SYN同步位：SYN=1时，表明是一个连接请求/连接接受报文\n  - FIN终止位：FIN=1时，表明此报文段发送方的数据已经发送完，要求释放连接\n- 窗口：指的是发送本报文段的一方的接收窗口（自己的接收窗口），即现在允许接收的数据量\n- 检验和：检验首部+数据部分，检验时要加上12B的伪首部，第四个字段为6\n- 紧急指针：URG紧急位=1时才有意义，指出本报文段中紧急数据的字节数，从数据部分开始位到紧急指针的位是紧急数据，剩下的数据是普通数据。\n- 选项：最大报文段长度MSS、窗口扩大、时间戳、选择确认"},{"type":"HorizontalRule","loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":5}},"range":[1129,1134],"raw":"\n****"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"TCP连接管理","loc":{"start":{"line":47,"column":3},"end":{"line":47,"column":10}},"range":[1139,1146],"raw":" TCP连接管"}],"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":10}},"range":[1136,1146],"raw":"\n## TCP连接管"},{"type":"Paragraph","children":[{"type":"Str","value":"TCP建立连接的三个阶段：","loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":13}},"range":[1148,1161],"raw":"\nTCP建立连接的三个阶段"}],"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":13}},"range":[1148,1161],"raw":"\nTCP建立连接的三个阶段"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"连接建立","loc":{"start":{"line":51,"column":4},"end":{"line":51,"column":8}},"range":[1167,1171],"raw":" 连接建"}],"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":8}},"range":[1163,1171],"raw":"\n### 连接建"},{"type":"Paragraph","children":[{"type":"Str","value":"TCP连接的建立采用客户服务器方式，主动发起连接的应用进程叫做客户端，被动等待连接的应用进程叫做服务器。","loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":52}},"range":[1173,1225],"raw":"\nTCP连接的建立采用客户服务器方式，主动发起连接的应用进程叫做客户端，被动等待连接的应用进程叫做服务器"}],"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":52}},"range":[1173,1225],"raw":"\nTCP连接的建立采用客户服务器方式，主动发起连接的应用进程叫做客户端，被动等待连接的应用进程叫做服务器"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/08/11/H2YG8nSjok7PZs5.png","alt":"截屏 2020-08-11 下午5.08.44.png","loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":81}},"range":[1227,1308],"raw":"\n![截屏 2020-08-11 下午5.08.44.png](https://i.loli.net/2020/08/11/H2YG8nSjok7PZs5.png"}],"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":81}},"range":[1227,1308],"raw":"\n![截屏 2020-08-11 下午5.08.44.png](https://i.loli.net/2020/08/11/H2YG8nSjok7PZs5.png"},{"type":"List","ordered":true,"start":1,"spread":true,"children":[{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"客户端发送连接请求报文段，无应用层数据","loc":{"start":{"line":57,"column":3},"end":{"line":57,"column":22}},"range":[1313,1332],"raw":" 客户端发送连接请求报文段，无应用层数"}],"loc":{"start":{"line":57,"column":3},"end":{"line":57,"column":22}},"range":[1313,1332],"raw":" 客户端发送连接请求报文段，无应用层数"},{"type":"Paragraph","children":[{"type":"Str","value":"SYN = 1, 序号seq = x[随机]","loc":{"start":{"line":59,"column":3},"end":{"line":59,"column":25}},"range":[1337,1359],"raw":" SYN = 1, 序号seq = x[随机"}],"loc":{"start":{"line":59,"column":3},"end":{"line":59,"column":25}},"range":[1337,1359],"raw":" SYN = 1, 序号seq = x[随机"}],"loc":{"start":{"line":57,"column":0},"end":{"line":59,"column":25}},"range":[1310,1359],"raw":"\n1. 客户端发送连接请求报文段，无应用层数据\n\n   SYN = 1, 序号seq = x[随机"},{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"服务器端为该TCP连接分配缓存和变量，并向客户端回复确认报文段，允许连接，无应用层数据。","loc":{"start":{"line":61,"column":3},"end":{"line":61,"column":47}},"range":[1364,1408],"raw":" 服务器端为该TCP连接分配缓存和变量，并向客户端回复确认报文段，允许连接，无应用层数据"}],"loc":{"start":{"line":61,"column":3},"end":{"line":61,"column":47}},"range":[1364,1408],"raw":" 服务器端为该TCP连接分配缓存和变量，并向客户端回复确认报文段，允许连接，无应用层数据"},{"type":"Paragraph","children":[{"type":"Str","value":"SYN = 1, ACK=1, seq=y[随机], ack=x+1","loc":{"start":{"line":63,"column":3},"end":{"line":63,"column":37}},"range":[1413,1447],"raw":" SYN = 1, ACK=1, seq=y[随机], ack=x+"}],"loc":{"start":{"line":63,"column":3},"end":{"line":63,"column":37}},"range":[1413,1447],"raw":" SYN = 1, ACK=1, seq=y[随机], ack=x+"}],"loc":{"start":{"line":61,"column":0},"end":{"line":63,"column":37}},"range":[1361,1447],"raw":"\n2. 服务器端为该TCP连接分配缓存和变量，并向客户端回复确认报文段，允许连接，无应用层数据。\n\n   SYN = 1, ACK=1, seq=y[随机], ack=x+"},{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"客户端为该TCP连接分配缓存和变量，并向服务器端回复确认的确认，可以携带数据。","loc":{"start":{"line":65,"column":3},"end":{"line":65,"column":42}},"range":[1452,1491],"raw":" 客户端为该TCP连接分配缓存和变量，并向服务器端回复确认的确认，可以携带数据"}],"loc":{"start":{"line":65,"column":3},"end":{"line":65,"column":42}},"range":[1452,1491],"raw":" 客户端为该TCP连接分配缓存和变量，并向服务器端回复确认的确认，可以携带数据"},{"type":"Paragraph","children":[{"type":"Str","value":"ACK = 1, seq=x+1, ack=y+1","loc":{"start":{"line":67,"column":3},"end":{"line":67,"column":28}},"range":[1496,1521],"raw":" ACK = 1, seq=x+1, ack=y+"}],"loc":{"start":{"line":67,"column":3},"end":{"line":67,"column":28}},"range":[1496,1521],"raw":" ACK = 1, seq=x+1, ack=y+"}],"loc":{"start":{"line":65,"column":0},"end":{"line":67,"column":28}},"range":[1449,1521],"raw":"\n3. 客户端为该TCP连接分配缓存和变量，并向服务器端回复确认的确认，可以携带数据。\n\n   ACK = 1, seq=x+1, ack=y+"}],"loc":{"start":{"line":57,"column":0},"end":{"line":67,"column":28}},"range":[1310,1521],"raw":"\n1. 客户端发送连接请求报文段，无应用层数据\n\n   SYN = 1, 序号seq = x[随机]\n\n2. 服务器端为该TCP连接分配缓存和变量，并向客户端回复确认报文段，允许连接，无应用层数据。\n\n   SYN = 1, ACK=1, seq=y[随机], ack=x+1\n\n3. 客户端为该TCP连接分配缓存和变量，并向服务器端回复确认的确认，可以携带数据。\n\n   ACK = 1, seq=x+1, ack=y+"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"SYN洪泛攻击","loc":{"start":{"line":69,"column":5},"end":{"line":69,"column":12}},"range":[1528,1535],"raw":" SYN洪泛攻"}],"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":12}},"range":[1523,1535],"raw":"\n#### SYN洪泛攻"},{"type":"Paragraph","children":[{"type":"Str","value":"SYN洪泛攻击发生在OSI第四层,这种方式利用TCP协议的特性,就是三次握手。攻击者发送TCP SYN,SYN是TCP三次握手中的","loc":{"start":{"line":71,"column":0},"end":{"line":71,"column":65}},"range":[1537,1602],"raw":"\nSYN洪泛攻击发生在OSI第四层,这种方式利用TCP协议的特性,就是三次握手。攻击者发送TCP SYN,SYN是TCP三次握手中"},{"type":"Strong","children":[{"type":"Str","value":"第一个数据包","loc":{"start":{"line":71,"column":67},"end":{"line":71,"column":73}},"range":[1604,1610],"raw":"*第一个数据"}],"loc":{"start":{"line":71,"column":65},"end":{"line":71,"column":75}},"range":[1602,1612],"raw":"的**第一个数据包*"},{"type":"Str","value":"，而当服务器返回ACK后，该攻击者就不对其进行再确认，那这个TCP连接就处于挂起状态，也就是所谓的半连接状态，服务器收不到再确认的话，还会重复发送ACK给攻击者。这样更加会浪费服务器的资源。攻击者就对服务器发送非常大量的这种TCP连接，由于每一个都没法完成三次握手，所以在服务器上,这些TCP连接会因为挂起状态而消耗CPU和内存，最后服务器可能死机，就无法为正常用户提供服务了。","loc":{"start":{"line":71,"column":75},"end":{"line":71,"column":264}},"range":[1612,1801],"raw":"*，而当服务器返回ACK后，该攻击者就不对其进行再确认，那这个TCP连接就处于挂起状态，也就是所谓的半连接状态，服务器收不到再确认的话，还会重复发送ACK给攻击者。这样更加会浪费服务器的资源。攻击者就对服务器发送非常大量的这种TCP连接，由于每一个都没法完成三次握手，所以在服务器上,这些TCP连接会因为挂起状态而消耗CPU和内存，最后服务器可能死机，就无法为正常用户提供服务了"}],"loc":{"start":{"line":71,"column":0},"end":{"line":71,"column":264}},"range":[1537,1801],"raw":"\nSYN洪泛攻击发生在OSI第四层,这种方式利用TCP协议的特性,就是三次握手。攻击者发送TCP SYN,SYN是TCP三次握手中的**第一个数据包**，而当服务器返回ACK后，该攻击者就不对其进行再确认，那这个TCP连接就处于挂起状态，也就是所谓的半连接状态，服务器收不到再确认的话，还会重复发送ACK给攻击者。这样更加会浪费服务器的资源。攻击者就对服务器发送非常大量的这种TCP连接，由于每一个都没法完成三次握手，所以在服务器上,这些TCP连接会因为挂起状态而消耗CPU和内存，最后服务器可能死机，就无法为正常用户提供服务了"},{"type":"Paragraph","children":[{"type":"Str","value":"解决SYN洪泛攻击的方法是设置SYN cookie","loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":25}},"range":[1803,1828],"raw":"\n解决SYN洪泛攻击的方法是设置SYN cooki"}],"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":25}},"range":[1803,1828],"raw":"\n解决SYN洪泛攻击的方法是设置SYN cooki"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"连接释放","loc":{"start":{"line":75,"column":4},"end":{"line":75,"column":8}},"range":[1834,1838],"raw":" 连接释"}],"loc":{"start":{"line":75,"column":0},"end":{"line":75,"column":8}},"range":[1830,1838],"raw":"\n### 连接释"},{"type":"Paragraph","children":[{"type":"Str","value":"参与一条TCP连接的两个进程中的任何一个都能终止该进程，连接结束后，主机中的资源（缓存和变量）将被释放。","loc":{"start":{"line":77,"column":0},"end":{"line":77,"column":52}},"range":[1840,1892],"raw":"\n参与一条TCP连接的两个进程中的任何一个都能终止该进程，连接结束后，主机中的资源（缓存和变量）将被释放"}],"loc":{"start":{"line":77,"column":0},"end":{"line":77,"column":52}},"range":[1840,1892],"raw":"\n参与一条TCP连接的两个进程中的任何一个都能终止该进程，连接结束后，主机中的资源（缓存和变量）将被释放"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/08/11/RmExnKFqW15vsc2.png","alt":"截屏 2020-08-11 下午5.21.08.png","loc":{"start":{"line":79,"column":0},"end":{"line":79,"column":81}},"range":[1894,1975],"raw":"\n![截屏 2020-08-11 下午5.21.08.png](https://i.loli.net/2020/08/11/RmExnKFqW15vsc2.png"}],"loc":{"start":{"line":79,"column":0},"end":{"line":79,"column":81}},"range":[1894,1975],"raw":"\n![截屏 2020-08-11 下午5.21.08.png](https://i.loli.net/2020/08/11/RmExnKFqW15vsc2.png"},{"type":"List","ordered":false,"start":null,"spread":true,"children":[{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"客户端发送连接释放报文段，停止发送数据，主动关闭TCP连接","loc":{"start":{"line":81,"column":2},"end":{"line":81,"column":31}},"range":[1979,2008],"raw":" 客户端发送连接释放报文段，停止发送数据，主动关闭TCP连"}],"loc":{"start":{"line":81,"column":2},"end":{"line":81,"column":31}},"range":[1979,2008],"raw":" 客户端发送连接释放报文段，停止发送数据，主动关闭TCP连"},{"type":"Paragraph","children":[{"type":"Str","value":"FIN = 1, seq = u","loc":{"start":{"line":83,"column":2},"end":{"line":83,"column":18}},"range":[2014,2030],"raw":" FIN = 1, seq = "}],"loc":{"start":{"line":83,"column":2},"end":{"line":83,"column":18}},"range":[2014,2030],"raw":" FIN = 1, seq = "}],"loc":{"start":{"line":81,"column":0},"end":{"line":83,"column":18}},"range":[1977,2030],"raw":"\n- 客户端发送连接释放报文段，停止发送数据，主动关闭TCP连接\n  \n  FIN = 1, seq = "},{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"服务器回送一个确认报文段，客户端服务器这个方向的连接就释放了，处于半关闭的状态","loc":{"start":{"line":85,"column":2},"end":{"line":85,"column":41}},"range":[2034,2073],"raw":" 服务器回送一个确认报文段，客户端服务器这个方向的连接就释放了，处于半关闭的状"}],"loc":{"start":{"line":85,"column":2},"end":{"line":85,"column":41}},"range":[2034,2073],"raw":" 服务器回送一个确认报文段，客户端服务器这个方向的连接就释放了，处于半关闭的状"},{"type":"Paragraph","children":[{"type":"Str","value":"ACK = 1, seq = v, ack = u+1","loc":{"start":{"line":87,"column":2},"end":{"line":87,"column":29}},"range":[2077,2104],"raw":" ACK = 1, seq = v, ack = u+"}],"loc":{"start":{"line":87,"column":2},"end":{"line":87,"column":29}},"range":[2077,2104],"raw":" ACK = 1, seq = v, ack = u+"}],"loc":{"start":{"line":85,"column":0},"end":{"line":87,"column":29}},"range":[2032,2104],"raw":"\n- 服务器回送一个确认报文段，客户端服务器这个方向的连接就释放了，处于半关闭的状态\n\n  ACK = 1, seq = v, ack = u+"},{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"服务器端发完数据，就发出连接释放报文段，主动关闭TCP连接","loc":{"start":{"line":89,"column":2},"end":{"line":89,"column":31}},"range":[2108,2137],"raw":" 服务器端发完数据，就发出连接释放报文段，主动关闭TCP连"}],"loc":{"start":{"line":89,"column":2},"end":{"line":89,"column":31}},"range":[2108,2137],"raw":" 服务器端发完数据，就发出连接释放报文段，主动关闭TCP连"},{"type":"Paragraph","children":[{"type":"Str","value":"FIN = 1, ACK = 1, seq = w, ack = u+1","loc":{"start":{"line":91,"column":2},"end":{"line":91,"column":38}},"range":[2141,2177],"raw":" FIN = 1, ACK = 1, seq = w, ack = u+"}],"loc":{"start":{"line":91,"column":2},"end":{"line":91,"column":38}},"range":[2141,2177],"raw":" FIN = 1, ACK = 1, seq = w, ack = u+"}],"loc":{"start":{"line":89,"column":0},"end":{"line":91,"column":38}},"range":[2106,2177],"raw":"\n- 服务器端发完数据，就发出连接释放报文段，主动关闭TCP连接\n\n  FIN = 1, ACK = 1, seq = w, ack = u+"},{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"客户端回复一个确认报文段，等到等待倒计时设置的2MSL（最长报文段寿命）后，连接彻底关闭（避免本报文段丢失导致服务器端连接一直得不到释放）","loc":{"start":{"line":93,"column":2},"end":{"line":93,"column":71}},"range":[2181,2250],"raw":" 客户端回复一个确认报文段，等到等待倒计时设置的2MSL（最长报文段寿命）后，连接彻底关闭（避免本报文段丢失导致服务器端连接一直得不到释放"}],"loc":{"start":{"line":93,"column":2},"end":{"line":93,"column":71}},"range":[2181,2250],"raw":" 客户端回复一个确认报文段，等到等待倒计时设置的2MSL（最长报文段寿命）后，连接彻底关闭（避免本报文段丢失导致服务器端连接一直得不到释放"},{"type":"Paragraph","children":[{"type":"Str","value":"ACK = 1, seq = u+1, ack = w+1","loc":{"start":{"line":95,"column":2},"end":{"line":95,"column":31}},"range":[2256,2285],"raw":" ACK = 1, seq = u+1, ack = w+"}],"loc":{"start":{"line":95,"column":2},"end":{"line":95,"column":31}},"range":[2256,2285],"raw":" ACK = 1, seq = u+1, ack = w+"}],"loc":{"start":{"line":93,"column":0},"end":{"line":95,"column":31}},"range":[2179,2285],"raw":"\n- 客户端回复一个确认报文段，等到等待倒计时设置的2MSL（最长报文段寿命）后，连接彻底关闭（避免本报文段丢失导致服务器端连接一直得不到释放）\n  \n  ACK = 1, seq = u+1, ack = w+"}],"loc":{"start":{"line":81,"column":0},"end":{"line":95,"column":31}},"range":[1977,2285],"raw":"\n- 客户端发送连接释放报文段，停止发送数据，主动关闭TCP连接\n  \n  FIN = 1, seq = u\n\n- 服务器回送一个确认报文段，客户端服务器这个方向的连接就释放了，处于半关闭的状态\n\n  ACK = 1, seq = v, ack = u+1\n\n- 服务器端发完数据，就发出连接释放报文段，主动关闭TCP连接\n\n  FIN = 1, ACK = 1, seq = w, ack = u+1\n\n- 客户端回复一个确认报文段，等到等待倒计时设置的2MSL（最长报文段寿命）后，连接彻底关闭（避免本报文段丢失导致服务器端连接一直得不到释放）\n  \n  ACK = 1, seq = u+1, ack = w+"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"数据传送","loc":{"start":{"line":97,"column":4},"end":{"line":97,"column":8}},"range":[2291,2295],"raw":" 数据传"}],"loc":{"start":{"line":97,"column":0},"end":{"line":97,"column":8}},"range":[2287,2295],"raw":"\n### 数据传"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"TCP 可靠传输","loc":{"start":{"line":99,"column":5},"end":{"line":99,"column":13}},"range":[2302,2310],"raw":" TCP 可靠传"}],"loc":{"start":{"line":99,"column":0},"end":{"line":99,"column":13}},"range":[2297,2310],"raw":"\n#### TCP 可靠传"},{"type":"Paragraph","children":[{"type":"Str","value":"可靠：保证接收方进程从缓存中读取的字节流于发送方发出的字节流完全一样","loc":{"start":{"line":101,"column":0},"end":{"line":101,"column":34}},"range":[2312,2346],"raw":"\n可靠：保证接收方进程从缓存中读取的字节流于发送方发出的字节流完全一"}],"loc":{"start":{"line":101,"column":0},"end":{"line":101,"column":34}},"range":[2312,2346],"raw":"\n可靠：保证接收方进程从缓存中读取的字节流于发送方发出的字节流完全一"},{"type":"Header","depth":5,"children":[{"type":"Str","value":"TCP实现可靠传输的机制","loc":{"start":{"line":103,"column":6},"end":{"line":103,"column":18}},"range":[2354,2366],"raw":" TCP实现可靠传输的机"}],"loc":{"start":{"line":103,"column":0},"end":{"line":103,"column":18}},"range":[2348,2366],"raw":"\n##### TCP实现可靠传输的机"},{"type":"Header","depth":6,"children":[{"type":"Str","value":"校验","loc":{"start":{"line":105,"column":7},"end":{"line":105,"column":9}},"range":[2375,2377],"raw":" 校"}],"loc":{"start":{"line":105,"column":0},"end":{"line":105,"column":9}},"range":[2368,2377],"raw":"\n###### 校"},{"type":"Paragraph","children":[{"type":"Str","value":"与UDP校验相同，引入了伪首部","loc":{"start":{"line":107,"column":0},"end":{"line":107,"column":15}},"range":[2379,2394],"raw":"\n与UDP校验相同，引入了伪首"}],"loc":{"start":{"line":107,"column":0},"end":{"line":107,"column":15}},"range":[2379,2394],"raw":"\n与UDP校验相同，引入了伪首"},{"type":"Header","depth":6,"children":[{"type":"Str","value":"序号","loc":{"start":{"line":109,"column":7},"end":{"line":109,"column":9}},"range":[2403,2405],"raw":" 序"}],"loc":{"start":{"line":109,"column":0},"end":{"line":109,"column":9}},"range":[2396,2405],"raw":"\n###### 序"},{"type":"Paragraph","children":[{"type":"Str","value":"序号字段指的是一个报文段中第一个字节的序号。","loc":{"start":{"line":111,"column":0},"end":{"line":111,"column":22}},"range":[2407,2429],"raw":"\n序号字段指的是一个报文段中第一个字节的序号"}],"loc":{"start":{"line":111,"column":0},"end":{"line":111,"column":22}},"range":[2407,2429],"raw":"\n序号字段指的是一个报文段中第一个字节的序号"},{"type":"Header","depth":6,"children":[{"type":"Str","value":"确认","loc":{"start":{"line":113,"column":7},"end":{"line":113,"column":9}},"range":[2438,2440],"raw":" 确"}],"loc":{"start":{"line":113,"column":0},"end":{"line":113,"column":9}},"range":[2431,2440],"raw":"\n###### 确"},{"type":"Paragraph","children":[{"type":"Str","value":"采用累积确认机制，确认报文段内的确认号字段为接收方期待的下一个字节的序号","loc":{"start":{"line":115,"column":0},"end":{"line":115,"column":36}},"range":[2442,2478],"raw":"\n采用累积确认机制，确认报文段内的确认号字段为接收方期待的下一个字节的序"}],"loc":{"start":{"line":115,"column":0},"end":{"line":115,"column":36}},"range":[2442,2478],"raw":"\n采用累积确认机制，确认报文段内的确认号字段为接收方期待的下一个字节的序"},{"type":"Paragraph","children":[{"type":"Str","value":"冗余ACK：每当收到比期望序号大的报文段时，发送一个冗余ACK，指明下一个希望收到的字节的序号","loc":{"start":{"line":117,"column":0},"end":{"line":117,"column":47}},"range":[2480,2527],"raw":"\n冗余ACK：每当收到比期望序号大的报文段时，发送一个冗余ACK，指明下一个希望收到的字节的序"}],"loc":{"start":{"line":117,"column":0},"end":{"line":117,"column":47}},"range":[2480,2527],"raw":"\n冗余ACK：每当收到比期望序号大的报文段时，发送一个冗余ACK，指明下一个希望收到的字节的序"},{"type":"Header","depth":6,"children":[{"type":"Str","value":"重传","loc":{"start":{"line":119,"column":7},"end":{"line":119,"column":9}},"range":[2536,2538],"raw":" 重"}],"loc":{"start":{"line":119,"column":0},"end":{"line":119,"column":9}},"range":[2529,2538],"raw":"\n###### 重"},{"type":"Paragraph","children":[{"type":"Str","value":"超时重传：确认和重传是不分家的，TCP在**规定的时间（重传时间）**内没有收到确认，就会重传已发送但是未确认的报文段。","loc":{"start":{"line":121,"column":0},"end":{"line":121,"column":60}},"range":[2540,2600],"raw":"\n超时重传：确认和重传是不分家的，TCP在**规定的时间（重传时间）**内没有收到确认，就会重传已发送但是未确认的报文段"}],"loc":{"start":{"line":121,"column":0},"end":{"line":121,"column":60}},"range":[2540,2600],"raw":"\n超时重传：确认和重传是不分家的，TCP在**规定的时间（重传时间）**内没有收到确认，就会重传已发送但是未确认的报文段"},{"type":"Paragraph","children":[{"type":"Str","value":"TCP采用自适应算法，动态确定重传时间RTTs（加权平均往返时间）。","loc":{"start":{"line":123,"column":0},"end":{"line":123,"column":34}},"range":[2602,2636],"raw":"\nTCP采用自适应算法，动态确定重传时间RTTs（加权平均往返时间）"}],"loc":{"start":{"line":123,"column":0},"end":{"line":123,"column":34}},"range":[2602,2636],"raw":"\nTCP采用自适应算法，动态确定重传时间RTTs（加权平均往返时间）"},{"type":"Paragraph","children":[{"type":"Str","value":"快速重传：发送方收到","loc":{"start":{"line":125,"column":0},"end":{"line":125,"column":10}},"range":[2638,2648],"raw":"\n快速重传：发送方收"},{"type":"Strong","children":[{"type":"Str","value":"冗余ACK","loc":{"start":{"line":125,"column":12},"end":{"line":125,"column":17}},"range":[2650,2655],"raw":"*冗余AC"}],"loc":{"start":{"line":125,"column":10},"end":{"line":125,"column":19}},"range":[2648,2657],"raw":"到**冗余ACK*"},{"type":"Str","value":"之后，重新发送丢失的报文段","loc":{"start":{"line":125,"column":19},"end":{"line":125,"column":32}},"range":[2657,2670],"raw":"*之后，重新发送丢失的报文"}],"loc":{"start":{"line":125,"column":0},"end":{"line":125,"column":32}},"range":[2638,2670],"raw":"\n快速重传：发送方收到**冗余ACK**之后，重新发送丢失的报文"},{"type":"HorizontalRule","loc":{"start":{"line":127,"column":0},"end":{"line":127,"column":5}},"range":[2672,2677],"raw":"\n****"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"TCP流量控制","loc":{"start":{"line":129,"column":3},"end":{"line":129,"column":10}},"range":[2682,2689],"raw":" TCP流量控"}],"loc":{"start":{"line":129,"column":0},"end":{"line":129,"column":10}},"range":[2679,2689],"raw":"\n## TCP流量控"},{"type":"Paragraph","children":[{"type":"Str","value":"让发送方发慢点，使接收方可以来得及接收，使用","loc":{"start":{"line":131,"column":0},"end":{"line":131,"column":22}},"range":[2691,2713],"raw":"\n让发送方发慢点，使接收方可以来得及接收，使"},{"type":"Strong","children":[{"type":"Str","value":"滑动窗口的机制","loc":{"start":{"line":131,"column":24},"end":{"line":131,"column":31}},"range":[2715,2722],"raw":"*滑动窗口的机"}],"loc":{"start":{"line":131,"column":22},"end":{"line":131,"column":33}},"range":[2713,2724],"raw":"用**滑动窗口的机制*"},{"type":"Str","value":"来实现流量控制。","loc":{"start":{"line":131,"column":33},"end":{"line":131,"column":41}},"range":[2724,2732],"raw":"*来实现流量控制"}],"loc":{"start":{"line":131,"column":0},"end":{"line":131,"column":41}},"range":[2691,2732],"raw":"\n让发送方发慢点，使接收方可以来得及接收，使用**滑动窗口的机制**来实现流量控制"},{"type":"Paragraph","children":[{"type":"Str","value":"通信过程中，接收方根据自己的接收缓存大小，动态调整发送方发送窗口的大小，发送方的发送窗口大小取接收方接收窗口rwnd和拥塞窗口的最小值。","loc":{"start":{"line":133,"column":0},"end":{"line":133,"column":68}},"range":[2734,2802],"raw":"\n通信过程中，接收方根据自己的接收缓存大小，动态调整发送方发送窗口的大小，发送方的发送窗口大小取接收方接收窗口rwnd和拥塞窗口的最小值"}],"loc":{"start":{"line":133,"column":0},"end":{"line":133,"column":68}},"range":[2734,2802],"raw":"\n通信过程中，接收方根据自己的接收缓存大小，动态调整发送方发送窗口的大小，发送方的发送窗口大小取接收方接收窗口rwnd和拥塞窗口的最小值"},{"type":"Paragraph","children":[{"type":"Str","value":"TCP为每一个连接都设有持续计时器，只要TCP连接一方接收到另一方零窗口通知，就会启动持续计时器。","loc":{"start":{"line":135,"column":0},"end":{"line":135,"column":49}},"range":[2804,2853],"raw":"\nTCP为每一个连接都设有持续计时器，只要TCP连接一方接收到另一方零窗口通知，就会启动持续计时器"}],"loc":{"start":{"line":135,"column":0},"end":{"line":135,"column":49}},"range":[2804,2853],"raw":"\nTCP为每一个连接都设有持续计时器，只要TCP连接一方接收到另一方零窗口通知，就会启动持续计时器"},{"type":"Paragraph","children":[{"type":"Str","value":"如果持续计时器到期，就发送一个零窗口探测报文段，接收方收到探测报文段后，就会回复当前接收方的接收窗口的值。如果窗口值仍然是0，发送方就重新设置持续计时器，否则发送方继续发送数据。","loc":{"start":{"line":137,"column":0},"end":{"line":137,"column":89}},"range":[2855,2944],"raw":"\n如果持续计时器到期，就发送一个零窗口探测报文段，接收方收到探测报文段后，就会回复当前接收方的接收窗口的值。如果窗口值仍然是0，发送方就重新设置持续计时器，否则发送方继续发送数据"}],"loc":{"start":{"line":137,"column":0},"end":{"line":137,"column":89}},"range":[2855,2944],"raw":"\n如果持续计时器到期，就发送一个零窗口探测报文段，接收方收到探测报文段后，就会回复当前接收方的接收窗口的值。如果窗口值仍然是0，发送方就重新设置持续计时器，否则发送方继续发送数据"},{"type":"HorizontalRule","loc":{"start":{"line":139,"column":0},"end":{"line":139,"column":5}},"range":[2946,2951],"raw":"\n****"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"TCP拥塞控制","loc":{"start":{"line":141,"column":3},"end":{"line":141,"column":10}},"range":[2956,2963],"raw":" TCP拥塞控"}],"loc":{"start":{"line":141,"column":0},"end":{"line":141,"column":10}},"range":[2953,2963],"raw":"\n## TCP拥塞控"},{"type":"Paragraph","children":[{"type":"Str","value":"出现拥塞的条件：","loc":{"start":{"line":143,"column":0},"end":{"line":143,"column":8}},"range":[2965,2973],"raw":"\n出现拥塞的条件"}],"loc":{"start":{"line":143,"column":0},"end":{"line":143,"column":8}},"range":[2965,2973],"raw":"\n出现拥塞的条件"},{"type":"Paragraph","children":[{"type":"Str","value":"对资源需求的总和 > 可以用的资源","loc":{"start":{"line":145,"column":0},"end":{"line":145,"column":17}},"range":[2975,2992],"raw":"\n对资源需求的总和 > 可以用的资"}],"loc":{"start":{"line":145,"column":0},"end":{"line":145,"column":17}},"range":[2975,2992],"raw":"\n对资源需求的总和 > 可以用的资"},{"type":"Paragraph","children":[{"type":"Str","value":"网路中资源呈现供应不足  ","loc":{"start":{"line":147,"column":0},"end":{"line":147,"column":13}},"range":[2994,3007],"raw":"\n网路中资源呈现供应不足 "},{"type":"InlineMath","value":"\\Rrightarrow","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"\\Rrightarrow"}]},"loc":{"start":{"line":147,"column":13},"end":{"line":147,"column":27}},"range":[3007,3021],"raw":" $\\Rrightarrow"},{"type":"Str","value":"  网路性能变坏  ","loc":{"start":{"line":147,"column":27},"end":{"line":147,"column":37}},"range":[3021,3031],"raw":"$  网路性能变坏 "},{"type":"InlineMath","value":"\\Rrightarrow","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"\\Rrightarrow"}]},"loc":{"start":{"line":147,"column":37},"end":{"line":147,"column":51}},"range":[3031,3045],"raw":" $\\Rrightarrow"},{"type":"Str","value":"  由于重发等引起网络的负荷增大  ","loc":{"start":{"line":147,"column":51},"end":{"line":147,"column":69}},"range":[3045,3063],"raw":"$  由于重发等引起网络的负荷增大 "},{"type":"InlineMath","value":"\\Rrightarrow","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"\\Rrightarrow"}]},"loc":{"start":{"line":147,"column":69},"end":{"line":147,"column":83}},"range":[3063,3077],"raw":" $\\Rrightarrow"},{"type":"Str","value":"  网络吞吐量下降   ","loc":{"start":{"line":147,"column":83},"end":{"line":147,"column":95}},"range":[3077,3089],"raw":"$  网络吞吐量下降  "},{"type":"InlineMath","value":"\\Rrightarrow","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"\\Rrightarrow"}]},"loc":{"start":{"line":147,"column":95},"end":{"line":147,"column":109}},"range":[3089,3103],"raw":" $\\Rrightarrow"},{"type":"Str","value":"  网络资源供应更加不足。","loc":{"start":{"line":147,"column":109},"end":{"line":147,"column":122}},"range":[3103,3116],"raw":"$  网络资源供应更加不足"}],"loc":{"start":{"line":147,"column":0},"end":{"line":147,"column":122}},"range":[2994,3116],"raw":"\n网路中资源呈现供应不足  $\\Rrightarrow$  网路性能变坏  $\\Rrightarrow$  由于重发等引起网络的负荷增大  $\\Rrightarrow$  网络吞吐量下降   $\\Rrightarrow$  网络资源供应更加不足"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"拥塞控制的四种算法","loc":{"start":{"line":149,"column":4},"end":{"line":149,"column":13}},"range":[3122,3131],"raw":" 拥塞控制的四种算"}],"loc":{"start":{"line":149,"column":0},"end":{"line":149,"column":13}},"range":[3118,3131],"raw":"\n### 拥塞控制的四种算"},{"type":"Paragraph","children":[{"type":"Str","value":"假定:","loc":{"start":{"line":151,"column":0},"end":{"line":151,"column":3}},"range":[3133,3136],"raw":"\n假定"}],"loc":{"start":{"line":151,"column":0},"end":{"line":151,"column":3}},"range":[3133,3136],"raw":"\n假定"},{"type":"List","ordered":true,"start":1,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"数据单方向传送,而另一个方向只传送确认","loc":{"start":{"line":152,"column":3},"end":{"line":152,"column":22}},"range":[3140,3159],"raw":" 数据单方向传送,而另一个方向只传送确"}],"loc":{"start":{"line":152,"column":3},"end":{"line":152,"column":22}},"range":[3140,3159],"raw":" 数据单方向传送,而另一个方向只传送确"}],"loc":{"start":{"line":152,"column":0},"end":{"line":152,"column":22}},"range":[3137,3159],"raw":"\n1. 数据单方向传送,而另一个方向只传送确"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"接收方总是有足够大的缓存空间,因而发送窗口大小取决于拥塞程度","loc":{"start":{"line":153,"column":3},"end":{"line":153,"column":33}},"range":[3163,3193],"raw":" 接收方总是有足够大的缓存空间,因而发送窗口大小取决于拥塞程"}],"loc":{"start":{"line":153,"column":3},"end":{"line":153,"column":33}},"range":[3163,3193],"raw":" 接收方总是有足够大的缓存空间,因而发送窗口大小取决于拥塞程"}],"loc":{"start":{"line":153,"column":0},"end":{"line":153,"column":33}},"range":[3160,3193],"raw":"\n2. 接收方总是有足够大的缓存空间,因而发送窗口大小取决于拥塞程"}],"loc":{"start":{"line":152,"column":0},"end":{"line":154,"column":3}},"range":[3137,3197],"raw":"\n1. 数据单方向传送,而另一个方向只传送确认\n2. 接收方总是有足够大的缓存空间,因而发送窗口大小取决于拥塞程度\n  "},{"type":"Paragraph","children":[{"type":"Str","value":"发送窗口=Min{接收窗口rwnd,拥塞窗口cwnd}","loc":{"start":{"line":156,"column":0},"end":{"line":156,"column":27}},"range":[3199,3226],"raw":"\n发送窗口=Min{接收窗口rwnd,拥塞窗口cwnd"}],"loc":{"start":{"line":156,"column":0},"end":{"line":156,"column":27}},"range":[3199,3226],"raw":"\n发送窗口=Min{接收窗口rwnd,拥塞窗口cwnd"},{"type":"Paragraph","children":[{"type":"Str","value":"接收窗口：接收方根据接受缓存设置的值,并告知给发送方,反映接收方容量。\n拥塞窗口：发送方根据自己估算的网络拥塞程度而设置的窗口值,反映网络当前容量。","loc":{"start":{"line":158,"column":0},"end":{"line":159,"column":38}},"range":[3228,3302],"raw":"\n接收窗口：接收方根据接受缓存设置的值,并告知给发送方,反映接收方容量。\n拥塞窗口：发送方根据自己估算的网络拥塞程度而设置的窗口值,反映网络当前容量"}],"loc":{"start":{"line":158,"column":0},"end":{"line":159,"column":38}},"range":[3228,3302],"raw":"\n接收窗口：接收方根据接受缓存设置的值,并告知给发送方,反映接收方容量。\n拥塞窗口：发送方根据自己估算的网络拥塞程度而设置的窗口值,反映网络当前容量"},{"type":"HorizontalRule","loc":{"start":{"line":161,"column":0},"end":{"line":161,"column":5}},"range":[3304,3309],"raw":"\n****"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"慢开始和 拥塞避免","loc":{"start":{"line":163,"column":5},"end":{"line":163,"column":14}},"range":[3316,3325],"raw":" 慢开始和 拥塞避"}],"loc":{"start":{"line":163,"column":0},"end":{"line":163,"column":14}},"range":[3311,3325],"raw":"\n#### 慢开始和 拥塞避"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/08/11/tYRL6yS1vHOUB5P.png","alt":"截屏 2020-08-11 下午8.20.00.png","loc":{"start":{"line":165,"column":0},"end":{"line":165,"column":81}},"range":[3327,3408],"raw":"\n![截屏 2020-08-11 下午8.20.00.png](https://i.loli.net/2020/08/11/tYRL6yS1vHOUB5P.png"}],"loc":{"start":{"line":165,"column":0},"end":{"line":165,"column":81}},"range":[3327,3408],"raw":"\n![截屏 2020-08-11 下午8.20.00.png](https://i.loli.net/2020/08/11/tYRL6yS1vHOUB5P.png"},{"type":"Paragraph","children":[{"type":"Str","value":"开始时采用指数增长注入数据报的数量，达到ssthresh时，为了避免网络拥塞，使用“假发增大”，发生网络拥塞的时候，将当前的窗口数量除以2，作为新的门限值ssthresh，将拥塞窗口调整到1，继续执行慢开始。","loc":{"start":{"line":167,"column":0},"end":{"line":167,"column":104}},"range":[3410,3514],"raw":"\n开始时采用指数增长注入数据报的数量，达到ssthresh时，为了避免网络拥塞，使用“假发增大”，发生网络拥塞的时候，将当前的窗口数量除以2，作为新的门限值ssthresh，将拥塞窗口调整到1，继续执行慢开始"}],"loc":{"start":{"line":167,"column":0},"end":{"line":167,"column":104}},"range":[3410,3514],"raw":"\n开始时采用指数增长注入数据报的数量，达到ssthresh时，为了避免网络拥塞，使用“假发增大”，发生网络拥塞的时候，将当前的窗口数量除以2，作为新的门限值ssthresh，将拥塞窗口调整到1，继续执行慢开始"},{"type":"Paragraph","children":[{"type":"Str","value":"调整拥塞窗口数量的时机：收到接收方的确认的时候，调整拥塞窗口的数量","loc":{"start":{"line":169,"column":0},"end":{"line":169,"column":33}},"range":[3516,3549],"raw":"\n调整拥塞窗口数量的时机：收到接收方的确认的时候，调整拥塞窗口的数"}],"loc":{"start":{"line":169,"column":0},"end":{"line":169,"column":33}},"range":[3516,3549],"raw":"\n调整拥塞窗口数量的时机：收到接收方的确认的时候，调整拥塞窗口的数"},{"type":"HorizontalRule","loc":{"start":{"line":171,"column":0},"end":{"line":171,"column":5}},"range":[3551,3556],"raw":"\n****"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"快重传和快恢复","loc":{"start":{"line":173,"column":5},"end":{"line":173,"column":12}},"range":[3563,3570],"raw":" 快重传和快恢"}],"loc":{"start":{"line":173,"column":0},"end":{"line":173,"column":12}},"range":[3558,3570],"raw":"\n#### 快重传和快恢"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/08/11/NKETm21jwAVsDUo.png","alt":"截屏 2020-08-11 下午8.28.31.png","loc":{"start":{"line":175,"column":0},"end":{"line":175,"column":81}},"range":[3572,3653],"raw":"\n![截屏 2020-08-11 下午8.28.31.png](https://i.loli.net/2020/08/11/NKETm21jwAVsDUo.png"}],"loc":{"start":{"line":175,"column":0},"end":{"line":175,"column":81}},"range":[3572,3653],"raw":"\n![截屏 2020-08-11 下午8.28.31.png](https://i.loli.net/2020/08/11/NKETm21jwAVsDUo.png"},{"type":"Paragraph","children":[{"type":"Str","value":"在收到接收方的冗余ACK时，不用将拥塞窗口降到1，而是降到新的门限值。","loc":{"start":{"line":177,"column":0},"end":{"line":177,"column":35}},"range":[3655,3690],"raw":"\n在收到接收方的冗余ACK时，不用将拥塞窗口降到1，而是降到新的门限值"}],"loc":{"start":{"line":177,"column":0},"end":{"line":177,"column":35}},"range":[3655,3690],"raw":"\n在收到接收方的冗余ACK时，不用将拥塞窗口降到1，而是降到新的门限值"}],"loc":{"start":{"line":1,"column":0},"end":{"line":178,"column":0}},"range":[0,3691],"raw":"﻿---\ntitle: 'TCP协议'\ntags: ['计算机网路','传输层','TCP']\n---\n# TCP协议的特点和TCP报文格式\n\n*****\n\n## 特点\n\n1. 面向连接（虚连接）的传输层协议\n2. 每一条TCP连接只能是点对点的\n3. TCP可以提供可靠的交付服务，无差错，不丢失、不重复、按照顺序到达\n4. 可以提供全双工通信\n   - 发送缓存：准备发送的数据 & 已发送但尚未收到确认的数据 的队列\n   - 接收缓存：按序到达但未被接收应用程序读取的数据 & 不按序到达的数据\n5. 面向字节流：TCP把应用程序交下来的数据仅仅看成是一连串无结构的字节流\n\n### RTT估计方法\n\n $新估计RTT=(1-\\alpha) * (旧RTT) + \\alpha*新RTT样本$ \n\n*****\n\n## 首部格式\n\n![截屏 2020-08-11 下午4.11.16.png](https://i.loli.net/2020/08/11/YzRPSbdorQX2fsy.png)\n\n- 源端口、目的端口：一个占用两个字节\n- 序号：在一个TCP连接中，传送的字节流中的每一个字节都按照顺序编号，本字段表示本报文段所发送的数据的第一个字节的序号。\n- 确认号：期望收到对方下一个报文段的第一个数据字节的序号。若确认号为N，证明到序号N-1为止的数据都已经正确接收。\n- 数据便宜（首部长度）：TCP报文段的数据起始处距离TCP报文段的起始处有多远，以4字节为单位，即1个数为4字节。\n- 控制位：\n  - URG紧急位：URG=1时，表明此报文段有紧急数据，是高优先级的数据，应该尽快传送，不用在缓存里排队，配合紧急指针字段使用\n  - ACK确认位：ACK=1时确认号有效，在连接建立后所有的传送都必须把ACK置位1\n  - PSH推送位：PSH=1时接收方应该尽快交付给接收应用进程，不再等到缓存填满再向上交付\n  - RST复位：RST=1时表明TCP连接中出现严重的差错，必须释放连接，然后重新建立传输连接\n  - SYN同步位：SYN=1时，表明是一个连接请求/连接接受报文\n  - FIN终止位：FIN=1时，表明此报文段发送方的数据已经发送完，要求释放连接\n- 窗口：指的是发送本报文段的一方的接收窗口（自己的接收窗口），即现在允许接收的数据量\n- 检验和：检验首部+数据部分，检验时要加上12B的伪首部，第四个字段为6\n- 紧急指针：URG紧急位=1时才有意义，指出本报文段中紧急数据的字节数，从数据部分开始位到紧急指针的位是紧急数据，剩下的数据是普通数据。\n- 选项：最大报文段长度MSS、窗口扩大、时间戳、选择确认等\n\n*****\n\n## TCP连接管理\n\nTCP建立连接的三个阶段：\n\n### 连接建立\n\nTCP连接的建立采用客户服务器方式，主动发起连接的应用进程叫做客户端，被动等待连接的应用进程叫做服务器。\n\n![截屏 2020-08-11 下午5.08.44.png](https://i.loli.net/2020/08/11/H2YG8nSjok7PZs5.png)\n\n1. 客户端发送连接请求报文段，无应用层数据\n\n   SYN = 1, 序号seq = x[随机]\n\n2. 服务器端为该TCP连接分配缓存和变量，并向客户端回复确认报文段，允许连接，无应用层数据。\n\n   SYN = 1, ACK=1, seq=y[随机], ack=x+1\n\n3. 客户端为该TCP连接分配缓存和变量，并向服务器端回复确认的确认，可以携带数据。\n\n   ACK = 1, seq=x+1, ack=y+1\n\n#### SYN洪泛攻击\n\nSYN洪泛攻击发生在OSI第四层,这种方式利用TCP协议的特性,就是三次握手。攻击者发送TCP SYN,SYN是TCP三次握手中的**第一个数据包**，而当服务器返回ACK后，该攻击者就不对其进行再确认，那这个TCP连接就处于挂起状态，也就是所谓的半连接状态，服务器收不到再确认的话，还会重复发送ACK给攻击者。这样更加会浪费服务器的资源。攻击者就对服务器发送非常大量的这种TCP连接，由于每一个都没法完成三次握手，所以在服务器上,这些TCP连接会因为挂起状态而消耗CPU和内存，最后服务器可能死机，就无法为正常用户提供服务了。\n\n解决SYN洪泛攻击的方法是设置SYN cookie\n\n### 连接释放\n\n参与一条TCP连接的两个进程中的任何一个都能终止该进程，连接结束后，主机中的资源（缓存和变量）将被释放。\n\n![截屏 2020-08-11 下午5.21.08.png](https://i.loli.net/2020/08/11/RmExnKFqW15vsc2.png)\n\n- 客户端发送连接释放报文段，停止发送数据，主动关闭TCP连接\n  \n  FIN = 1, seq = u\n\n- 服务器回送一个确认报文段，客户端服务器这个方向的连接就释放了，处于半关闭的状态\n\n  ACK = 1, seq = v, ack = u+1\n\n- 服务器端发完数据，就发出连接释放报文段，主动关闭TCP连接\n\n  FIN = 1, ACK = 1, seq = w, ack = u+1\n\n- 客户端回复一个确认报文段，等到等待倒计时设置的2MSL（最长报文段寿命）后，连接彻底关闭（避免本报文段丢失导致服务器端连接一直得不到释放）\n  \n  ACK = 1, seq = u+1, ack = w+1\n\n### 数据传送\n\n#### TCP 可靠传输\n\n可靠：保证接收方进程从缓存中读取的字节流于发送方发出的字节流完全一样\n\n##### TCP实现可靠传输的机制\n\n###### 校验\n\n与UDP校验相同，引入了伪首部\n\n###### 序号\n\n序号字段指的是一个报文段中第一个字节的序号。\n\n###### 确认\n\n采用累积确认机制，确认报文段内的确认号字段为接收方期待的下一个字节的序号\n\n冗余ACK：每当收到比期望序号大的报文段时，发送一个冗余ACK，指明下一个希望收到的字节的序号\n\n###### 重传\n\n超时重传：确认和重传是不分家的，TCP在**规定的时间（重传时间）**内没有收到确认，就会重传已发送但是未确认的报文段。\n\nTCP采用自适应算法，动态确定重传时间RTTs（加权平均往返时间）。\n\n快速重传：发送方收到**冗余ACK**之后，重新发送丢失的报文段\n\n*****\n\n## TCP流量控制\n\n让发送方发慢点，使接收方可以来得及接收，使用**滑动窗口的机制**来实现流量控制。\n\n通信过程中，接收方根据自己的接收缓存大小，动态调整发送方发送窗口的大小，发送方的发送窗口大小取接收方接收窗口rwnd和拥塞窗口的最小值。\n\nTCP为每一个连接都设有持续计时器，只要TCP连接一方接收到另一方零窗口通知，就会启动持续计时器。\n\n如果持续计时器到期，就发送一个零窗口探测报文段，接收方收到探测报文段后，就会回复当前接收方的接收窗口的值。如果窗口值仍然是0，发送方就重新设置持续计时器，否则发送方继续发送数据。\n\n*****\n\n## TCP拥塞控制\n\n出现拥塞的条件：\n\n对资源需求的总和 > 可以用的资源\n\n网路中资源呈现供应不足  $\\Rrightarrow$  网路性能变坏  $\\Rrightarrow$  由于重发等引起网络的负荷增大  $\\Rrightarrow$  网络吞吐量下降   $\\Rrightarrow$  网络资源供应更加不足。\n\n### 拥塞控制的四种算法\n\n假定:\n1. 数据单方向传送,而另一个方向只传送确认\n2. 接收方总是有足够大的缓存空间,因而发送窗口大小取决于拥塞程度\n   \n\n发送窗口=Min{接收窗口rwnd,拥塞窗口cwnd}\n\n接收窗口：接收方根据接受缓存设置的值,并告知给发送方,反映接收方容量。\n拥塞窗口：发送方根据自己估算的网络拥塞程度而设置的窗口值,反映网络当前容量。\n\n*****\n\n#### 慢开始和 拥塞避免\n\n![截屏 2020-08-11 下午8.20.00.png](https://i.loli.net/2020/08/11/tYRL6yS1vHOUB5P.png)\n\n开始时采用指数增长注入数据报的数量，达到ssthresh时，为了避免网络拥塞，使用“假发增大”，发生网络拥塞的时候，将当前的窗口数量除以2，作为新的门限值ssthresh，将拥塞窗口调整到1，继续执行慢开始。\n\n调整拥塞窗口数量的时机：收到接收方的确认的时候，调整拥塞窗口的数量\n\n*****\n\n#### 快重传和快恢复\n\n![截屏 2020-08-11 下午8.28.31.png](https://i.loli.net/2020/08/11/NKETm21jwAVsDUo.png)\n\n在收到接收方的冗余ACK时，不用将拥塞窗口降到1，而是降到新的门限值。"},"catalogue":{"title":"TCP协议","json-path":"计算机网络/2020-08-11-TCP协议的特点和TCP报文格式.json","mdate":"2020-08-11","cover":"https://i.328888.xyz/2023/01/01/tZMoa.jpeg","icon":"🔥","visible":true,"tags":["计算机网路","传输层","TCP"]}}