{"ast":{"type":"Document","children":[{"type":"Yaml","value":"title: '进程通信'\ntags: ['操作系统','进程']","loc":{"start":{"line":1,"column":0},"end":{"line":4,"column":3}},"range":[0,41],"raw":"---\ntitle: '进程通信'\ntags: ['操作系统','进程']\n---"},{"type":"Header","depth":1,"children":[{"type":"Str","value":"进程通信","loc":{"start":{"line":5,"column":2},"end":{"line":5,"column":6}},"range":[44,48],"raw":"进程通信"}],"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":6}},"range":[42,48],"raw":"# 进程通信"},{"type":"Paragraph","children":[{"type":"Str","value":"为了保证系统的安全，一个进程不能直接访问另一个进程的地址空间。为了在保证安全的情况下让进程之间可以通信，操作系统提供了“共享存储”、“消息传递”和“管道通信”三种方式。","loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":84}},"range":[50,134],"raw":"为了保证系统的安全，一个进程不能直接访问另一个进程的地址空间。为了在保证安全的情况下让进程之间可以通信，操作系统提供了“共享存储”、“消息传递”和“管道通信”三种方式。"}],"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":84}},"range":[50,134],"raw":"为了保证系统的安全，一个进程不能直接访问另一个进程的地址空间。为了在保证安全的情况下让进程之间可以通信，操作系统提供了“共享存储”、“消息传递”和“管道通信”三种方式。"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"共享存储","loc":{"start":{"line":9,"column":3},"end":{"line":9,"column":7}},"range":[139,143],"raw":"共享存储"}],"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":7}},"range":[136,143],"raw":"## 共享存储"},{"type":"Paragraph","children":[{"type":"Str","value":"操作系统为两个需要通信的进程创建一块二者均可以访问的共享空间，值得注意的是它们","loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":39}},"range":[145,184],"raw":"操作系统为两个需要通信的进程创建一块二者均可以访问的共享空间，值得注意的是它们"},{"type":"Strong","children":[{"type":"Str","value":"访问共享空间是互斥","loc":{"start":{"line":11,"column":41},"end":{"line":11,"column":50}},"range":[186,195],"raw":"访问共享空间是互斥"}],"loc":{"start":{"line":11,"column":39},"end":{"line":11,"column":52}},"range":[184,197],"raw":"**访问共享空间是互斥**"},{"type":"Str","value":"的。","loc":{"start":{"line":11,"column":52},"end":{"line":11,"column":54}},"range":[197,199],"raw":"的。"}],"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":54}},"range":[145,199],"raw":"操作系统为两个需要通信的进程创建一块二者均可以访问的共享空间，值得注意的是它们**访问共享空间是互斥**的。"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"基于数据结构的共享","loc":{"start":{"line":13,"column":4},"end":{"line":13,"column":13}},"range":[205,214],"raw":"基于数据结构的共享"}],"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":13}},"range":[201,214],"raw":"### 基于数据结构的共享"},{"type":"Paragraph","children":[{"type":"Str","value":"规定共享空间内可以存放的数据结构，例如可以存放长度为10的数组。","loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":32}},"range":[216,248],"raw":"规定共享空间内可以存放的数据结构，例如可以存放长度为10的数组。"}],"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":32}},"range":[216,248],"raw":"规定共享空间内可以存放的数据结构，例如可以存放长度为10的数组。"},{"type":"Paragraph","children":[{"type":"Str","value":"通信方式慢，是一种低级的通信方式。","loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":17}},"range":[250,267],"raw":"通信方式慢，是一种低级的通信方式。"}],"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":17}},"range":[250,267],"raw":"通信方式慢，是一种低级的通信方式。"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"基于存储区的共享","loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":12}},"range":[273,281],"raw":"基于存储区的共享"}],"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":12}},"range":[269,281],"raw":"### 基于存储区的共享"},{"type":"Paragraph","children":[{"type":"Str","value":"在内存中划出一块共享存储区域，数据的形式、存放为止由进程自行控制。","loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":33}},"range":[283,316],"raw":"在内存中划出一块共享存储区域，数据的形式、存放为止由进程自行控制。"}],"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":33}},"range":[283,316],"raw":"在内存中划出一块共享存储区域，数据的形式、存放为止由进程自行控制。"},{"type":"Paragraph","children":[{"type":"Str","value":"共享更快，是一种高级通信方式。","loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":15}},"range":[318,333],"raw":"共享更快，是一种高级通信方式。"}],"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":15}},"range":[318,333],"raw":"共享更快，是一种高级通信方式。"},{"type":"HorizontalRule","loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":5}},"range":[335,340],"raw":"*****"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"消息传递","loc":{"start":{"line":27,"column":3},"end":{"line":27,"column":7}},"range":[345,349],"raw":"消息传递"}],"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":7}},"range":[342,349],"raw":"## 消息传递"},{"type":"Paragraph","children":[{"type":"Str","value":"进程之间用","loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":5}},"range":[351,356],"raw":"进程之间用"},{"type":"Strong","children":[{"type":"Str","value":"格式化消息","loc":{"start":{"line":29,"column":7},"end":{"line":29,"column":12}},"range":[358,363],"raw":"格式化消息"}],"loc":{"start":{"line":29,"column":5},"end":{"line":29,"column":14}},"range":[356,365],"raw":"**格式化消息**"},{"type":"Str","value":"（Message）为单位交换数据。通过操作系统的“发送/接收消息”两个原语进行数据交换。","loc":{"start":{"line":29,"column":14},"end":{"line":29,"column":58}},"range":[365,409],"raw":"（Message）为单位交换数据。通过操作系统的“发送/接收消息”两个原语进行数据交换。"}],"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":58}},"range":[351,409],"raw":"进程之间用**格式化消息**（Message）为单位交换数据。通过操作系统的“发送/接收消息”两个原语进行数据交换。"},{"type":"Paragraph","children":[{"type":"Str","value":"消息包括：","loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":5}},"range":[411,416],"raw":"消息包括："}],"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":5}},"range":[411,416],"raw":"消息包括："},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"消息头\n发送进程ID、接收进程ID、消息类型、消息长度等格式化信息","loc":{"start":{"line":33,"column":2},"end":{"line":34,"column":31}},"range":[420,455],"raw":"消息头\n  发送进程ID、接收进程ID、消息类型、消息长度等格式化信息"}],"loc":{"start":{"line":33,"column":2},"end":{"line":34,"column":31}},"range":[420,455],"raw":"消息头\n  发送进程ID、接收进程ID、消息类型、消息长度等格式化信息"}],"loc":{"start":{"line":33,"column":0},"end":{"line":34,"column":31}},"range":[418,455],"raw":"- 消息头\n  发送进程ID、接收进程ID、消息类型、消息长度等格式化信息"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"消息体","loc":{"start":{"line":35,"column":2},"end":{"line":35,"column":5}},"range":[458,461],"raw":"消息体"}],"loc":{"start":{"line":35,"column":2},"end":{"line":35,"column":5}},"range":[458,461],"raw":"消息体"}],"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":5}},"range":[456,461],"raw":"- 消息体"}],"loc":{"start":{"line":33,"column":0},"end":{"line":35,"column":5}},"range":[418,461],"raw":"- 消息头\n  发送进程ID、接收进程ID、消息类型、消息长度等格式化信息\n- 消息体"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"直接通信方式","loc":{"start":{"line":37,"column":4},"end":{"line":37,"column":10}},"range":[467,473],"raw":"直接通信方式"}],"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":10}},"range":[463,473],"raw":"### 直接通信方式"},{"type":"Paragraph","children":[{"type":"Str","value":"消息直接挂到接收进程的消息缓冲队列上","loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":18}},"range":[475,493],"raw":"消息直接挂到接收进程的消息缓冲队列上"}],"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":18}},"range":[475,493],"raw":"消息直接挂到接收进程的消息缓冲队列上"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"间接通信方式","loc":{"start":{"line":41,"column":4},"end":{"line":41,"column":10}},"range":[499,505],"raw":"间接通信方式"}],"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":10}},"range":[495,505],"raw":"### 间接通信方式"},{"type":"Paragraph","children":[{"type":"Str","value":"消息要先发送到中间实体（信箱）中，因此也称为“信箱通信方式”","loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":30}},"range":[507,537],"raw":"消息要先发送到中间实体（信箱）中，因此也称为“信箱通信方式”"}],"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":30}},"range":[507,537],"raw":"消息要先发送到中间实体（信箱）中，因此也称为“信箱通信方式”"},{"type":"HorizontalRule","loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":5}},"range":[539,544],"raw":"*****"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"管道通信","loc":{"start":{"line":47,"column":3},"end":{"line":47,"column":7}},"range":[549,553],"raw":"管道通信"}],"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":7}},"range":[546,553],"raw":"## 管道通信"},{"type":"List","ordered":true,"start":1,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"管道可以实现半双工的通信，某一时间段内只能实现单向的数据传输，如果要实现双工通信，可以设置两个管道","loc":{"start":{"line":49,"column":3},"end":{"line":49,"column":52}},"range":[558,607],"raw":"管道可以实现半双工的通信，某一时间段内只能实现单向的数据传输，如果要实现双工通信，可以设置两个管道"}],"loc":{"start":{"line":49,"column":3},"end":{"line":49,"column":52}},"range":[558,607],"raw":"管道可以实现半双工的通信，某一时间段内只能实现单向的数据传输，如果要实现双工通信，可以设置两个管道"}],"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":52}},"range":[555,607],"raw":"1. 管道可以实现半双工的通信，某一时间段内只能实现单向的数据传输，如果要实现双工通信，可以设置两个管道"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"各个进程对管道的访问","loc":{"start":{"line":50,"column":3},"end":{"line":50,"column":13}},"range":[611,621],"raw":"各个进程对管道的访问"},{"type":"Strong","children":[{"type":"Str","value":"是互斥的","loc":{"start":{"line":50,"column":15},"end":{"line":50,"column":19}},"range":[623,627],"raw":"是互斥的"}],"loc":{"start":{"line":50,"column":13},"end":{"line":50,"column":21}},"range":[621,629],"raw":"**是互斥的**"}],"loc":{"start":{"line":50,"column":3},"end":{"line":50,"column":21}},"range":[611,629],"raw":"各个进程对管道的访问**是互斥的**"}],"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":21}},"range":[608,629],"raw":"2. 各个进程对管道的访问**是互斥的**"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"数据以字符流的形式写入管道，当管道写满的时候，写进程的write系统调用会被操作系统阻塞，等待读进程取走数据。数据全部取走之后，管道变空，此时读进程的read()系统掉哟个将被阻塞","loc":{"start":{"line":51,"column":3},"end":{"line":51,"column":93}},"range":[633,723],"raw":"数据以字符流的形式写入管道，当管道写满的时候，写进程的write系统调用会被操作系统阻塞，等待读进程取走数据。数据全部取走之后，管道变空，此时读进程的read()系统掉哟个将被阻塞"}],"loc":{"start":{"line":51,"column":3},"end":{"line":51,"column":93}},"range":[633,723],"raw":"数据以字符流的形式写入管道，当管道写满的时候，写进程的write系统调用会被操作系统阻塞，等待读进程取走数据。数据全部取走之后，管道变空，此时读进程的read()系统掉哟个将被阻塞"}],"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":93}},"range":[630,723],"raw":"3. 数据以字符流的形式写入管道，当管道写满的时候，写进程的write系统调用会被操作系统阻塞，等待读进程取走数据。数据全部取走之后，管道变空，此时读进程的read()系统掉哟个将被阻塞"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"数据没有写满就不允许读数据，如果没有读空就不能写入数据","loc":{"start":{"line":52,"column":3},"end":{"line":52,"column":30}},"range":[727,754],"raw":"数据没有写满就不允许读数据，如果没有读空就不能写入数据"}],"loc":{"start":{"line":52,"column":3},"end":{"line":52,"column":30}},"range":[727,754],"raw":"数据没有写满就不允许读数据，如果没有读空就不能写入数据"}],"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":30}},"range":[724,754],"raw":"4. 数据没有写满就不允许读数据，如果没有读空就不能写入数据"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"数据一旦被读出，就会从管道中移除，所以读进程只能有一个，否则可能会读错数据","loc":{"start":{"line":53,"column":3},"end":{"line":53,"column":40}},"range":[758,795],"raw":"数据一旦被读出，就会从管道中移除，所以读进程只能有一个，否则可能会读错数据"}],"loc":{"start":{"line":53,"column":3},"end":{"line":53,"column":40}},"range":[758,795],"raw":"数据一旦被读出，就会从管道中移除，所以读进程只能有一个，否则可能会读错数据"}],"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":40}},"range":[755,795],"raw":"5. 数据一旦被读出，就会从管道中移除，所以读进程只能有一个，否则可能会读错数据"}],"loc":{"start":{"line":49,"column":0},"end":{"line":53,"column":40}},"range":[555,795],"raw":"1. 管道可以实现半双工的通信，某一时间段内只能实现单向的数据传输，如果要实现双工通信，可以设置两个管道\n2. 各个进程对管道的访问**是互斥的**\n3. 数据以字符流的形式写入管道，当管道写满的时候，写进程的write系统调用会被操作系统阻塞，等待读进程取走数据。数据全部取走之后，管道变空，此时读进程的read()系统掉哟个将被阻塞\n4. 数据没有写满就不允许读数据，如果没有读空就不能写入数据\n5. 数据一旦被读出，就会从管道中移除，所以读进程只能有一个，否则可能会读错数据"}],"loc":{"start":{"line":1,"column":0},"end":{"line":54,"column":0}},"range":[0,796],"raw":"---\ntitle: '进程通信'\ntags: ['操作系统','进程']\n---\n# 进程通信\n\n为了保证系统的安全，一个进程不能直接访问另一个进程的地址空间。为了在保证安全的情况下让进程之间可以通信，操作系统提供了“共享存储”、“消息传递”和“管道通信”三种方式。\n\n## 共享存储\n\n操作系统为两个需要通信的进程创建一块二者均可以访问的共享空间，值得注意的是它们**访问共享空间是互斥**的。\n\n### 基于数据结构的共享\n\n规定共享空间内可以存放的数据结构，例如可以存放长度为10的数组。\n\n通信方式慢，是一种低级的通信方式。\n\n### 基于存储区的共享\n\n在内存中划出一块共享存储区域，数据的形式、存放为止由进程自行控制。\n\n共享更快，是一种高级通信方式。\n\n*****\n\n## 消息传递\n\n进程之间用**格式化消息**（Message）为单位交换数据。通过操作系统的“发送/接收消息”两个原语进行数据交换。\n\n消息包括：\n\n- 消息头\n  发送进程ID、接收进程ID、消息类型、消息长度等格式化信息\n- 消息体\n\n### 直接通信方式\n\n消息直接挂到接收进程的消息缓冲队列上\n\n### 间接通信方式\n\n消息要先发送到中间实体（信箱）中，因此也称为“信箱通信方式”\n\n*****\n\n## 管道通信\n\n1. 管道可以实现半双工的通信，某一时间段内只能实现单向的数据传输，如果要实现双工通信，可以设置两个管道\n2. 各个进程对管道的访问**是互斥的**\n3. 数据以字符流的形式写入管道，当管道写满的时候，写进程的write系统调用会被操作系统阻塞，等待读进程取走数据。数据全部取走之后，管道变空，此时读进程的read()系统掉哟个将被阻塞\n4. 数据没有写满就不允许读数据，如果没有读空就不能写入数据\n5. 数据一旦被读出，就会从管道中移除，所以读进程只能有一个，否则可能会读错数据\n"},"catalogue":{"title":"进程通信","json-path":"2020-08-12-进程通信.json","mdate":"2022-08-30T14:19:31.454Z","tags":["操作系统","进程"]}}