{"ast":{"type":"Document","children":[{"type":"Header","depth":1,"children":[{"type":"Str","value":"AMD(define/require)","loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":21}},"range":[2,21],"raw":"AMD(define/require)"}],"loc":{"start":{"line":1,"column":0},"end":{"line":1,"column":21}},"range":[0,21],"raw":"# AMD(define/require)"},{"type":"Paragraph","children":[{"type":"Str","value":"Tags: define, require","loc":{"start":{"line":3,"column":0},"end":{"line":3,"column":21}},"range":[23,44],"raw":"Tags: define, require"}],"loc":{"start":{"line":3,"column":0},"end":{"line":3,"column":21}},"range":[23,44],"raw":"Tags: define, require"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"概述","loc":{"start":{"line":5,"column":3},"end":{"line":5,"column":5}},"range":[49,51],"raw":"概述"}],"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":5}},"range":[46,51],"raw":"## 概述"},{"type":"Paragraph","children":[{"type":"Str","value":"AMD 也是一种社区开发者实现的 JavaScript 模块化规范，与 CommonJS 不同的是，AMD的导入 require 是","loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":66}},"range":[53,119],"raw":"AMD 也是一种社区开发者实现的 JavaScript 模块化规范，与 CommonJS 不同的是，AMD的导入 require 是"},{"type":"Strong","children":[{"type":"Str","value":"异步","loc":{"start":{"line":7,"column":68},"end":{"line":7,"column":70}},"range":[121,123],"raw":"异步"}],"loc":{"start":{"line":7,"column":66},"end":{"line":7,"column":72}},"range":[119,125],"raw":"**异步**"},{"type":"Str","value":"的，AMD 模块化规范是可以不需要转换，通过在浏览器内引入 AMD 实现（最具有代表性的实现 ","loc":{"start":{"line":7,"column":72},"end":{"line":7,"column":119}},"range":[125,172],"raw":"的，AMD 模块化规范是可以不需要转换，通过在浏览器内引入 AMD 实现（最具有代表性的实现 "},{"type":"Link","title":null,"url":"https://requirejs.org/","children":[{"type":"Str","value":"requirejs","loc":{"start":{"line":7,"column":120},"end":{"line":7,"column":129}},"range":[173,182],"raw":"requirejs"}],"loc":{"start":{"line":7,"column":119},"end":{"line":7,"column":154}},"range":[172,207],"raw":"[requirejs](https://requirejs.org/)"},{"type":"Str","value":"）的方式，在浏览器内直接运行的。","loc":{"start":{"line":7,"column":154},"end":{"line":7,"column":170}},"range":[207,223],"raw":"）的方式，在浏览器内直接运行的。"}],"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":170}},"range":[53,223],"raw":"AMD 也是一种社区开发者实现的 JavaScript 模块化规范，与 CommonJS 不同的是，AMD的导入 require 是**异步**的，AMD 模块化规范是可以不需要转换，通过在浏览器内引入 AMD 实现（最具有代表性的实现 [requirejs](https://requirejs.org/)）的方式，在浏览器内直接运行的。"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"实现原理","loc":{"start":{"line":9,"column":3},"end":{"line":9,"column":7}},"range":[228,232],"raw":"实现原理"}],"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":7}},"range":[225,232],"raw":"## 实现原理"},{"type":"Paragraph","children":[{"type":"Str","value":"在浏览器内通过 ","loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":8}},"range":[234,242],"raw":"在浏览器内通过 "},{"type":"Html","value":"<script>","loc":{"start":{"line":11,"column":8},"end":{"line":11,"column":16}},"range":[242,250],"raw":"<script>"},{"type":"Str","value":" 标签引入了 AMD 规范的实现之后，会在浏览器全局注册两个函数:","loc":{"start":{"line":11,"column":16},"end":{"line":11,"column":49}},"range":[250,283],"raw":" 标签引入了 AMD 规范的实现之后，会在浏览器全局注册两个函数:"}],"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":49}},"range":[234,283],"raw":"在浏览器内通过 <script> 标签引入了 AMD 规范的实现之后，会在浏览器全局注册两个函数:"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"define 函数：用于声明模块，接受3个参数，模块的名称、模块依赖的其他模块名称数组以及生成模块的函数","loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":54}},"range":[287,339],"raw":"define 函数：用于声明模块，接受3个参数，模块的名称、模块依赖的其他模块名称数组以及生成模块的函数"}],"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":54}},"range":[287,339],"raw":"define 函数：用于声明模块，接受3个参数，模块的名称、模块依赖的其他模块名称数组以及生成模块的函数"}],"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":54}},"range":[285,339],"raw":"- define 函数：用于声明模块，接受3个参数，模块的名称、模块依赖的其他模块名称数组以及生成模块的函数"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"require 函数：用于通过模块的名称导入对应的模块","loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":29}},"range":[342,369],"raw":"require 函数：用于通过模块的名称导入对应的模块"}],"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":29}},"range":[342,369],"raw":"require 函数：用于通过模块的名称导入对应的模块"}],"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":29}},"range":[340,369],"raw":"- require 函数：用于通过模块的名称导入对应的模块"}],"loc":{"start":{"line":13,"column":0},"end":{"line":14,"column":29}},"range":[285,369],"raw":"- define 函数：用于声明模块，接受3个参数，模块的名称、模块依赖的其他模块名称数组以及生成模块的函数\n- require 函数：用于通过模块的名称导入对应的模块"},{"type":"CodeBlock","lang":"jsx","meta":null,"value":"// 定义一个模块\ndefine('module', ['dep'], function(dep) {\n  return exports;\n});\n\n// 导入和使用\nrequire(['module'], function(module) {\n});","loc":{"start":{"line":16,"column":0},"end":{"line":25,"column":3}},"range":[371,508],"raw":"```jsx\n// 定义一个模块\ndefine('module', ['dep'], function(dep) {\n  return exports;\n});\n\n// 导入和使用\nrequire(['module'], function(module) {\n});\n```"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"优点","loc":{"start":{"line":27,"column":3},"end":{"line":27,"column":5}},"range":[513,515],"raw":"优点"}],"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":5}},"range":[510,515],"raw":"## 优点"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"可在不转换代码的情况下直接在浏览器中运行；","loc":{"start":{"line":29,"column":2},"end":{"line":29,"column":23}},"range":[519,540],"raw":"可在不转换代码的情况下直接在浏览器中运行；"}],"loc":{"start":{"line":29,"column":2},"end":{"line":29,"column":23}},"range":[519,540],"raw":"可在不转换代码的情况下直接在浏览器中运行；"}],"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":23}},"range":[517,540],"raw":"- 可在不转换代码的情况下直接在浏览器中运行；"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"可异步加载依赖；","loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":10}},"range":[543,551],"raw":"可异步加载依赖；"}],"loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":10}},"range":[543,551],"raw":"可异步加载依赖；"}],"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":10}},"range":[541,551],"raw":"- 可异步加载依赖；"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"可并行加载多个依赖；","loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":12}},"range":[554,564],"raw":"可并行加载多个依赖；"}],"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":12}},"range":[554,564],"raw":"可并行加载多个依赖；"}],"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":12}},"range":[552,564],"raw":"- 可并行加载多个依赖；"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"代码可运行在浏览器环境和 Node.js 环境下。","loc":{"start":{"line":32,"column":2},"end":{"line":32,"column":27}},"range":[567,592],"raw":"代码可运行在浏览器环境和 Node.js 环境下。"}],"loc":{"start":{"line":32,"column":2},"end":{"line":32,"column":27}},"range":[567,592],"raw":"代码可运行在浏览器环境和 Node.js 环境下。"}],"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":27}},"range":[565,592],"raw":"- 代码可运行在浏览器环境和 Node.js 环境下。"}],"loc":{"start":{"line":29,"column":0},"end":{"line":32,"column":27}},"range":[517,592],"raw":"- 可在不转换代码的情况下直接在浏览器中运行；\n- 可异步加载依赖；\n- 可并行加载多个依赖；\n- 代码可运行在浏览器环境和 Node.js 环境下。"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"缺点","loc":{"start":{"line":34,"column":3},"end":{"line":34,"column":5}},"range":[597,599],"raw":"缺点"}],"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":5}},"range":[594,599],"raw":"## 缺点"},{"type":"Paragraph","children":[{"type":"Str","value":"不管是在浏览器环境还是 NodeJS 环境，JavaScript 原生都是不支持 AMD 模块化规范的，需要引入对应的库之后才能使用。","loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":67}},"range":[601,668],"raw":"不管是在浏览器环境还是 NodeJS 环境，JavaScript 原生都是不支持 AMD 模块化规范的，需要引入对应的库之后才能使用。"}],"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":67}},"range":[601,668],"raw":"不管是在浏览器环境还是 NodeJS 环境，JavaScript 原生都是不支持 AMD 模块化规范的，需要引入对应的库之后才能使用。"},{"type":"Paragraph","children":[{"type":"Str","value":"并且 AMD 模块化的实现库，必须要在模块声明之前就加载完成。","loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":31}},"range":[670,701],"raw":"并且 AMD 模块化的实现库，必须要在模块声明之前就加载完成。"}],"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":31}},"range":[670,701],"raw":"并且 AMD 模块化的实现库，必须要在模块声明之前就加载完成。"},{"type":"Paragraph","children":[{"type":"Str","value":"浏览器原生是不支持 AMD 的，需要导入实现了 AMD 模块化规范的库（例如 ","loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":39}},"range":[703,742],"raw":"浏览器原生是不支持 AMD 的，需要导入实现了 AMD 模块化规范的库（例如 "},{"type":"Link","title":null,"url":"https://requirejs.org/","children":[{"type":"Str","value":"requirejs","loc":{"start":{"line":40,"column":40},"end":{"line":40,"column":49}},"range":[743,752],"raw":"requirejs"}],"loc":{"start":{"line":40,"column":39},"end":{"line":40,"column":74}},"range":[742,777],"raw":"[requirejs](https://requirejs.org/)"},{"type":"Str","value":"），才可以使用。","loc":{"start":{"line":40,"column":74},"end":{"line":40,"column":82}},"range":[777,785],"raw":"），才可以使用。"}],"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":82}},"range":[703,785],"raw":"浏览器原生是不支持 AMD 的，需要导入实现了 AMD 模块化规范的库（例如 [requirejs](https://requirejs.org/)），才可以使用。"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"实现原理","loc":{"start":{"line":42,"column":3},"end":{"line":42,"column":7}},"range":[790,794],"raw":"实现原理"}],"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":7}},"range":[787,794],"raw":"## 实现原理"},{"type":"Paragraph","children":[{"type":"Str","value":"导入了 AMD 模块化规范的实现后，会在浏览器的上下文内挂载两个函数，一个 define 函数用于声明模块，一个 require 函数用于导入模块。","loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":74}},"range":[796,870],"raw":"导入了 AMD 模块化规范的实现后，会在浏览器的上下文内挂载两个函数，一个 define 函数用于声明模块，一个 require 函数用于导入模块。"}],"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":74}},"range":[796,870],"raw":"导入了 AMD 模块化规范的实现后，会在浏览器的上下文内挂载两个函数，一个 define 函数用于声明模块，一个 require 函数用于导入模块。"},{"type":"CodeBlock","lang":"jsx","meta":null,"value":"// 定义一个模块\ndefine('module', ['dep'], function(dep) {\n  return exports;\n});\n\n// 导入和使用\nrequire(['module'], function(module) {\n});","loc":{"start":{"line":46,"column":0},"end":{"line":55,"column":3}},"range":[872,1009],"raw":"```jsx\n// 定义一个模块\ndefine('module', ['dep'], function(dep) {\n  return exports;\n});\n\n// 导入和使用\nrequire(['module'], function(module) {\n});\n```"},{"type":"Paragraph","children":[{"type":"Str","value":"AMD 也是一种社区开发者实现的 JavaScript 模块化规范，同样采用一个 require 函数来导入模块，但是 AMD 内的 require 函数是异步执行的。","loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":84}},"range":[1011,1095],"raw":"AMD 也是一种社区开发者实现的 JavaScript 模块化规范，同样采用一个 require 函数来导入模块，但是 AMD 内的 require 函数是异步执行的。"}],"loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":84}},"range":[1011,1095],"raw":"AMD 也是一种社区开发者实现的 JavaScript 模块化规范，同样采用一个 require 函数来导入模块，但是 AMD 内的 require 函数是异步执行的。"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"优点","loc":{"start":{"line":59,"column":3},"end":{"line":59,"column":5}},"range":[1100,1102],"raw":"优点"}],"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":5}},"range":[1097,1102],"raw":"## 优点"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"可在不转换代码的情况下直接在浏览器中运行（但是一定要保证 AMD 实现库加载后，其他的脚本再执行）；","loc":{"start":{"line":61,"column":2},"end":{"line":61,"column":52}},"range":[1106,1156],"raw":"可在不转换代码的情况下直接在浏览器中运行（但是一定要保证 AMD 实现库加载后，其他的脚本再执行）；"}],"loc":{"start":{"line":61,"column":2},"end":{"line":61,"column":52}},"range":[1106,1156],"raw":"可在不转换代码的情况下直接在浏览器中运行（但是一定要保证 AMD 实现库加载后，其他的脚本再执行）；"}],"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":52}},"range":[1104,1156],"raw":"- 可在不转换代码的情况下直接在浏览器中运行（但是一定要保证 AMD 实现库加载后，其他的脚本再执行）；"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"可异步加载依赖；","loc":{"start":{"line":62,"column":2},"end":{"line":62,"column":10}},"range":[1159,1167],"raw":"可异步加载依赖；"}],"loc":{"start":{"line":62,"column":2},"end":{"line":62,"column":10}},"range":[1159,1167],"raw":"可异步加载依赖；"}],"loc":{"start":{"line":62,"column":0},"end":{"line":62,"column":10}},"range":[1157,1167],"raw":"- 可异步加载依赖；"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"可并行加载多个依赖；","loc":{"start":{"line":63,"column":2},"end":{"line":63,"column":12}},"range":[1170,1180],"raw":"可并行加载多个依赖；"}],"loc":{"start":{"line":63,"column":2},"end":{"line":63,"column":12}},"range":[1170,1180],"raw":"可并行加载多个依赖；"}],"loc":{"start":{"line":63,"column":0},"end":{"line":63,"column":12}},"range":[1168,1180],"raw":"- 可并行加载多个依赖；"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"代码可运行在浏览器环境和 Node.js 环境下。","loc":{"start":{"line":64,"column":2},"end":{"line":64,"column":27}},"range":[1183,1208],"raw":"代码可运行在浏览器环境和 Node.js 环境下。"}],"loc":{"start":{"line":64,"column":2},"end":{"line":64,"column":27}},"range":[1183,1208],"raw":"代码可运行在浏览器环境和 Node.js 环境下。"}],"loc":{"start":{"line":64,"column":0},"end":{"line":64,"column":27}},"range":[1181,1208],"raw":"- 代码可运行在浏览器环境和 Node.js 环境下。"}],"loc":{"start":{"line":61,"column":0},"end":{"line":64,"column":27}},"range":[1104,1208],"raw":"- 可在不转换代码的情况下直接在浏览器中运行（但是一定要保证 AMD 实现库加载后，其他的脚本再执行）；\n- 可异步加载依赖；\n- 可并行加载多个依赖；\n- 代码可运行在浏览器环境和 Node.js 环境下。"}],"loc":{"start":{"line":1,"column":0},"end":{"line":64,"column":27}},"range":[0,1208],"raw":"# AMD(define/require)\n\nTags: define, require\n\n## 概述\n\nAMD 也是一种社区开发者实现的 JavaScript 模块化规范，与 CommonJS 不同的是，AMD的导入 require 是**异步**的，AMD 模块化规范是可以不需要转换，通过在浏览器内引入 AMD 实现（最具有代表性的实现 [requirejs](https://requirejs.org/)）的方式，在浏览器内直接运行的。\n\n## 实现原理\n\n在浏览器内通过 <script> 标签引入了 AMD 规范的实现之后，会在浏览器全局注册两个函数:\n\n- define 函数：用于声明模块，接受3个参数，模块的名称、模块依赖的其他模块名称数组以及生成模块的函数\n- require 函数：用于通过模块的名称导入对应的模块\n\n```jsx\n// 定义一个模块\ndefine('module', ['dep'], function(dep) {\n  return exports;\n});\n\n// 导入和使用\nrequire(['module'], function(module) {\n});\n```\n\n## 优点\n\n- 可在不转换代码的情况下直接在浏览器中运行；\n- 可异步加载依赖；\n- 可并行加载多个依赖；\n- 代码可运行在浏览器环境和 Node.js 环境下。\n\n## 缺点\n\n不管是在浏览器环境还是 NodeJS 环境，JavaScript 原生都是不支持 AMD 模块化规范的，需要引入对应的库之后才能使用。\n\n并且 AMD 模块化的实现库，必须要在模块声明之前就加载完成。\n\n浏览器原生是不支持 AMD 的，需要导入实现了 AMD 模块化规范的库（例如 [requirejs](https://requirejs.org/)），才可以使用。\n\n## 实现原理\n\n导入了 AMD 模块化规范的实现后，会在浏览器的上下文内挂载两个函数，一个 define 函数用于声明模块，一个 require 函数用于导入模块。\n\n```jsx\n// 定义一个模块\ndefine('module', ['dep'], function(dep) {\n  return exports;\n});\n\n// 导入和使用\nrequire(['module'], function(module) {\n});\n```\n\nAMD 也是一种社区开发者实现的 JavaScript 模块化规范，同样采用一个 require 函数来导入模块，但是 AMD 内的 require 函数是异步执行的。\n\n## 优点\n\n- 可在不转换代码的情况下直接在浏览器中运行（但是一定要保证 AMD 实现库加载后，其他的脚本再执行）；\n- 可异步加载依赖；\n- 可并行加载多个依赖；\n- 代码可运行在浏览器环境和 Node.js 环境下。"},"catalogue":{"title":"AMD(define require) d43cef","json-path":"前端开发/前端工程化/JS模块化/模块化规范 819d6c57d4154f94bdf0781db857fdb7/模块化规范 0976128fbb0648a791aca022b8a2f01b/AMD(define require) d43cef4ccdd6439ea88ef4dbf8e775f8.json","cover":"https://i.328888.xyz/2022/12/31/ndNlC.jpeg","icon":"🌏","tags":["无标签"],"visible":false}}