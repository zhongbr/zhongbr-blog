{"ast":{"type":"Document","children":[{"type":"Yaml","value":"tags: ['数据结构','树','森林']","loc":{"start":{"line":1,"column":0},"end":{"line":3,"column":3}},"range":[0,31],"raw":"---\ntags: ['数据结构','树','森林']\n---"},{"type":"Header","depth":1,"children":[{"type":"Str","value":"树、森林与二叉树的转换","loc":{"start":{"line":5,"column":2},"end":{"line":5,"column":13}},"range":[35,46],"raw":"树、森林与二叉树的转换"}],"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":13}},"range":[33,46],"raw":"# 树、森林与二叉树的转换"},{"type":"Paragraph","children":[{"type":"Str","value":"树和二叉树均可以使用二叉链表的存储结构来存储，以二叉链表为媒介可以将树和唯一的二叉树对应。","loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":45}},"range":[48,93],"raw":"树和二叉树均可以使用二叉链表的存储结构来存储，以二叉链表为媒介可以将树和唯一的二叉树对应。"}],"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":45}},"range":[48,93],"raw":"树和二叉树均可以使用二叉链表的存储结构来存储，以二叉链表为媒介可以将树和唯一的二叉树对应。"},{"type":"Paragraph","children":[{"type":"Str","value":"从数的二叉链表定义看，任何一棵树对应的二叉树的右子树必空（根结点没有兄弟结点），如果将森林的第二棵树的根结点看作是第一棵树根结点的兄弟结点，第三棵树的根结点视为第二棵树的根结点的兄弟......则可以建立森林和二叉树的对应关系。\n","loc":{"start":{"line":9,"column":0},"end":{"line":10,"column":0}},"range":[95,210],"raw":"从数的二叉链表定义看，任何一棵树对应的二叉树的右子树必空（根结点没有兄弟结点），如果将森林的第二棵树的根结点看作是第一棵树根结点的兄弟结点，第三棵树的根结点视为第二棵树的根结点的兄弟......则可以建立森林和二叉树的对应关系。\n"},{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/28/5M8bXDRhuL3qfcV.png","alt":"??????.png","loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":64}},"range":[210,274],"raw":"![??????.png](https://i.loli.net/2020/07/28/5M8bXDRhuL3qfcV.png)"}],"loc":{"start":{"line":9,"column":0},"end":{"line":10,"column":64}},"range":[95,274],"raw":"从数的二叉链表定义看，任何一棵树对应的二叉树的右子树必空（根结点没有兄弟结点），如果将森林的第二棵树的根结点看作是第一棵树根结点的兄弟结点，第三棵树的根结点视为第二棵树的根结点的兄弟......则可以建立森林和二叉树的对应关系。\n![??????.png](https://i.loli.net/2020/07/28/5M8bXDRhuL3qfcV.png)"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"森林转换为二叉树","loc":{"start":{"line":12,"column":3},"end":{"line":12,"column":11}},"range":[279,287],"raw":"森林转换为二叉树"}],"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":11}},"range":[276,287],"raw":"## 森林转换为二叉树"},{"type":"Paragraph","children":[{"type":"Str","value":"如果$$F = \\left { T_{1}, T_{2}, T_{3} ......, T_{m}\\right }$$是森林，按照下面的步骤将其转换成二叉树$$B=\\left ( root, LB, LR\\right )$$:","loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":115}},"range":[289,404],"raw":"如果$$F = \\left \\{ T_{1}, T_{2}, T_{3} ......, T_{m}\\right \\}$$是森林，按照下面的步骤将其转换成二叉树$$B=\\left ( root, LB, LR\\right )$$:"}],"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":115}},"range":[289,404],"raw":"如果$$F = \\left \\{ T_{1}, T_{2}, T_{3} ......, T_{m}\\right \\}$$是森林，按照下面的步骤将其转换成二叉树$$B=\\left ( root, LB, LR\\right )$$:"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"若F为空，B为空树","loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":11}},"range":[408,417],"raw":"若F为空，B为空树"}],"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":11}},"range":[408,417],"raw":"若F为空，B为空树"}],"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":11}},"range":[406,417],"raw":"- 若F为空，B为空树"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"若F非空，B的root为F中第一棵树的根结点，B的左子树LB是森林中第一棵树的根结点子树组成的森林对应的二叉树，B的右子树是$$F^{'}=\\left { T_{2}, T_{3}......, T_{m}\\right }$$转化成的二叉树。","loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":125}},"range":[420,543],"raw":"若F非空，B的root为F中第一棵树的根结点，B的左子树LB是森林中第一棵树的根结点子树组成的森林对应的二叉树，B的右子树是$$F^{'}=\\left \\{ T_{2}, T_{3}......, T_{m}\\right \\}$$转化成的二叉树。"}],"loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":125}},"range":[420,543],"raw":"若F非空，B的root为F中第一棵树的根结点，B的左子树LB是森林中第一棵树的根结点子树组成的森林对应的二叉树，B的右子树是$$F^{'}=\\left \\{ T_{2}, T_{3}......, T_{m}\\right \\}$$转化成的二叉树。"}],"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":125}},"range":[418,543],"raw":"- 若F非空，B的root为F中第一棵树的根结点，B的左子树LB是森林中第一棵树的根结点子树组成的森林对应的二叉树，B的右子树是$$F^{'}=\\left \\{ T_{2}, T_{3}......, T_{m}\\right \\}$$转化成的二叉树。"}],"loc":{"start":{"line":16,"column":0},"end":{"line":17,"column":125}},"range":[406,543],"raw":"- 若F为空，B为空树\n- 若F非空，B的root为F中第一棵树的根结点，B的左子树LB是森林中第一棵树的根结点子树组成的森林对应的二叉树，B的右子树是$$F^{'}=\\left \\{ T_{2}, T_{3}......, T_{m}\\right \\}$$转化成的二叉树。"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"二叉树转换成森林","loc":{"start":{"line":19,"column":3},"end":{"line":19,"column":11}},"range":[548,556],"raw":"二叉树转换成森林"}],"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":11}},"range":[545,556],"raw":"## 二叉树转换成森林"},{"type":"Paragraph","children":[{"type":"Str","value":"如果$$B=\\left(root, LB, RB\\right)$$是一棵二叉树，按照如下的规则可以将其转换成森林$$F=\\left {T_{1},T_{2},T_{3}......,T_{m}\\right }$$:","loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":109}},"range":[558,667],"raw":"如果$$B=\\left(root, LB, RB\\right)$$是一棵二叉树，按照如下的规则可以将其转换成森林$$F=\\left \\{T_{1},T_{2},T_{3}......,T_{m}\\right \\}$$:"}],"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":109}},"range":[558,667],"raw":"如果$$B=\\left(root, LB, RB\\right)$$是一棵二叉树，按照如下的规则可以将其转换成森林$$F=\\left \\{T_{1},T_{2},T_{3}......,T_{m}\\right \\}$$:"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"若B为空，F为空","loc":{"start":{"line":23,"column":2},"end":{"line":23,"column":10}},"range":[671,679],"raw":"若B为空，F为空"}],"loc":{"start":{"line":23,"column":2},"end":{"line":23,"column":10}},"range":[671,679],"raw":"若B为空，F为空"}],"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":10}},"range":[669,679],"raw":"- 若B为空，F为空"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"若B非空，$$T_{1}$$的根结点为B的根结点，$$T_{1}$$的子森林是B的左子树LB对应的森林，B的右子树LB对应的子森林即为F中除了$$T_{1}$$以外剩余的树组成的森林$$F=\\left { T_{2}, T_{3} ......, T_{n}\\right }$$。","loc":{"start":{"line":24,"column":2},"end":{"line":24,"column":144}},"range":[682,824],"raw":"若B非空，$$T_{1}$$的根结点为B的根结点，$$T_{1}$$的子森林是B的左子树LB对应的森林，B的右子树LB对应的子森林即为F中除了$$T_{1}$$以外剩余的树组成的森林$$F=\\left \\{ T_{2}, T_{3} ......, T_{n}\\right \\}$$。"}],"loc":{"start":{"line":24,"column":2},"end":{"line":24,"column":144}},"range":[682,824],"raw":"若B非空，$$T_{1}$$的根结点为B的根结点，$$T_{1}$$的子森林是B的左子树LB对应的森林，B的右子树LB对应的子森林即为F中除了$$T_{1}$$以外剩余的树组成的森林$$F=\\left \\{ T_{2}, T_{3} ......, T_{n}\\right \\}$$。"}],"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":144}},"range":[680,824],"raw":"- 若B非空，$$T_{1}$$的根结点为B的根结点，$$T_{1}$$的子森林是B的左子树LB对应的森林，B的右子树LB对应的子森林即为F中除了$$T_{1}$$以外剩余的树组成的森林$$F=\\left \\{ T_{2}, T_{3} ......, T_{n}\\right \\}$$。"}],"loc":{"start":{"line":23,"column":0},"end":{"line":24,"column":144}},"range":[669,824],"raw":"- 若B为空，F为空\n- 若B非空，$$T_{1}$$的根结点为B的根结点，$$T_{1}$$的子森林是B的左子树LB对应的森林，B的右子树LB对应的子森林即为F中除了$$T_{1}$$以外剩余的树组成的森林$$F=\\left \\{ T_{2}, T_{3} ......, T_{n}\\right \\}$$。"},{"type":"Paragraph","children":[{"type":"Str","value":"通过递归，可以很方便地实现森林和二叉树的转换，由此可见森林和树的操作均可以转换成对二叉树的操作进行。","loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":50}},"range":[826,876],"raw":"通过递归，可以很方便地实现森林和二叉树的转换，由此可见森林和树的操作均可以转换成对二叉树的操作进行。"}],"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":50}},"range":[826,876],"raw":"通过递归，可以很方便地实现森林和二叉树的转换，由此可见森林和树的操作均可以转换成对二叉树的操作进行。"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"树和森林的遍历","loc":{"start":{"line":28,"column":4},"end":{"line":28,"column":11}},"range":[882,889],"raw":"树和森林的遍历"}],"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":11}},"range":[878,889],"raw":"### 树和森林的遍历"},{"type":"Paragraph","children":[{"type":"Str","value":"树的遍历方式有如下两种：","loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":12}},"range":[891,903],"raw":"树的遍历方式有如下两种："}],"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":12}},"range":[891,903],"raw":"树的遍历方式有如下两种："},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"先根次序遍历：先访问树的根结点，然后依次访问根的每一棵子树","loc":{"start":{"line":32,"column":2},"end":{"line":32,"column":31}},"range":[907,936],"raw":"先根次序遍历：先访问树的根结点，然后依次访问根的每一棵子树"}],"loc":{"start":{"line":32,"column":2},"end":{"line":32,"column":31}},"range":[907,936],"raw":"先根次序遍历：先访问树的根结点，然后依次访问根的每一棵子树"}],"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":31}},"range":[905,936],"raw":"- 先根次序遍历：先访问树的根结点，然后依次访问根的每一棵子树"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"后根次序遍历：先访问根的每一棵子树，然后再访问根结点","loc":{"start":{"line":33,"column":2},"end":{"line":33,"column":28}},"range":[939,965],"raw":"后根次序遍历：先访问根的每一棵子树，然后再访问根结点"}],"loc":{"start":{"line":33,"column":2},"end":{"line":33,"column":28}},"range":[939,965],"raw":"后根次序遍历：先访问根的每一棵子树，然后再访问根结点"}],"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":28}},"range":[937,965],"raw":"- 后根次序遍历：先访问根的每一棵子树，然后再访问根结点"}],"loc":{"start":{"line":32,"column":0},"end":{"line":33,"column":28}},"range":[905,965],"raw":"- 先根次序遍历：先访问树的根结点，然后依次访问根的每一棵子树\n- 后根次序遍历：先访问根的每一棵子树，然后再访问根结点"},{"type":"Paragraph","children":[{"type":"Str","value":"按照树和森林的相互递归定义，可以知道对森林的遍历有两种方式：","loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":30}},"range":[967,997],"raw":"按照树和森林的相互递归定义，可以知道对森林的遍历有两种方式："}],"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":30}},"range":[967,997],"raw":"按照树和森林的相互递归定义，可以知道对森林的遍历有两种方式："},{"type":"List","ordered":false,"start":null,"spread":true,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"先序遍历森林：","loc":{"start":{"line":37,"column":2},"end":{"line":37,"column":9}},"range":[1001,1008],"raw":"先序遍历森林："}],"loc":{"start":{"line":37,"column":2},"end":{"line":37,"column":9}},"range":[1001,1008],"raw":"先序遍历森林："},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"访问森林每一棵子树的根结点；","loc":{"start":{"line":38,"column":4},"end":{"line":38,"column":18}},"range":[1013,1027],"raw":"访问森林每一棵子树的根结点；"}],"loc":{"start":{"line":38,"column":4},"end":{"line":38,"column":18}},"range":[1013,1027],"raw":"访问森林每一棵子树的根结点；"}],"loc":{"start":{"line":38,"column":2},"end":{"line":38,"column":18}},"range":[1011,1027],"raw":"- 访问森林每一棵子树的根结点；"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"先序遍历第一棵子树中根结点的子森林；","loc":{"start":{"line":39,"column":4},"end":{"line":39,"column":22}},"range":[1032,1050],"raw":"先序遍历第一棵子树中根结点的子森林；"}],"loc":{"start":{"line":39,"column":4},"end":{"line":39,"column":22}},"range":[1032,1050],"raw":"先序遍历第一棵子树中根结点的子森林；"}],"loc":{"start":{"line":39,"column":2},"end":{"line":39,"column":22}},"range":[1030,1050],"raw":"- 先序遍历第一棵子树中根结点的子森林；"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"先序遍历除第一棵树以外，其余树组成的子森林。","loc":{"start":{"line":40,"column":4},"end":{"line":40,"column":26}},"range":[1055,1077],"raw":"先序遍历除第一棵树以外，其余树组成的子森林。"}],"loc":{"start":{"line":40,"column":4},"end":{"line":40,"column":26}},"range":[1055,1077],"raw":"先序遍历除第一棵树以外，其余树组成的子森林。"}],"loc":{"start":{"line":40,"column":2},"end":{"line":40,"column":26}},"range":[1053,1077],"raw":"- 先序遍历除第一棵树以外，其余树组成的子森林。"}],"loc":{"start":{"line":38,"column":2},"end":{"line":40,"column":26}},"range":[1011,1077],"raw":"- 访问森林每一棵子树的根结点；\n  - 先序遍历第一棵子树中根结点的子森林；\n  - 先序遍历除第一棵树以外，其余树组成的子森林。"}],"loc":{"start":{"line":37,"column":0},"end":{"line":40,"column":26}},"range":[999,1077],"raw":"- 先序遍历森林：\n  - 访问森林每一棵子树的根结点；\n  - 先序遍历第一棵子树中根结点的子森林；\n  - 先序遍历除第一棵树以外，其余树组成的子森林。"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"中序遍历森林：","loc":{"start":{"line":42,"column":2},"end":{"line":42,"column":9}},"range":[1081,1088],"raw":"中序遍历森林："}],"loc":{"start":{"line":42,"column":2},"end":{"line":42,"column":9}},"range":[1081,1088],"raw":"中序遍历森林："},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"中序遍历森林中第一棵子树的根结点的子森林；","loc":{"start":{"line":43,"column":4},"end":{"line":43,"column":25}},"range":[1093,1114],"raw":"中序遍历森林中第一棵子树的根结点的子森林；"}],"loc":{"start":{"line":43,"column":4},"end":{"line":43,"column":25}},"range":[1093,1114],"raw":"中序遍历森林中第一棵子树的根结点的子森林；"}],"loc":{"start":{"line":43,"column":2},"end":{"line":43,"column":25}},"range":[1091,1114],"raw":"- 中序遍历森林中第一棵子树的根结点的子森林；"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"访问第一棵子树的根结点；","loc":{"start":{"line":44,"column":4},"end":{"line":44,"column":16}},"range":[1119,1131],"raw":"访问第一棵子树的根结点；"}],"loc":{"start":{"line":44,"column":4},"end":{"line":44,"column":16}},"range":[1119,1131],"raw":"访问第一棵子树的根结点；"}],"loc":{"start":{"line":44,"column":2},"end":{"line":44,"column":16}},"range":[1117,1131],"raw":"- 访问第一棵子树的根结点；"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"中序遍历除第一棵树以外，其余树组成的子森林。","loc":{"start":{"line":45,"column":4},"end":{"line":45,"column":26}},"range":[1136,1158],"raw":"中序遍历除第一棵树以外，其余树组成的子森林。"}],"loc":{"start":{"line":45,"column":4},"end":{"line":45,"column":26}},"range":[1136,1158],"raw":"中序遍历除第一棵树以外，其余树组成的子森林。"}],"loc":{"start":{"line":45,"column":2},"end":{"line":45,"column":26}},"range":[1134,1158],"raw":"- 中序遍历除第一棵树以外，其余树组成的子森林。"}],"loc":{"start":{"line":43,"column":2},"end":{"line":45,"column":26}},"range":[1091,1158],"raw":"- 中序遍历森林中第一棵子树的根结点的子森林；\n  - 访问第一棵子树的根结点；\n  - 中序遍历除第一棵树以外，其余树组成的子森林。"}],"loc":{"start":{"line":42,"column":0},"end":{"line":45,"column":26}},"range":[1079,1158],"raw":"- 中序遍历森林：\n  - 中序遍历森林中第一棵子树的根结点的子森林；\n  - 访问第一棵子树的根结点；\n  - 中序遍历除第一棵树以外，其余树组成的子森林。"}],"loc":{"start":{"line":37,"column":0},"end":{"line":45,"column":26}},"range":[999,1158],"raw":"- 先序遍历森林：\n  - 访问森林每一棵子树的根结点；\n  - 先序遍历第一棵子树中根结点的子森林；\n  - 先序遍历除第一棵树以外，其余树组成的子森林。\n\n- 中序遍历森林：\n  - 中序遍历森林中第一棵子树的根结点的子森林；\n  - 访问第一棵子树的根结点；\n  - 中序遍历除第一棵树以外，其余树组成的子森林。"},{"type":"Paragraph","children":[{"type":"Str","value":"当森林递归转换成二叉树时，上述的先序遍历和中序遍历分别对应了对二叉树的先序遍历和中序遍历。","loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":45}},"range":[1160,1205],"raw":"当森林递归转换成二叉树时，上述的先序遍历和中序遍历分别对应了对二叉树的先序遍历和中序遍历。"}],"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":45}},"range":[1160,1205],"raw":"当森林递归转换成二叉树时，上述的先序遍历和中序遍历分别对应了对二叉树的先序遍历和中序遍历。"}],"loc":{"start":{"line":1,"column":0},"end":{"line":48,"column":0}},"range":[0,1206],"raw":"---\ntags: ['数据结构','树','森林']\n---\n\n# 树、森林与二叉树的转换\n\n树和二叉树均可以使用二叉链表的存储结构来存储，以二叉链表为媒介可以将树和唯一的二叉树对应。\n\n从数的二叉链表定义看，任何一棵树对应的二叉树的右子树必空（根结点没有兄弟结点），如果将森林的第二棵树的根结点看作是第一棵树根结点的兄弟结点，第三棵树的根结点视为第二棵树的根结点的兄弟......则可以建立森林和二叉树的对应关系。\n![??????.png](https://i.loli.net/2020/07/28/5M8bXDRhuL3qfcV.png)\n\n## 森林转换为二叉树\n\n如果$$F = \\left \\{ T_{1}, T_{2}, T_{3} ......, T_{m}\\right \\}$$是森林，按照下面的步骤将其转换成二叉树$$B=\\left ( root, LB, LR\\right )$$:\n\n- 若F为空，B为空树\n- 若F非空，B的root为F中第一棵树的根结点，B的左子树LB是森林中第一棵树的根结点子树组成的森林对应的二叉树，B的右子树是$$F^{'}=\\left \\{ T_{2}, T_{3}......, T_{m}\\right \\}$$转化成的二叉树。\n\n## 二叉树转换成森林\n\n如果$$B=\\left(root, LB, RB\\right)$$是一棵二叉树，按照如下的规则可以将其转换成森林$$F=\\left \\{T_{1},T_{2},T_{3}......,T_{m}\\right \\}$$:\n\n- 若B为空，F为空\n- 若B非空，$$T_{1}$$的根结点为B的根结点，$$T_{1}$$的子森林是B的左子树LB对应的森林，B的右子树LB对应的子森林即为F中除了$$T_{1}$$以外剩余的树组成的森林$$F=\\left \\{ T_{2}, T_{3} ......, T_{n}\\right \\}$$。\n\n通过递归，可以很方便地实现森林和二叉树的转换，由此可见森林和树的操作均可以转换成对二叉树的操作进行。\n\n### 树和森林的遍历\n\n树的遍历方式有如下两种：\n\n- 先根次序遍历：先访问树的根结点，然后依次访问根的每一棵子树\n- 后根次序遍历：先访问根的每一棵子树，然后再访问根结点\n\n按照树和森林的相互递归定义，可以知道对森林的遍历有两种方式：\n\n- 先序遍历森林：\n  - 访问森林每一棵子树的根结点；\n  - 先序遍历第一棵子树中根结点的子森林；\n  - 先序遍历除第一棵树以外，其余树组成的子森林。\n\n- 中序遍历森林：\n  - 中序遍历森林中第一棵子树的根结点的子森林；\n  - 访问第一棵子树的根结点；\n  - 中序遍历除第一棵树以外，其余树组成的子森林。\n\n当森林递归转换成二叉树时，上述的先序遍历和中序遍历分别对应了对二叉树的先序遍历和中序遍历。\n"},"catalogue":{"title":"2020-07-28-树、森林与二叉树的转换","json-path":"2020-07-28-树、森林与二叉树的转换.json","mdate":"2022-08-30T14:19:31.448Z","tags":["数据结构","树","森林"]}}