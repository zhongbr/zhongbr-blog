{"ast":{"type":"Document","children":[{"type":"Yaml","value":"title: 'B树和B+树'\ntags: ['数据结构','B树','B+树']","loc":{"start":{"line":1,"column":0},"end":{"line":4,"column":3}},"range":[0,49],"raw":"﻿---\ntitle: 'B树和B+树'\ntags: ['数据结构','B树','B+树']\n--","visible":false},{"type":"Header","depth":2,"children":[{"type":"Str","value":"B树","loc":{"start":{"line":5,"column":3},"end":{"line":5,"column":5}},"range":[53,55],"raw":" B"}],"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":5}},"range":[50,55],"raw":"\n## B"},{"type":"Paragraph","children":[{"type":"Str","value":"又称多路平衡查找树，B树中所有结点的","loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":18}},"range":[57,75],"raw":"\n又称多路平衡查找树，B树中所有结点"},{"type":"Strong","children":[{"type":"Str","value":"孩子结点数","loc":{"start":{"line":7,"column":20},"end":{"line":7,"column":25}},"range":[77,82],"raw":"*孩子结点"}],"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":27}},"range":[75,84],"raw":"的**孩子结点数*"},{"type":"Str","value":"的最大值称为B树的阶。","loc":{"start":{"line":7,"column":27},"end":{"line":7,"column":38}},"range":[84,95],"raw":"*的最大值称为B树的阶"}],"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"range":[57,95],"raw":"\n又称多路平衡查找树，B树中所有结点的**孩子结点数**的最大值称为B树的阶"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"B树的特征","loc":{"start":{"line":9,"column":4},"end":{"line":9,"column":9}},"range":[101,106],"raw":" B树的特"}],"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":9}},"range":[97,106],"raw":"\n### B树的特"},{"type":"Paragraph","children":[{"type":"Str","value":"一棵m阶B树或为空树，或满足如下的条件的m叉树：","loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":24}},"range":[108,132],"raw":"\n一棵m阶B树或为空树，或满足如下的条件的m叉树"}],"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":24}},"range":[108,132],"raw":"\n一棵m阶B树或为空树，或满足如下的条件的m叉树"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"树中每个结点至多有m棵子树（至多含有m-1个关键字）","loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":28}},"range":[136,162],"raw":" 树中每个结点至多有m棵子树（至多含有m-1个关键字"}],"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":28}},"range":[136,162],"raw":" 树中每个结点至多有m棵子树（至多含有m-1个关键字"}],"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}},"range":[134,162],"raw":"\n- 树中每个结点至多有m棵子树（至多含有m-1个关键字"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"若根结点不是终端节点，则至少有两棵子树","loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":21}},"range":[165,184],"raw":" 若根结点不是终端节点，则至少有两棵子"}],"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":21}},"range":[165,184],"raw":" 若根结点不是终端节点，则至少有两棵子"}],"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":21}},"range":[163,184],"raw":"\n- 若根结点不是终端节点，则至少有两棵子"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"除根结点外的所有非叶节点至少有 ","loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":18}},"range":[187,203],"raw":" 除根结点外的所有非叶节点至少有"},{"type":"InlineMath","value":"\\lceil\\frac{m}{2}\\rceil","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"\\lceil\\frac{m}{2}\\rceil"}]},"loc":{"start":{"line":15,"column":18},"end":{"line":15,"column":43}},"range":[203,228],"raw":" $\\lceil\\frac{m}{2}\\rceil"},{"type":"Str","value":" 棵子树（即 ","loc":{"start":{"line":15,"column":43},"end":{"line":15,"column":50}},"range":[228,235],"raw":"$ 棵子树（即"},{"type":"InlineMath","value":"\\lceil\\frac{m}{2}\\rceil-1","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"\\lceil\\frac{m}{2}\\rceil-1"}]},"loc":{"start":{"line":15,"column":50},"end":{"line":15,"column":77}},"range":[235,262],"raw":" $\\lceil\\frac{m}{2}\\rceil-1"},{"type":"Str","value":" 个关键字）","loc":{"start":{"line":15,"column":77},"end":{"line":15,"column":83}},"range":[262,268],"raw":"$ 个关键字"}],"loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":83}},"range":[187,268],"raw":" 除根结点外的所有非叶节点至少有 $\\lceil\\frac{m}{2}\\rceil$ 棵子树（即 $\\lceil\\frac{m}{2}\\rceil-1$ 个关键字"}],"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":83}},"range":[185,268],"raw":"\n- 除根结点外的所有非叶节点至少有 $\\lceil\\frac{m}{2}\\rceil$ 棵子树（即 $\\lceil\\frac{m}{2}\\rceil-1$ 个关键字"},{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"非叶节点的结构：","loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":10}},"range":[271,279],"raw":" 非叶节点的结构"}],"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":10}},"range":[271,279],"raw":" 非叶节点的结构"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/08/05/dKoNO94ETnPbMRv.png","alt":"quicker_f986338d-c707-4935-8160-23c73da328ee.png","loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":104}},"range":[283,385],"raw":" ![quicker_f986338d-c707-4935-8160-23c73da328ee.png](https://i.loli.net/2020/08/05/dKoNO94ETnPbMRv.png"}],"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":104}},"range":[283,385],"raw":" ![quicker_f986338d-c707-4935-8160-23c73da328ee.png](https://i.loli.net/2020/08/05/dKoNO94ETnPbMRv.png"},{"type":"Paragraph","children":[{"type":"InlineMath","value":"K_{i}\\;(i=1,2,...,n)","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"K_{i}\\;(i=1,2,...,n)"}]},"loc":{"start":{"line":20,"column":3},"end":{"line":20,"column":25}},"range":[390,412],"raw":" $K_{i}\\;(i=1,2,...,n)"},{"type":"Str","value":" 为结点的关键字， ","loc":{"start":{"line":20,"column":25},"end":{"line":20,"column":35}},"range":[412,422],"raw":"$ 为结点的关键字，"},{"type":"InlineMath","value":"K1<K2<...<Kn","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"K1<K2<...<Kn"}]},"loc":{"start":{"line":20,"column":35},"end":{"line":20,"column":49}},"range":[422,436],"raw":" $K1<K2<...<Kn"},{"type":"Str","value":" ，\n","loc":{"start":{"line":20,"column":49},"end":{"line":21,"column":0}},"range":[436,439],"raw":"$ ，"},{"type":"InlineMath","value":"P_{i}(i=0,1,...,n)","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"P_{i}(i=0,1,...,n)"}]},"loc":{"start":{"line":21,"column":3},"end":{"line":21,"column":23}},"range":[442,462],"raw":" $P_{i}(i=0,1,...,n)"},{"type":"Str","value":" 为指向子树根节点的指针， ","loc":{"start":{"line":21,"column":23},"end":{"line":21,"column":37}},"range":[462,476],"raw":"$ 为指向子树根节点的指针，"},{"type":"InlineMath","value":"P_{i}-1","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"P_{i}-1"}]},"loc":{"start":{"line":21,"column":37},"end":{"line":21,"column":46}},"range":[476,485],"raw":" $P_{i}-1"},{"type":"Str","value":" 所指子树的关键字均小于 ","loc":{"start":{"line":21,"column":46},"end":{"line":21,"column":59}},"range":[485,498],"raw":"$ 所指子树的关键字均小于"},{"type":"InlineMath","value":"K_{i}","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"K_{i}"}]},"loc":{"start":{"line":21,"column":59},"end":{"line":21,"column":66}},"range":[498,505],"raw":" $K_{i}"},{"type":"Str","value":" ， ","loc":{"start":{"line":21,"column":66},"end":{"line":21,"column":69}},"range":[505,508],"raw":"$ ，"},{"type":"InlineMath","value":"P_{i}","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"P_{i}"}]},"loc":{"start":{"line":21,"column":69},"end":{"line":21,"column":76}},"range":[508,515],"raw":" $P_{i}"},{"type":"Str","value":" 所指子树的关键字均大于 ","loc":{"start":{"line":21,"column":76},"end":{"line":21,"column":89}},"range":[515,528],"raw":"$ 所指子树的关键字均大于"},{"type":"InlineMath","value":"K_{i}","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"K_{i}"}]},"loc":{"start":{"line":21,"column":89},"end":{"line":21,"column":96}},"range":[528,535],"raw":" $K_{i}"},{"type":"Str","value":" 。","loc":{"start":{"line":21,"column":96},"end":{"line":21,"column":98}},"range":[535,537],"raw":"$ "}],"loc":{"start":{"line":20,"column":3},"end":{"line":21,"column":98}},"range":[390,537],"raw":" $K_{i}\\;(i=1,2,...,n)$ 为结点的关键字， $K1<K2<...<Kn$ ，\n   $P_{i}(i=0,1,...,n)$ 为指向子树根节点的指针， $P_{i}-1$ 所指子树的关键字均小于 $K_{i}$ ， $P_{i}$ 所指子树的关键字均大于 $K_{i}$ "}],"loc":{"start":{"line":16,"column":0},"end":{"line":21,"column":98}},"range":[269,537],"raw":"\n- 非叶节点的结构：\n\n  ![quicker_f986338d-c707-4935-8160-23c73da328ee.png](https://i.loli.net/2020/08/05/dKoNO94ETnPbMRv.png)\n\n   $K_{i}\\;(i=1,2,...,n)$ 为结点的关键字， $K1<K2<...<Kn$ ，\n   $P_{i}(i=0,1,...,n)$ 为指向子树根节点的指针， $P_{i}-1$ 所指子树的关键字均小于 $K_{i}$ ， $P_{i}$ 所指子树的关键字均大于 $K_{i}$ "},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"所有的叶节点都出现在同一层次上，不携带任何信息","loc":{"start":{"line":22,"column":2},"end":{"line":22,"column":25}},"range":[540,563],"raw":" 所有的叶节点都出现在同一层次上，不携带任何信"}],"loc":{"start":{"line":22,"column":2},"end":{"line":22,"column":25}},"range":[540,563],"raw":" 所有的叶节点都出现在同一层次上，不携带任何信"}],"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":25}},"range":[538,563],"raw":"\n- 所有的叶节点都出现在同一层次上，不携带任何信"}],"loc":{"start":{"line":13,"column":0},"end":{"line":22,"column":25}},"range":[134,563],"raw":"\n- 树中每个结点至多有m棵子树（至多含有m-1个关键字）\n- 若根结点不是终端节点，则至少有两棵子树\n- 除根结点外的所有非叶节点至少有 $\\lceil\\frac{m}{2}\\rceil$ 棵子树（即 $\\lceil\\frac{m}{2}\\rceil-1$ 个关键字）\n- 非叶节点的结构：\n\n  ![quicker_f986338d-c707-4935-8160-23c73da328ee.png](https://i.loli.net/2020/08/05/dKoNO94ETnPbMRv.png)\n\n   $K_{i}\\;(i=1,2,...,n)$ 为结点的关键字， $K1<K2<...<Kn$ ，\n   $P_{i}(i=0,1,...,n)$ 为指向子树根节点的指针， $P_{i}-1$ 所指子树的关键字均小于 $K_{i}$ ， $P_{i}$ 所指子树的关键字均大于 $K_{i}$ 。\n- 所有的叶节点都出现在同一层次上，不携带任何信"},{"type":"Paragraph","children":[{"type":"Str","value":"n个关键字，阶数为m的b树，其高度h满足：","loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":21}},"range":[565,586],"raw":"\nn个关键字，阶数为m的b树，其高度h满足"}],"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":21}},"range":[565,586],"raw":"\nn个关键字，阶数为m的b树，其高度h满足"},{"type":"Paragraph","children":[{"type":"InlineMath","value":"log_{m}(n+1)\\leq h \\leq \\left (log_{\\lceil \\frac{m}{2} \\rceil}\\frac{n+1}{2}\\right )+1","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"log_{m}(n+1)\\leq h \\leq \\left (log_{\\lceil \\frac{m}{2} \\rceil}\\frac{n+1}{2}\\right )+1"}]},"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":88}},"range":[589,676],"raw":" $log_{m}(n+1)\\leq h \\leq \\left (log_{\\lceil \\frac{m}{2} \\rceil}\\frac{n+1}{2}\\right )+1"}],"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":89}},"range":[589,677],"raw":" $log_{m}(n+1)\\leq h \\leq \\left (log_{\\lceil \\frac{m}{2} \\rceil}\\frac{n+1}{2}\\right )+1$"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"B树的查找操作","loc":{"start":{"line":28,"column":4},"end":{"line":28,"column":11}},"range":[683,690],"raw":" B树的查找操"}],"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":11}},"range":[679,690],"raw":"\n### B树的查找操"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"在B树中查找关键字所在的结点","loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":16}},"range":[694,708],"raw":" 在B树中查找关键字所在的结"}],"loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":16}},"range":[694,708],"raw":" 在B树中查找关键字所在的结"}],"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":16}},"range":[692,708],"raw":"\n- 在B树中查找关键字所在的结"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"在结点中查找关键字","loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":11}},"range":[711,720],"raw":" 在结点中查找关键"}],"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":11}},"range":[711,720],"raw":" 在结点中查找关键"}],"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":11}},"range":[709,720],"raw":"\n- 在结点中查找关键"}],"loc":{"start":{"line":30,"column":0},"end":{"line":31,"column":11}},"range":[692,720],"raw":"\n- 在B树中查找关键字所在的结点\n- 在结点中查找关键"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"B树的插入操作","loc":{"start":{"line":33,"column":4},"end":{"line":33,"column":11}},"range":[726,733],"raw":" B树的插入操"}],"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":11}},"range":[722,733],"raw":"\n### B树的插入操"},{"type":"List","ordered":false,"start":null,"spread":true,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"定位\n查找插入该关键字的位置，最底层中非叶子节点","loc":{"start":{"line":35,"column":2},"end":{"line":36,"column":23}},"range":[737,763],"raw":" 定位\n  查找插入该关键字的位置，最底层中非叶子节"}],"loc":{"start":{"line":35,"column":2},"end":{"line":36,"column":23}},"range":[737,763],"raw":" 定位\n  查找插入该关键字的位置，最底层中非叶子节"}],"loc":{"start":{"line":35,"column":0},"end":{"line":36,"column":23}},"range":[735,763],"raw":"\n- 定位\n  查找插入该关键字的位置，最底层中非叶子节"},{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"插入","loc":{"start":{"line":38,"column":2},"end":{"line":38,"column":4}},"range":[767,769],"raw":" 插"}],"loc":{"start":{"line":38,"column":2},"end":{"line":38,"column":4}},"range":[767,769],"raw":" 插"},{"type":"Paragraph","children":[{"type":"Str","value":"若插入后不会破坏m阶二叉树的定义，即插入后关键字的个数在区间 ","loc":{"start":{"line":40,"column":2},"end":{"line":40,"column":33}},"range":[773,804],"raw":" 若插入后不会破坏m阶二叉树的定义，即插入后关键字的个数在区间"},{"type":"InlineMath","value":"[\\lceil \\frac{m}{2} \\rceil, m-1]","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"[\\lceil \\frac{m}{2} \\rceil, m-1]"}]},"loc":{"start":{"line":40,"column":33},"end":{"line":40,"column":67}},"range":[804,838],"raw":" $[\\lceil \\frac{m}{2} \\rceil, m-1]"},{"type":"Str","value":" ，则直接插入。","loc":{"start":{"line":40,"column":67},"end":{"line":40,"column":75}},"range":[838,846],"raw":"$ ，则直接插入"}],"loc":{"start":{"line":40,"column":2},"end":{"line":40,"column":75}},"range":[773,846],"raw":" 若插入后不会破坏m阶二叉树的定义，即插入后关键字的个数在区间 $[\\lceil \\frac{m}{2} \\rceil, m-1]$ ，则直接插入"},{"type":"Paragraph","children":[{"type":"Str","value":"若插入后，关键字的数量大于m-1。则对插入后的结点进行分裂操作；","loc":{"start":{"line":42,"column":2},"end":{"line":42,"column":34}},"range":[850,882],"raw":" 若插入后，关键字的数量大于m-1。则对插入后的结点进行分裂操作"}],"loc":{"start":{"line":42,"column":2},"end":{"line":42,"column":34}},"range":[850,882],"raw":" 若插入后，关键字的数量大于m-1。则对插入后的结点进行分裂操作"},{"type":"Paragraph","children":[{"type":"Str","value":"分裂：插入后的结点中间位置 ","loc":{"start":{"line":44,"column":2},"end":{"line":44,"column":16}},"range":[886,900],"raw":" 分裂：插入后的结点中间位置"},{"type":"InlineMath","value":"(\\lceil \\frac{m}{2} \\rceil)","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"(\\lceil \\frac{m}{2} \\rceil)"}]},"loc":{"start":{"line":44,"column":16},"end":{"line":44,"column":45}},"range":[900,929],"raw":" $(\\lceil \\frac{m}{2} \\rceil)"},{"type":"Str","value":" 关键字并入父结点中，\n中间位置左侧的结点留在原先结点中，右侧的结点放入新的结点中，\n若并入父结点后，父节点关键字数量超出范围，向上继续分裂，知道符合要求为止（如果需要对根节点分裂，树的高度+1）。","loc":{"start":{"line":44,"column":45},"end":{"line":46,"column":58}},"range":[929,1032],"raw":"$ 关键字并入父结点中，\n  中间位置左侧的结点留在原先结点中，右侧的结点放入新的结点中，\n  若并入父结点后，父节点关键字数量超出范围，向上继续分裂，知道符合要求为止（如果需要对根节点分裂，树的高度+1）"}],"loc":{"start":{"line":44,"column":2},"end":{"line":46,"column":58}},"range":[886,1032],"raw":" 分裂：插入后的结点中间位置 $(\\lceil \\frac{m}{2} \\rceil)$ 关键字并入父结点中，\n  中间位置左侧的结点留在原先结点中，右侧的结点放入新的结点中，\n  若并入父结点后，父节点关键字数量超出范围，向上继续分裂，知道符合要求为止（如果需要对根节点分裂，树的高度+1）"}],"loc":{"start":{"line":38,"column":0},"end":{"line":46,"column":58}},"range":[765,1032],"raw":"\n- 插入\n\n  若插入后不会破坏m阶二叉树的定义，即插入后关键字的个数在区间 $[\\lceil \\frac{m}{2} \\rceil, m-1]$ ，则直接插入。\n\n  若插入后，关键字的数量大于m-1。则对插入后的结点进行分裂操作；\n\n  分裂：插入后的结点中间位置 $(\\lceil \\frac{m}{2} \\rceil)$ 关键字并入父结点中，\n  中间位置左侧的结点留在原先结点中，右侧的结点放入新的结点中，\n  若并入父结点后，父节点关键字数量超出范围，向上继续分裂，知道符合要求为止（如果需要对根节点分裂，树的高度+1）"}],"loc":{"start":{"line":35,"column":0},"end":{"line":46,"column":58}},"range":[735,1032],"raw":"\n- 定位\n  查找插入该关键字的位置，最底层中非叶子节点\n\n- 插入\n\n  若插入后不会破坏m阶二叉树的定义，即插入后关键字的个数在区间 $[\\lceil \\frac{m}{2} \\rceil, m-1]$ ，则直接插入。\n\n  若插入后，关键字的数量大于m-1。则对插入后的结点进行分裂操作；\n\n  分裂：插入后的结点中间位置 $(\\lceil \\frac{m}{2} \\rceil)$ 关键字并入父结点中，\n  中间位置左侧的结点留在原先结点中，右侧的结点放入新的结点中，\n  若并入父结点后，父节点关键字数量超出范围，向上继续分裂，知道符合要求为止（如果需要对根节点分裂，树的高度+1）"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"B树的删除操作","loc":{"start":{"line":48,"column":4},"end":{"line":48,"column":11}},"range":[1038,1045],"raw":" B树的删除操"}],"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":11}},"range":[1034,1045],"raw":"\n### B树的删除操"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"删除叶子结点中的关键字","loc":{"start":{"line":50,"column":5},"end":{"line":50,"column":16}},"range":[1052,1063],"raw":" 删除叶子结点中的关键"}],"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":16}},"range":[1047,1063],"raw":"\n#### 删除叶子结点中的关键"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"直接删除：若被删除的关键字所在的结点的关键字个数 >  ","loc":{"start":{"line":52,"column":2},"end":{"line":52,"column":30}},"range":[1067,1095],"raw":" 直接删除：若被删除的关键字所在的结点的关键字个数 > "},{"type":"InlineMath","value":"\\lceil \\frac{m}{2} \\rceil - 1","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"\\lceil \\frac{m}{2} \\rceil - 1"}]},"loc":{"start":{"line":52,"column":30},"end":{"line":52,"column":61}},"range":[1095,1126],"raw":" $\\lceil \\frac{m}{2} \\rceil - 1"},{"type":"Str","value":" ，表明删除后仍满足B树的定义，直接删除。","loc":{"start":{"line":52,"column":61},"end":{"line":52,"column":82}},"range":[1126,1147],"raw":"$ ，表明删除后仍满足B树的定义，直接删除"}],"loc":{"start":{"line":52,"column":2},"end":{"line":52,"column":82}},"range":[1067,1147],"raw":" 直接删除：若被删除的关键字所在的结点的关键字个数 >  $\\lceil \\frac{m}{2} \\rceil - 1$ ，表明删除后仍满足B树的定义，直接删除"}],"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":82}},"range":[1065,1147],"raw":"\n- 直接删除：若被删除的关键字所在的结点的关键字个数 >  $\\lceil \\frac{m}{2} \\rceil - 1$ ，表明删除后仍满足B树的定义，直接删除"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"兄弟够借：若被删除的关键字所在的结点的关键字个数 =  ","loc":{"start":{"line":53,"column":2},"end":{"line":53,"column":30}},"range":[1150,1178],"raw":" 兄弟够借：若被删除的关键字所在的结点的关键字个数 = "},{"type":"InlineMath","value":"\\lceil \\frac{m}{2} \\rceil - 1","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"\\lceil \\frac{m}{2} \\rceil - 1"}]},"loc":{"start":{"line":53,"column":30},"end":{"line":53,"column":61}},"range":[1178,1209],"raw":" $\\lceil \\frac{m}{2} \\rceil - 1"},{"type":"Str","value":" ，且与此结点邻近的兄弟结点的关键字个数  ","loc":{"start":{"line":53,"column":61},"end":{"line":53,"column":83}},"range":[1209,1231],"raw":"$ ，且与此结点邻近的兄弟结点的关键字个数 "},{"type":"InlineMath","value":"\\leq \\lceil \\frac{m}{2} \\rceil","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"\\leq \\lceil \\frac{m}{2} \\rceil"}]},"loc":{"start":{"line":53,"column":83},"end":{"line":53,"column":115}},"range":[1231,1263],"raw":" $\\leq \\lceil \\frac{m}{2} \\rceil"},{"type":"Str","value":" ，则需要从兄弟结点借一个关键字，此过程需要调整该结点、双亲结点和兄弟结点的关键字。","loc":{"start":{"line":53,"column":115},"end":{"line":53,"column":157}},"range":[1263,1305],"raw":"$ ，则需要从兄弟结点借一个关键字，此过程需要调整该结点、双亲结点和兄弟结点的关键字"}],"loc":{"start":{"line":53,"column":2},"end":{"line":53,"column":157}},"range":[1150,1305],"raw":" 兄弟够借：若被删除的关键字所在的结点的关键字个数 =  $\\lceil \\frac{m}{2} \\rceil - 1$ ，且与此结点邻近的兄弟结点的关键字个数  $\\leq \\lceil \\frac{m}{2} \\rceil$ ，则需要从兄弟结点借一个关键字，此过程需要调整该结点、双亲结点和兄弟结点的关键字"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"从左（右）边的兄弟结点借：将其双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字放入到要删除关键字的结点的最左（右）边，然后将其左边兄弟结点中最大（小）的关键字放入到双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字中。","loc":{"start":{"line":54,"column":4},"end":{"line":54,"column":130}},"range":[1310,1436],"raw":" 从左（右）边的兄弟结点借：将其双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字放入到要删除关键字的结点的最左（右）边，然后将其左边兄弟结点中最大（小）的关键字放入到双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字中"}],"loc":{"start":{"line":54,"column":4},"end":{"line":54,"column":130}},"range":[1310,1436],"raw":" 从左（右）边的兄弟结点借：将其双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字放入到要删除关键字的结点的最左（右）边，然后将其左边兄弟结点中最大（小）的关键字放入到双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字中"}],"loc":{"start":{"line":54,"column":2},"end":{"line":54,"column":130}},"range":[1308,1436],"raw":" - 从左（右）边的兄弟结点借：将其双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字放入到要删除关键字的结点的最左（右）边，然后将其左边兄弟结点中最大（小）的关键字放入到双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字中"}],"loc":{"start":{"line":54,"column":2},"end":{"line":54,"column":130}},"range":[1308,1436],"raw":" - 从左（右）边的兄弟结点借：将其双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字放入到要删除关键字的结点的最左（右）边，然后将其左边兄弟结点中最大（小）的关键字放入到双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字中"}],"loc":{"start":{"line":53,"column":0},"end":{"line":54,"column":130}},"range":[1148,1436],"raw":"\n- 兄弟够借：若被删除的关键字所在的结点的关键字个数 =  $\\lceil \\frac{m}{2} \\rceil - 1$ ，且与此结点邻近的兄弟结点的关键字个数  $\\leq \\lceil \\frac{m}{2} \\rceil$ ，则需要从兄弟结点借一个关键字，此过程需要调整该结点、双亲结点和兄弟结点的关键字。\n  - 从左（右）边的兄弟结点借：将其双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字放入到要删除关键字的结点的最左（右）边，然后将其左边兄弟结点中最大（小）的关键字放入到双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字中"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"兄弟不够借：若被删除的关键字所在的结点关键字总数= ","loc":{"start":{"line":55,"column":2},"end":{"line":55,"column":28}},"range":[1439,1465],"raw":" 兄弟不够借：若被删除的关键字所在的结点关键字总数="},{"type":"InlineMath","value":"\\lceil \\frac{m}{2} \\rceil - 1","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"\\lceil \\frac{m}{2} \\rceil - 1"}]},"loc":{"start":{"line":55,"column":28},"end":{"line":55,"column":59}},"range":[1465,1496],"raw":" $\\lceil \\frac{m}{2} \\rceil - 1"},{"type":"Str","value":" ，且与该结点临近的兄弟结点的关键字总数均= ","loc":{"start":{"line":55,"column":59},"end":{"line":55,"column":82}},"range":[1496,1519],"raw":"$ ，且与该结点临近的兄弟结点的关键字总数均="},{"type":"InlineMath","value":"\\lceil \\frac{m}{2} \\rceil - 1","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"\\lceil \\frac{m}{2} \\rceil - 1"}]},"loc":{"start":{"line":55,"column":82},"end":{"line":55,"column":113}},"range":[1519,1550],"raw":" $\\lceil \\frac{m}{2} \\rceil - 1"},{"type":"Str","value":" ，则删除要删除的关键字，并与其中一个不够借的兄弟结点和双亲结点中被两兄弟夹住的关键字合并。若合并后双亲结点因减少一个结点而导致不符合定义，则继续执行2，3步骤。","loc":{"start":{"line":55,"column":113},"end":{"line":55,"column":194}},"range":[1550,1631],"raw":"$ ，则删除要删除的关键字，并与其中一个不够借的兄弟结点和双亲结点中被两兄弟夹住的关键字合并。若合并后双亲结点因减少一个结点而导致不符合定义，则继续执行2，3步骤"}],"loc":{"start":{"line":55,"column":2},"end":{"line":55,"column":194}},"range":[1439,1631],"raw":" 兄弟不够借：若被删除的关键字所在的结点关键字总数= $\\lceil \\frac{m}{2} \\rceil - 1$ ，且与该结点临近的兄弟结点的关键字总数均= $\\lceil \\frac{m}{2} \\rceil - 1$ ，则删除要删除的关键字，并与其中一个不够借的兄弟结点和双亲结点中被两兄弟夹住的关键字合并。若合并后双亲结点因减少一个结点而导致不符合定义，则继续执行2，3步骤"}],"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":194}},"range":[1437,1631],"raw":"\n- 兄弟不够借：若被删除的关键字所在的结点关键字总数= $\\lceil \\frac{m}{2} \\rceil - 1$ ，且与该结点临近的兄弟结点的关键字总数均= $\\lceil \\frac{m}{2} \\rceil - 1$ ，则删除要删除的关键字，并与其中一个不够借的兄弟结点和双亲结点中被两兄弟夹住的关键字合并。若合并后双亲结点因减少一个结点而导致不符合定义，则继续执行2，3步骤"}],"loc":{"start":{"line":52,"column":0},"end":{"line":55,"column":194}},"range":[1065,1631],"raw":"\n- 直接删除：若被删除的关键字所在的结点的关键字个数 >  $\\lceil \\frac{m}{2} \\rceil - 1$ ，表明删除后仍满足B树的定义，直接删除。\n- 兄弟够借：若被删除的关键字所在的结点的关键字个数 =  $\\lceil \\frac{m}{2} \\rceil - 1$ ，且与此结点邻近的兄弟结点的关键字个数  $\\leq \\lceil \\frac{m}{2} \\rceil$ ，则需要从兄弟结点借一个关键字，此过程需要调整该结点、双亲结点和兄弟结点的关键字。\n  - 从左（右）边的兄弟结点借：将其双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字放入到要删除关键字的结点的最左（右）边，然后将其左边兄弟结点中最大（小）的关键字放入到双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字中。\n- 兄弟不够借：若被删除的关键字所在的结点关键字总数= $\\lceil \\frac{m}{2} \\rceil - 1$ ，且与该结点临近的兄弟结点的关键字总数均= $\\lceil \\frac{m}{2} \\rceil - 1$ ，则删除要删除的关键字，并与其中一个不够借的兄弟结点和双亲结点中被两兄弟夹住的关键字合并。若合并后双亲结点因减少一个结点而导致不符合定义，则继续执行2，3步骤"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"删除非叶子结点中的关键字","loc":{"start":{"line":57,"column":5},"end":{"line":57,"column":17}},"range":[1638,1650],"raw":" 删除非叶子结点中的关键"}],"loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":17}},"range":[1633,1650],"raw":"\n#### 删除非叶子结点中的关键"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"若小于k的子树中关键字的个数> ","loc":{"start":{"line":59,"column":2},"end":{"line":59,"column":18}},"range":[1654,1670],"raw":" 若小于k的子树中关键字的个数>"},{"type":"InlineMath","value":"\\lceil \\frac{m}{2} \\rceil - 1","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"\\lceil \\frac{m}{2} \\rceil - 1"}]},"loc":{"start":{"line":59,"column":18},"end":{"line":59,"column":49}},"range":[1670,1701],"raw":" $\\lceil \\frac{m}{2} \\rceil - 1"},{"type":"Str","value":" ，找出k的前驱值 ","loc":{"start":{"line":59,"column":49},"end":{"line":59,"column":59}},"range":[1701,1711],"raw":"$ ，找出k的前驱值"},{"type":"InlineMath","value":"k'","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"k'"}]},"loc":{"start":{"line":59,"column":59},"end":{"line":59,"column":63}},"range":[1711,1715],"raw":" $k'"},{"type":"Str","value":" ，取代k，然后递归删除 ","loc":{"start":{"line":59,"column":63},"end":{"line":59,"column":76}},"range":[1715,1728],"raw":"$ ，取代k，然后递归删除"},{"type":"InlineMath","value":"k'","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"k'"}]},"loc":{"start":{"line":59,"column":76},"end":{"line":59,"column":80}},"range":[1728,1732],"raw":" $k'"},{"type":"Str","value":" 即可。","loc":{"start":{"line":59,"column":80},"end":{"line":59,"column":84}},"range":[1732,1736],"raw":"$ 即可"}],"loc":{"start":{"line":59,"column":2},"end":{"line":59,"column":84}},"range":[1654,1736],"raw":" 若小于k的子树中关键字的个数> $\\lceil \\frac{m}{2} \\rceil - 1$ ，找出k的前驱值 $k'$ ，取代k，然后递归删除 $k'$ 即可"}],"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":84}},"range":[1652,1736],"raw":"\n- 若小于k的子树中关键字的个数> $\\lceil \\frac{m}{2} \\rceil - 1$ ，找出k的前驱值 $k'$ ，取代k，然后递归删除 $k'$ 即可"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"若大于k的子树中关键字的个数> ","loc":{"start":{"line":60,"column":2},"end":{"line":60,"column":18}},"range":[1739,1755],"raw":" 若大于k的子树中关键字的个数>"},{"type":"InlineMath","value":"\\lceil \\frac{m}{2} \\rceil - 1","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"\\lceil \\frac{m}{2} \\rceil - 1"}]},"loc":{"start":{"line":60,"column":18},"end":{"line":60,"column":49}},"range":[1755,1786],"raw":" $\\lceil \\frac{m}{2} \\rceil - 1"},{"type":"Str","value":" ，找出k的后继值 ","loc":{"start":{"line":60,"column":49},"end":{"line":60,"column":59}},"range":[1786,1796],"raw":"$ ，找出k的后继值"},{"type":"InlineMath","value":"k'","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"k'"}]},"loc":{"start":{"line":60,"column":59},"end":{"line":60,"column":63}},"range":[1796,1800],"raw":" $k'"},{"type":"Str","value":" ，取代k，然后递归删除 ","loc":{"start":{"line":60,"column":63},"end":{"line":60,"column":76}},"range":[1800,1813],"raw":"$ ，取代k，然后递归删除"},{"type":"InlineMath","value":"k'","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"k'"}]},"loc":{"start":{"line":60,"column":76},"end":{"line":60,"column":80}},"range":[1813,1817],"raw":" $k'"},{"type":"Str","value":" 即可。","loc":{"start":{"line":60,"column":80},"end":{"line":60,"column":84}},"range":[1817,1821],"raw":"$ 即可"}],"loc":{"start":{"line":60,"column":2},"end":{"line":60,"column":84}},"range":[1739,1821],"raw":" 若大于k的子树中关键字的个数> $\\lceil \\frac{m}{2} \\rceil - 1$ ，找出k的后继值 $k'$ ，取代k，然后递归删除 $k'$ 即可"}],"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":84}},"range":[1737,1821],"raw":"\n- 若大于k的子树中关键字的个数> $\\lceil \\frac{m}{2} \\rceil - 1$ ，找出k的后继值 $k'$ ，取代k，然后递归删除 $k'$ 即可"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"若前后两个子树的关键字的个数均为 ","loc":{"start":{"line":61,"column":2},"end":{"line":61,"column":19}},"range":[1824,1841],"raw":" 若前后两个子树的关键字的个数均为"},{"type":"InlineMath","value":"\\lceil \\frac{m}{2} \\rceil - 1","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"\\lceil \\frac{m}{2} \\rceil - 1"}]},"loc":{"start":{"line":61,"column":19},"end":{"line":61,"column":50}},"range":[1841,1872],"raw":" $\\lceil \\frac{m}{2} \\rceil - 1"},{"type":"Str","value":" ，则将前后两子树合并，然后删除k即可。","loc":{"start":{"line":61,"column":50},"end":{"line":61,"column":70}},"range":[1872,1892],"raw":"$ ，则将前后两子树合并，然后删除k即可"}],"loc":{"start":{"line":61,"column":2},"end":{"line":61,"column":70}},"range":[1824,1892],"raw":" 若前后两个子树的关键字的个数均为 $\\lceil \\frac{m}{2} \\rceil - 1$ ，则将前后两子树合并，然后删除k即可"}],"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":70}},"range":[1822,1892],"raw":"\n- 若前后两个子树的关键字的个数均为 $\\lceil \\frac{m}{2} \\rceil - 1$ ，则将前后两子树合并，然后删除k即可"}],"loc":{"start":{"line":59,"column":0},"end":{"line":61,"column":70}},"range":[1652,1892],"raw":"\n- 若小于k的子树中关键字的个数> $\\lceil \\frac{m}{2} \\rceil - 1$ ，找出k的前驱值 $k'$ ，取代k，然后递归删除 $k'$ 即可。\n- 若大于k的子树中关键字的个数> $\\lceil \\frac{m}{2} \\rceil - 1$ ，找出k的后继值 $k'$ ，取代k，然后递归删除 $k'$ 即可。\n- 若前后两个子树的关键字的个数均为 $\\lceil \\frac{m}{2} \\rceil - 1$ ，则将前后两子树合并，然后删除k即可"},{"type":"HorizontalRule","loc":{"start":{"line":63,"column":0},"end":{"line":63,"column":33}},"range":[1894,1927],"raw":"\n********************************"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"B+树","loc":{"start":{"line":65,"column":3},"end":{"line":65,"column":6}},"range":[1932,1935],"raw":" B+"}],"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":6}},"range":[1929,1935],"raw":"\n## B+"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"B+树的概念","loc":{"start":{"line":67,"column":4},"end":{"line":67,"column":10}},"range":[1941,1947],"raw":" B+树的概"}],"loc":{"start":{"line":67,"column":0},"end":{"line":67,"column":10}},"range":[1937,1947],"raw":"\n### B+树的概"},{"type":"Paragraph","children":[{"type":"Str","value":"一棵m阶B+树需要满足如下的条件：","loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":17}},"range":[1949,1966],"raw":"\n一棵m阶B+树需要满足如下的条件"}],"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":17}},"range":[1949,1966],"raw":"\n一棵m阶B+树需要满足如下的条件"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"每个分支结点最多有m棵子树；","loc":{"start":{"line":71,"column":2},"end":{"line":71,"column":16}},"range":[1970,1984],"raw":" 每个分支结点最多有m棵子树"}],"loc":{"start":{"line":71,"column":2},"end":{"line":71,"column":16}},"range":[1970,1984],"raw":" 每个分支结点最多有m棵子树"}],"loc":{"start":{"line":71,"column":0},"end":{"line":71,"column":16}},"range":[1968,1984],"raw":"\n- 每个分支结点最多有m棵子树"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"非叶根结点至少有两棵子树，其他每个分支结点至少 ","loc":{"start":{"line":72,"column":2},"end":{"line":72,"column":26}},"range":[1987,2011],"raw":" 非叶根结点至少有两棵子树，其他每个分支结点至少"},{"type":"InlineMath","value":"\\lceil \\frac{m}{2} \\rceil","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"\\lceil \\frac{m}{2} \\rceil"}]},"loc":{"start":{"line":72,"column":26},"end":{"line":72,"column":53}},"range":[2011,2038],"raw":" $\\lceil \\frac{m}{2} \\rceil"},{"type":"Str","value":" 棵子树；","loc":{"start":{"line":72,"column":53},"end":{"line":72,"column":58}},"range":[2038,2043],"raw":"$ 棵子树"}],"loc":{"start":{"line":72,"column":2},"end":{"line":72,"column":58}},"range":[1987,2043],"raw":" 非叶根结点至少有两棵子树，其他每个分支结点至少 $\\lceil \\frac{m}{2} \\rceil$ 棵子树"}],"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":58}},"range":[1985,2043],"raw":"\n- 非叶根结点至少有两棵子树，其他每个分支结点至少 $\\lceil \\frac{m}{2} \\rceil$ 棵子树"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"结点的子树个数与关键字个数相等；","loc":{"start":{"line":73,"column":2},"end":{"line":73,"column":18}},"range":[2046,2062],"raw":" 结点的子树个数与关键字个数相等"}],"loc":{"start":{"line":73,"column":2},"end":{"line":73,"column":18}},"range":[2046,2062],"raw":" 结点的子树个数与关键字个数相等"}],"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":18}},"range":[2044,2062],"raw":"\n- 结点的子树个数与关键字个数相等"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"所有叶子结点包含全部关键字及指向相应记录的指针，叶节点中将关键字按照大小顺序排列，相邻叶节点按照大小顺序相连接；","loc":{"start":{"line":74,"column":2},"end":{"line":74,"column":58}},"range":[2065,2121],"raw":" 所有叶子结点包含全部关键字及指向相应记录的指针，叶节点中将关键字按照大小顺序排列，相邻叶节点按照大小顺序相连接"}],"loc":{"start":{"line":74,"column":2},"end":{"line":74,"column":58}},"range":[2065,2121],"raw":" 所有叶子结点包含全部关键字及指向相应记录的指针，叶节点中将关键字按照大小顺序排列，相邻叶节点按照大小顺序相连接"}],"loc":{"start":{"line":74,"column":0},"end":{"line":74,"column":58}},"range":[2063,2121],"raw":"\n- 所有叶子结点包含全部关键字及指向相应记录的指针，叶节点中将关键字按照大小顺序排列，相邻叶节点按照大小顺序相连接"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"所有分支结点（可视为索引的索引）中仅包含它们的子结点（即下一级的索引块）中的关键字的最大值，及指向其子结点的指针。","loc":{"start":{"line":75,"column":2},"end":{"line":75,"column":59}},"range":[2124,2181],"raw":" 所有分支结点（可视为索引的索引）中仅包含它们的子结点（即下一级的索引块）中的关键字的最大值，及指向其子结点的指针"}],"loc":{"start":{"line":75,"column":2},"end":{"line":75,"column":59}},"range":[2124,2181],"raw":" 所有分支结点（可视为索引的索引）中仅包含它们的子结点（即下一级的索引块）中的关键字的最大值，及指向其子结点的指针"}],"loc":{"start":{"line":75,"column":0},"end":{"line":75,"column":59}},"range":[2122,2181],"raw":"\n- 所有分支结点（可视为索引的索引）中仅包含它们的子结点（即下一级的索引块）中的关键字的最大值，及指向其子结点的指针"}],"loc":{"start":{"line":71,"column":0},"end":{"line":75,"column":59}},"range":[1968,2181],"raw":"\n- 每个分支结点最多有m棵子树；\n- 非叶根结点至少有两棵子树，其他每个分支结点至少 $\\lceil \\frac{m}{2} \\rceil$ 棵子树；\n- 结点的子树个数与关键字个数相等；\n- 所有叶子结点包含全部关键字及指向相应记录的指针，叶节点中将关键字按照大小顺序排列，相邻叶节点按照大小顺序相连接；\n- 所有分支结点（可视为索引的索引）中仅包含它们的子结点（即下一级的索引块）中的关键字的最大值，及指向其子结点的指针"},{"type":"HorizontalRule","loc":{"start":{"line":77,"column":0},"end":{"line":77,"column":33}},"range":[2183,2216],"raw":"\n********************************"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"B树和B+树的区别","loc":{"start":{"line":79,"column":3},"end":{"line":79,"column":12}},"range":[2221,2230],"raw":" B树和B+树的区"}],"loc":{"start":{"line":79,"column":0},"end":{"line":79,"column":12}},"range":[2218,2230],"raw":"\n## B树和B+树的区"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"在B+树中，含有n个关键字的结点只包含n棵子树，即每个关键字只对应一棵子树；而在B树中，具有n个关键字的结点含有n+1棵子树。","loc":{"start":{"line":81,"column":2},"end":{"line":81,"column":65}},"range":[2234,2297],"raw":" 在B+树中，含有n个关键字的结点只包含n棵子树，即每个关键字只对应一棵子树；而在B树中，具有n个关键字的结点含有n+1棵子树"}],"loc":{"start":{"line":81,"column":2},"end":{"line":81,"column":65}},"range":[2234,2297],"raw":" 在B+树中，含有n个关键字的结点只包含n棵子树，即每个关键字只对应一棵子树；而在B树中，具有n个关键字的结点含有n+1棵子树"}],"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":65}},"range":[2232,2297],"raw":"\n- 在B+树中，含有n个关键字的结点只包含n棵子树，即每个关键字只对应一棵子树；而在B树中，具有n个关键字的结点含有n+1棵子树"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"在B+树中，每个结点的关键字树的范围是 ","loc":{"start":{"line":82,"column":2},"end":{"line":82,"column":22}},"range":[2300,2320],"raw":" 在B+树中，每个结点的关键字树的范围是"},{"type":"InlineMath","value":"\\lceil \\frac{m}{2} \\rceil \\leq n \\leq m","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"\\lceil \\frac{m}{2} \\rceil \\leq n \\leq m"}]},"loc":{"start":{"line":82,"column":22},"end":{"line":82,"column":63}},"range":[2320,2361],"raw":" $\\lceil \\frac{m}{2} \\rceil \\leq n \\leq m"},{"type":"Str","value":"  (根节点： ","loc":{"start":{"line":82,"column":63},"end":{"line":82,"column":71}},"range":[2361,2369],"raw":"$  (根节点："},{"type":"InlineMath","value":"1 \\leq n \\leq m","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"1 \\leq n \\leq m"}]},"loc":{"start":{"line":82,"column":71},"end":{"line":82,"column":88}},"range":[2369,2386],"raw":" $1 \\leq n \\leq m"},{"type":"Str","value":" )；在B树中，每个结点（非根内部结点）的关键字个数n的范围是 ","loc":{"start":{"line":82,"column":88},"end":{"line":82,"column":120}},"range":[2386,2418],"raw":"$ )；在B树中，每个结点（非根内部结点）的关键字个数n的范围是"},{"type":"InlineMath","value":"\\lceil \\frac{m}{2} \\rceil - 1 \\leq n \\leq m - 1","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"\\lceil \\frac{m}{2} \\rceil - 1 \\leq n \\leq m - 1"}]},"loc":{"start":{"line":82,"column":120},"end":{"line":82,"column":169}},"range":[2418,2467],"raw":" $\\lceil \\frac{m}{2} \\rceil - 1 \\leq n \\leq m - 1"},{"type":"Str","value":" （根节点： ","loc":{"start":{"line":82,"column":169},"end":{"line":82,"column":176}},"range":[2467,2474],"raw":"$ （根节点："},{"type":"InlineMath","value":"1 \\leq n \\leq m-1","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"1 \\leq n \\leq m-1"}]},"loc":{"start":{"line":82,"column":176},"end":{"line":82,"column":195}},"range":[2474,2493],"raw":" $1 \\leq n \\leq m-1"},{"type":"Str","value":" ）。","loc":{"start":{"line":82,"column":195},"end":{"line":82,"column":198}},"range":[2493,2496],"raw":"$ ）"}],"loc":{"start":{"line":82,"column":2},"end":{"line":82,"column":198}},"range":[2300,2496],"raw":" 在B+树中，每个结点的关键字树的范围是 $\\lceil \\frac{m}{2} \\rceil \\leq n \\leq m$  (根节点： $1 \\leq n \\leq m$ )；在B树中，每个结点（非根内部结点）的关键字个数n的范围是 $\\lceil \\frac{m}{2} \\rceil - 1 \\leq n \\leq m - 1$ （根节点： $1 \\leq n \\leq m-1$ ）"}],"loc":{"start":{"line":82,"column":0},"end":{"line":82,"column":198}},"range":[2298,2496],"raw":"\n- 在B+树中，每个结点的关键字树的范围是 $\\lceil \\frac{m}{2} \\rceil \\leq n \\leq m$  (根节点： $1 \\leq n \\leq m$ )；在B树中，每个结点（非根内部结点）的关键字个数n的范围是 $\\lceil \\frac{m}{2} \\rceil - 1 \\leq n \\leq m - 1$ （根节点： $1 \\leq n \\leq m-1$ ）"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"在B+树中，叶子结点包含信息，所有非叶子结点仅起索引作用，非叶子结点中的每个索引项只含有对应子树的最大关键字和指向该子树的指针，不含有该关键字对应记录的存储地址。","loc":{"start":{"line":83,"column":2},"end":{"line":83,"column":83}},"range":[2499,2580],"raw":" 在B+树中，叶子结点包含信息，所有非叶子结点仅起索引作用，非叶子结点中的每个索引项只含有对应子树的最大关键字和指向该子树的指针，不含有该关键字对应记录的存储地址"}],"loc":{"start":{"line":83,"column":2},"end":{"line":83,"column":83}},"range":[2499,2580],"raw":" 在B+树中，叶子结点包含信息，所有非叶子结点仅起索引作用，非叶子结点中的每个索引项只含有对应子树的最大关键字和指向该子树的指针，不含有该关键字对应记录的存储地址"}],"loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":83}},"range":[2497,2580],"raw":"\n- 在B+树中，叶子结点包含信息，所有非叶子结点仅起索引作用，非叶子结点中的每个索引项只含有对应子树的最大关键字和指向该子树的指针，不含有该关键字对应记录的存储地址"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"在B+树中，叶结点包含信息，所有非叶结点仅起索引作用，非叶结点的每个索引项只含有对应子树的最大关键字和指向该子树的指针；而在B树中，叶子结点包含关键字和其他结点和其他结点包含的关键字是不重复的。","loc":{"start":{"line":84,"column":2},"end":{"line":84,"column":99}},"range":[2583,2680],"raw":" 在B+树中，叶结点包含信息，所有非叶结点仅起索引作用，非叶结点的每个索引项只含有对应子树的最大关键字和指向该子树的指针；而在B树中，叶子结点包含关键字和其他结点和其他结点包含的关键字是不重复的"}],"loc":{"start":{"line":84,"column":2},"end":{"line":84,"column":99}},"range":[2583,2680],"raw":" 在B+树中，叶结点包含信息，所有非叶结点仅起索引作用，非叶结点的每个索引项只含有对应子树的最大关键字和指向该子树的指针；而在B树中，叶子结点包含关键字和其他结点和其他结点包含的关键字是不重复的"}],"loc":{"start":{"line":84,"column":0},"end":{"line":84,"column":99}},"range":[2581,2680],"raw":"\n- 在B+树中，叶结点包含信息，所有非叶结点仅起索引作用，非叶结点的每个索引项只含有对应子树的最大关键字和指向该子树的指针；而在B树中，叶子结点包含关键字和其他结点和其他结点包含的关键字是不重复的"}],"loc":{"start":{"line":81,"column":0},"end":{"line":84,"column":99}},"range":[2232,2680],"raw":"\n- 在B+树中，含有n个关键字的结点只包含n棵子树，即每个关键字只对应一棵子树；而在B树中，具有n个关键字的结点含有n+1棵子树。\n- 在B+树中，每个结点的关键字树的范围是 $\\lceil \\frac{m}{2} \\rceil \\leq n \\leq m$  (根节点： $1 \\leq n \\leq m$ )；在B树中，每个结点（非根内部结点）的关键字个数n的范围是 $\\lceil \\frac{m}{2} \\rceil - 1 \\leq n \\leq m - 1$ （根节点： $1 \\leq n \\leq m-1$ ）。\n- 在B+树中，叶子结点包含信息，所有非叶子结点仅起索引作用，非叶子结点中的每个索引项只含有对应子树的最大关键字和指向该子树的指针，不含有该关键字对应记录的存储地址。\n- 在B+树中，叶结点包含信息，所有非叶结点仅起索引作用，非叶结点的每个索引项只含有对应子树的最大关键字和指向该子树的指针；而在B树中，叶子结点包含关键字和其他结点和其他结点包含的关键字是不重复的"}],"loc":{"start":{"line":1,"column":0},"end":{"line":85,"column":0}},"range":[0,2681],"raw":"﻿---\ntitle: 'B树和B+树'\ntags: ['数据结构','B树','B+树']\n---\n## B树\n\n又称多路平衡查找树，B树中所有结点的**孩子结点数**的最大值称为B树的阶。\n\n### B树的特征\n\n一棵m阶B树或为空树，或满足如下的条件的m叉树：\n\n- 树中每个结点至多有m棵子树（至多含有m-1个关键字）\n- 若根结点不是终端节点，则至少有两棵子树\n- 除根结点外的所有非叶节点至少有 $\\lceil\\frac{m}{2}\\rceil$ 棵子树（即 $\\lceil\\frac{m}{2}\\rceil-1$ 个关键字）\n- 非叶节点的结构：\n\n  ![quicker_f986338d-c707-4935-8160-23c73da328ee.png](https://i.loli.net/2020/08/05/dKoNO94ETnPbMRv.png)\n\n   $K_{i}\\;(i=1,2,...,n)$ 为结点的关键字， $K1<K2<...<Kn$ ，\n   $P_{i}(i=0,1,...,n)$ 为指向子树根节点的指针， $P_{i}-1$ 所指子树的关键字均小于 $K_{i}$ ， $P_{i}$ 所指子树的关键字均大于 $K_{i}$ 。\n- 所有的叶节点都出现在同一层次上，不携带任何信息\n\nn个关键字，阶数为m的b树，其高度h满足：\n\n $log_{m}(n+1)\\leq h \\leq \\left (log_{\\lceil \\frac{m}{2} \\rceil}\\frac{n+1}{2}\\right )+1$ \n\n### B树的查找操作\n\n- 在B树中查找关键字所在的结点\n- 在结点中查找关键字\n\n### B树的插入操作\n\n- 定位\n  查找插入该关键字的位置，最底层中非叶子节点\n\n- 插入\n\n  若插入后不会破坏m阶二叉树的定义，即插入后关键字的个数在区间 $[\\lceil \\frac{m}{2} \\rceil, m-1]$ ，则直接插入。\n\n  若插入后，关键字的数量大于m-1。则对插入后的结点进行分裂操作；\n\n  分裂：插入后的结点中间位置 $(\\lceil \\frac{m}{2} \\rceil)$ 关键字并入父结点中，\n  中间位置左侧的结点留在原先结点中，右侧的结点放入新的结点中，\n  若并入父结点后，父节点关键字数量超出范围，向上继续分裂，知道符合要求为止（如果需要对根节点分裂，树的高度+1）。\n\n### B树的删除操作\n\n#### 删除叶子结点中的关键字\n\n- 直接删除：若被删除的关键字所在的结点的关键字个数 >  $\\lceil \\frac{m}{2} \\rceil - 1$ ，表明删除后仍满足B树的定义，直接删除。\n- 兄弟够借：若被删除的关键字所在的结点的关键字个数 =  $\\lceil \\frac{m}{2} \\rceil - 1$ ，且与此结点邻近的兄弟结点的关键字个数  $\\leq \\lceil \\frac{m}{2} \\rceil$ ，则需要从兄弟结点借一个关键字，此过程需要调整该结点、双亲结点和兄弟结点的关键字。\n  - 从左（右）边的兄弟结点借：将其双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字放入到要删除关键字的结点的最左（右）边，然后将其左边兄弟结点中最大（小）的关键字放入到双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字中。\n- 兄弟不够借：若被删除的关键字所在的结点关键字总数= $\\lceil \\frac{m}{2} \\rceil - 1$ ，且与该结点临近的兄弟结点的关键字总数均= $\\lceil \\frac{m}{2} \\rceil - 1$ ，则删除要删除的关键字，并与其中一个不够借的兄弟结点和双亲结点中被两兄弟夹住的关键字合并。若合并后双亲结点因减少一个结点而导致不符合定义，则继续执行2，3步骤。\n\n#### 删除非叶子结点中的关键字\n\n- 若小于k的子树中关键字的个数> $\\lceil \\frac{m}{2} \\rceil - 1$ ，找出k的前驱值 $k'$ ，取代k，然后递归删除 $k'$ 即可。\n- 若大于k的子树中关键字的个数> $\\lceil \\frac{m}{2} \\rceil - 1$ ，找出k的后继值 $k'$ ，取代k，然后递归删除 $k'$ 即可。\n- 若前后两个子树的关键字的个数均为 $\\lceil \\frac{m}{2} \\rceil - 1$ ，则将前后两子树合并，然后删除k即可。\n\n*********************************\n\n## B+树\n\n### B+树的概念\n\n一棵m阶B+树需要满足如下的条件：\n\n- 每个分支结点最多有m棵子树；\n- 非叶根结点至少有两棵子树，其他每个分支结点至少 $\\lceil \\frac{m}{2} \\rceil$ 棵子树；\n- 结点的子树个数与关键字个数相等；\n- 所有叶子结点包含全部关键字及指向相应记录的指针，叶节点中将关键字按照大小顺序排列，相邻叶节点按照大小顺序相连接；\n- 所有分支结点（可视为索引的索引）中仅包含它们的子结点（即下一级的索引块）中的关键字的最大值，及指向其子结点的指针。\n\n*********************************\n\n## B树和B+树的区别\n\n- 在B+树中，含有n个关键字的结点只包含n棵子树，即每个关键字只对应一棵子树；而在B树中，具有n个关键字的结点含有n+1棵子树。\n- 在B+树中，每个结点的关键字树的范围是 $\\lceil \\frac{m}{2} \\rceil \\leq n \\leq m$  (根节点： $1 \\leq n \\leq m$ )；在B树中，每个结点（非根内部结点）的关键字个数n的范围是 $\\lceil \\frac{m}{2} \\rceil - 1 \\leq n \\leq m - 1$ （根节点： $1 \\leq n \\leq m-1$ ）。\n- 在B+树中，叶子结点包含信息，所有非叶子结点仅起索引作用，非叶子结点中的每个索引项只含有对应子树的最大关键字和指向该子树的指针，不含有该关键字对应记录的存储地址。\n- 在B+树中，叶结点包含信息，所有非叶结点仅起索引作用，非叶结点的每个索引项只含有对应子树的最大关键字和指向该子树的指针；而在B树中，叶子结点包含关键字和其他结点和其他结点包含的关键字是不重复的。"},"catalogue":{"title":"B树和B+树","json-path":"数据结构/2020-08-05-B树.json","mdate":"2020-08-05","cover":"https://i.328888.xyz/2022/12/31/ndOVF.jpeg","icon":"🌛","visible":true,"tags":["数据结构","B树","B+树"]}}