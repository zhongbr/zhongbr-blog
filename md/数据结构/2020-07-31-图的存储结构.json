{"ast":{"type":"Document","children":[{"type":"Yaml","value":"tags: ['数据结构','图','邻接矩阵']","loc":{"start":{"line":1,"column":0},"end":{"line":3,"column":3}},"range":[0,33],"raw":"﻿---\ntags: ['数据结构','图','邻接矩阵']\n--","visible":false},{"type":"Header","depth":1,"children":[{"type":"Str","value":"图的存储结构","loc":{"start":{"line":4,"column":2},"end":{"line":4,"column":8}},"range":[36,42],"raw":" 图的存储结"}],"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":8}},"range":[34,42],"raw":"\n# 图的存储结"},{"type":"Paragraph","children":[{"type":"Str","value":"图的结构比较复杂，任意两个结点之间都可能存在联系，无法用数据元素在存储区的物理位置来表示其元素之间的关系。所以图没有顺序映像的存储结构，只有采用多重链表的链式映像结构。","loc":{"start":{"line":6,"column":0},"end":{"line":6,"column":84}},"range":[44,128],"raw":"\n图的结构比较复杂，任意两个结点之间都可能存在联系，无法用数据元素在存储区的物理位置来表示其元素之间的关系。所以图没有顺序映像的存储结构，只有采用多重链表的链式映像结构"}],"loc":{"start":{"line":6,"column":0},"end":{"line":6,"column":84}},"range":[44,128],"raw":"\n图的结构比较复杂，任意两个结点之间都可能存在联系，无法用数据元素在存储区的物理位置来表示其元素之间的关系。所以图没有顺序映像的存储结构，只有采用多重链表的链式映像结构"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"数组表示法","loc":{"start":{"line":8,"column":3},"end":{"line":8,"column":8}},"range":[133,138],"raw":" 数组表示"}],"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":8}},"range":[130,138],"raw":"\n## 数组表示"},{"type":"Paragraph","children":[{"type":"Str","value":"用两个数组分别存储数据元素（顶点）的信息和数据元素之间的关系（边或弧）的信息。","loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":39}},"range":[140,179],"raw":"\n用两个数组分别存储数据元素（顶点）的信息和数据元素之间的关系（边或弧）的信息"}],"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":39}},"range":[140,179],"raw":"\n用两个数组分别存储数据元素（顶点）的信息和数据元素之间的关系（边或弧）的信息"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"邻接矩阵","loc":{"start":{"line":12,"column":4},"end":{"line":12,"column":8}},"range":[185,189],"raw":" 邻接矩"}],"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":8}},"range":[181,189],"raw":"\n### 邻接矩"},{"type":"Paragraph","children":[{"type":"Str","value":"以二维数组表示有n个顶点的图时，需要存放n个顶点的信息和  ","loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":30}},"range":[191,221],"raw":"\n以二维数组表示有n个顶点的图时，需要存放n个顶点的信息和 "},{"type":"InlineMath","value":"n^{2}","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"n^{2}"}]},"loc":{"start":{"line":14,"column":30},"end":{"line":14,"column":37}},"range":[221,228],"raw":" $n^{2}"},{"type":"Str","value":"  条边的信息的存储量。对于无向图，由于邻接矩阵关于对角线对称，可以压缩为只存储对角线上三角（或下三角）区域的元素。","loc":{"start":{"line":14,"column":37},"end":{"line":14,"column":95}},"range":[228,286],"raw":"$  条边的信息的存储量。对于无向图，由于邻接矩阵关于对角线对称，可以压缩为只存储对角线上三角（或下三角）区域的元素"}],"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":95}},"range":[191,286],"raw":"\n以二维数组表示有n个顶点的图时，需要存放n个顶点的信息和  $n^{2}$  条边的信息的存储量。对于无向图，由于邻接矩阵关于对角线对称，可以压缩为只存储对角线上三角（或下三角）区域的元素"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/31/LoB6ucMYPXvfejg.png","alt":"PNG??.png","loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":63}},"range":[288,351],"raw":"\n![PNG??.png](https://i.loli.net/2020/07/31/LoB6ucMYPXvfejg.png"}],"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":63}},"range":[288,351],"raw":"\n![PNG??.png](https://i.loli.net/2020/07/31/LoB6ucMYPXvfejg.png"},{"type":"Paragraph","children":[{"type":"Str","value":"通过邻接矩阵可以很方便地知道顶点之间是否有边（或弧）相连，并且很容易球的各个顶点的度。","loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}},"range":[353,396],"raw":"\n通过邻接矩阵可以很方便地知道顶点之间是否有边（或弧）相连，并且很容易球的各个顶点的度"}],"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}},"range":[353,396],"raw":"\n通过邻接矩阵可以很方便地知道顶点之间是否有边（或弧）相连，并且很容易球的各个顶点的度"},{"type":"Paragraph","children":[{"type":"Str","value":"对于无向图，顶点 ","loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":9}},"range":[398,407],"raw":"\n对于无向图，顶点"},{"type":"InlineMath","value":"v_{i}","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"v_{i}"}]},"loc":{"start":{"line":20,"column":9},"end":{"line":20,"column":16}},"range":[407,414],"raw":" $v_{i}"},{"type":"Str","value":" 的度是邻接矩阵中第i行（第i列）的元素之和，即：","loc":{"start":{"line":20,"column":16},"end":{"line":20,"column":41}},"range":[414,439],"raw":"$ 的度是邻接矩阵中第i行（第i列）的元素之和，即"}],"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":41}},"range":[398,439],"raw":"\n对于无向图，顶点 $v_{i}$ 的度是邻接矩阵中第i行（第i列）的元素之和，即"},{"type":"Paragraph","children":[{"type":"InlineMath","value":"TD(v_{i})=\\sum_{j=0}^{n-1}A[i][j]","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"TD(v_{i})=\\sum_{j=0}^{n-1}A[i][j]"}]},"loc":{"start":{"line":22,"column":1},"end":{"line":22,"column":36}},"range":[442,477],"raw":" $TD(v_{i})=\\sum_{j=0}^{n-1}A[i][j]"}],"loc":{"start":{"line":22,"column":1},"end":{"line":22,"column":37}},"range":[442,478],"raw":" $TD(v_{i})=\\sum_{j=0}^{n-1}A[i][j]$"},{"type":"Paragraph","children":[{"type":"Str","value":"对于有向图，第i行的元素之和为顶点 ","loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":18}},"range":[480,498],"raw":"\n对于有向图，第i行的元素之和为顶点"},{"type":"InlineMath","value":"v_{i}","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"v_{i}"}]},"loc":{"start":{"line":24,"column":18},"end":{"line":24,"column":25}},"range":[498,505],"raw":" $v_{i}"},{"type":"Str","value":" 的出度 ","loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":30}},"range":[505,510],"raw":"$ 的出度"},{"type":"InlineMath","value":"OD(v_{i})","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"OD(v_{i})"}]},"loc":{"start":{"line":24,"column":30},"end":{"line":24,"column":41}},"range":[510,521],"raw":" $OD(v_{i})"},{"type":"Str","value":" ，第j列元素之和为顶点 ","loc":{"start":{"line":24,"column":41},"end":{"line":24,"column":54}},"range":[521,534],"raw":"$ ，第j列元素之和为顶点"},{"type":"InlineMath","value":"v_{j}","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"v_{j}"}]},"loc":{"start":{"line":24,"column":54},"end":{"line":24,"column":61}},"range":[534,541],"raw":" $v_{j}"},{"type":"Str","value":" 的入度 ","loc":{"start":{"line":24,"column":61},"end":{"line":24,"column":66}},"range":[541,546],"raw":"$ 的入度"},{"type":"InlineMath","value":"ID(v_{j})","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"ID(v_{j})"}]},"loc":{"start":{"line":24,"column":66},"end":{"line":24,"column":77}},"range":[546,557],"raw":" $ID(v_{j})"},{"type":"Str","value":" 。","loc":{"start":{"line":24,"column":77},"end":{"line":24,"column":79}},"range":[557,559],"raw":"$ "}],"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":79}},"range":[480,559],"raw":"\n对于有向图，第i行的元素之和为顶点 $v_{i}$ 的出度 $OD(v_{i})$ ，第j列元素之和为顶点 $v_{j}$ 的入度 $ID(v_{j})$ "},{"type":"Paragraph","children":[{"type":"Str","value":"网络的邻接矩阵可以定义为","loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":12}},"range":[561,573],"raw":"\n网络的邻接矩阵可以定义"}],"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":12}},"range":[561,573],"raw":"\n网络的邻接矩阵可以定义"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"当< ","loc":{"start":{"line":28,"column":2},"end":{"line":28,"column":5}},"range":[577,580],"raw":" 当<"},{"type":"InlineMath","value":"v_{i},v_{j}","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"v_{i},v_{j}"}]},"loc":{"start":{"line":28,"column":5},"end":{"line":28,"column":18}},"range":[580,593],"raw":" $v_{i},v_{j}"},{"type":"Str","value":" > 或  ","loc":{"start":{"line":28,"column":18},"end":{"line":28,"column":24}},"range":[593,599],"raw":"$ > 或 "},{"type":"InlineMath","value":"(v_{i}, v_{j})","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"(v_{i}, v_{j})"}]},"loc":{"start":{"line":28,"column":24},"end":{"line":28,"column":40}},"range":[599,615],"raw":" $(v_{i}, v_{j})"},{"type":"Str","value":"   ","loc":{"start":{"line":28,"column":40},"end":{"line":28,"column":43}},"range":[615,618],"raw":"$  "},{"type":"InlineMath","value":"\\in VR","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"\\in VR"}]},"loc":{"start":{"line":28,"column":43},"end":{"line":28,"column":51}},"range":[618,626],"raw":" $\\in VR"},{"type":"Str","value":" ：","loc":{"start":{"line":28,"column":51},"end":{"line":28,"column":53}},"range":[626,628],"raw":"$ "}],"loc":{"start":{"line":28,"column":2},"end":{"line":28,"column":53}},"range":[577,628],"raw":" 当< $v_{i},v_{j}$ > 或  $(v_{i}, v_{j})$   $\\in VR$ "},{"type":"Paragraph","children":[{"type":"InlineMath","value":"A[i][j]=w_{i,j}","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"A[i][j]=w_{i,j}"}]},"loc":{"start":{"line":30,"column":3},"end":{"line":30,"column":20}},"range":[635,652],"raw":" $A[i][j]=w_{i,j}"}],"loc":{"start":{"line":30,"column":3},"end":{"line":30,"column":21}},"range":[635,653],"raw":" $A[i][j]=w_{i,j}$"}],"loc":{"start":{"line":28,"column":0},"end":{"line":30,"column":21}},"range":[575,653],"raw":"\n- 当< $v_{i},v_{j}$ > 或  $(v_{i}, v_{j})$   $\\in VR$ ：\n  \n   $A[i][j]=w_{i,j}$"},{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"反之：","loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":5}},"range":[656,659],"raw":" 反之"}],"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":5}},"range":[656,659],"raw":" 反之"},{"type":"Paragraph","children":[{"type":"InlineMath","value":"A[i][j]=\\infty","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"A[i][j]=\\infty"}]},"loc":{"start":{"line":33,"column":3},"end":{"line":33,"column":19}},"range":[666,682],"raw":" $A[i][j]=\\infty"}],"loc":{"start":{"line":33,"column":3},"end":{"line":33,"column":20}},"range":[666,683],"raw":" $A[i][j]=\\infty$"}],"loc":{"start":{"line":31,"column":0},"end":{"line":33,"column":20}},"range":[654,683],"raw":"\n- 反之：\n  \n   $A[i][j]=\\infty$"}],"loc":{"start":{"line":28,"column":0},"end":{"line":33,"column":20}},"range":[575,683],"raw":"\n- 当< $v_{i},v_{j}$ > 或  $(v_{i}, v_{j})$   $\\in VR$ ：\n  \n   $A[i][j]=w_{i,j}$ \n- 反之：\n  \n   $A[i][j]=\\infty$"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"邻接表(Adjacency List)","loc":{"start":{"line":35,"column":3},"end":{"line":35,"column":22}},"range":[688,707],"raw":" 邻接表(Adjacency List"}],"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":22}},"range":[685,707],"raw":"\n## 邻接表(Adjacency List"},{"type":"Paragraph","children":[{"type":"Str","value":"图的一种链式存储结构，对图中的每一个顶点建立一个单链表。","loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":28}},"range":[709,737],"raw":"\n图的一种链式存储结构，对图中的每一个顶点建立一个单链表"}],"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":28}},"range":[709,737],"raw":"\n图的一种链式存储结构，对图中的每一个顶点建立一个单链表"},{"type":"Paragraph","children":[{"type":"Str","value":"每个单链表由三个域组成。分别是指示顶点 ","loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":20}},"range":[739,759],"raw":"\n每个单链表由三个域组成。分别是指示顶点"},{"type":"InlineMath","value":"v_{i}","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"v_{i}"}]},"loc":{"start":{"line":39,"column":20},"end":{"line":39,"column":27}},"range":[759,766],"raw":" $v_{i}"},{"type":"Str","value":" 邻接的点在途中的位置的邻接点域，指示下一条边或弧的节点的链域和存储数据、边或弧权值等信息的数据域。","loc":{"start":{"line":39,"column":27},"end":{"line":39,"column":77}},"range":[766,816],"raw":"$ 邻接的点在途中的位置的邻接点域，指示下一条边或弧的节点的链域和存储数据、边或弧权值等信息的数据域"}],"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":77}},"range":[739,816],"raw":"\n每个单链表由三个域组成。分别是指示顶点 $v_{i}$ 邻接的点在途中的位置的邻接点域，指示下一条边或弧的节点的链域和存储数据、边或弧权值等信息的数据域"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"十字链表","loc":{"start":{"line":41,"column":3},"end":{"line":41,"column":7}},"range":[821,825],"raw":" 十字链"}],"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":7}},"range":[818,825],"raw":"\n## 十字链"},{"type":"Paragraph","children":[{"type":"Str","value":"将有向图的邻接表和逆邻接表组合起来得到的一种链表，对于有向图的每一条弧，每个顶点都有一个结点与之对应，两种结点的结构如下图所示：","loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":64}},"range":[827,891],"raw":"\n将有向图的邻接表和逆邻接表组合起来得到的一种链表，对于有向图的每一条弧，每个顶点都有一个结点与之对应，两种结点的结构如下图所示"}],"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":64}},"range":[827,891],"raw":"\n将有向图的邻接表和逆邻接表组合起来得到的一种链表，对于有向图的每一条弧，每个顶点都有一个结点与之对应，两种结点的结构如下图所示"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/31/OBpy3TzQkHNiVve.png","alt":"PNG??.png","loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":63}},"range":[893,956],"raw":"\n![PNG??.png](https://i.loli.net/2020/07/31/OBpy3TzQkHNiVve.png"}],"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":63}},"range":[893,956],"raw":"\n![PNG??.png](https://i.loli.net/2020/07/31/OBpy3TzQkHNiVve.png"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"弧结点有五个域","loc":{"start":{"line":47,"column":4},"end":{"line":47,"column":11}},"range":[962,969],"raw":" 弧结点有五个"}],"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":11}},"range":[958,969],"raw":"\n### 弧结点有五个"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"尾域(tailvex):指向弧头","loc":{"start":{"line":49,"column":2},"end":{"line":49,"column":18}},"range":[973,989],"raw":" 尾域(tailvex):指向弧"}],"loc":{"start":{"line":49,"column":2},"end":{"line":49,"column":18}},"range":[973,989],"raw":" 尾域(tailvex):指向弧"}],"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":18}},"range":[971,989],"raw":"\n- 尾域(tailvex):指向弧"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"头域(headvex):指向弧尾","loc":{"start":{"line":50,"column":2},"end":{"line":50,"column":18}},"range":[992,1008],"raw":" 头域(headvex):指向弧"}],"loc":{"start":{"line":50,"column":2},"end":{"line":50,"column":18}},"range":[992,1008],"raw":" 头域(headvex):指向弧"}],"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":18}},"range":[990,1008],"raw":"\n- 头域(headvex):指向弧"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"链域(hlink):指向弧头相同的下一条弧","loc":{"start":{"line":51,"column":2},"end":{"line":51,"column":23}},"range":[1011,1032],"raw":" 链域(hlink):指向弧头相同的下一条"}],"loc":{"start":{"line":51,"column":2},"end":{"line":51,"column":23}},"range":[1011,1032],"raw":" 链域(hlink):指向弧头相同的下一条"}],"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":23}},"range":[1009,1032],"raw":"\n- 链域(hlink):指向弧头相同的下一条"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"链域(tlink):指向弧尾相同的下一条弧","loc":{"start":{"line":52,"column":2},"end":{"line":52,"column":23}},"range":[1035,1056],"raw":" 链域(tlink):指向弧尾相同的下一条"}],"loc":{"start":{"line":52,"column":2},"end":{"line":52,"column":23}},"range":[1035,1056],"raw":" 链域(tlink):指向弧尾相同的下一条"}],"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":23}},"range":[1033,1056],"raw":"\n- 链域(tlink):指向弧尾相同的下一条"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"数据域(info):存储于弧相关的信息","loc":{"start":{"line":53,"column":2},"end":{"line":53,"column":21}},"range":[1059,1078],"raw":" 数据域(info):存储于弧相关的信"}],"loc":{"start":{"line":53,"column":2},"end":{"line":53,"column":21}},"range":[1059,1078],"raw":" 数据域(info):存储于弧相关的信"}],"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":21}},"range":[1057,1078],"raw":"\n- 数据域(info):存储于弧相关的信"}],"loc":{"start":{"line":49,"column":0},"end":{"line":53,"column":21}},"range":[971,1078],"raw":"\n- 尾域(tailvex):指向弧头\n- 头域(headvex):指向弧尾\n- 链域(hlink):指向弧头相同的下一条弧\n- 链域(tlink):指向弧尾相同的下一条弧\n- 数据域(info):存储于弧相关的信"},{"type":"Paragraph","children":[{"type":"Str","value":"弧头相同的弧在同一个链表上，弧尾相同的弧也在同一个链表上，头结点即为顶点结点。","loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":39}},"range":[1080,1119],"raw":"\n弧头相同的弧在同一个链表上，弧尾相同的弧也在同一个链表上，头结点即为顶点结点"}],"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":39}},"range":[1080,1119],"raw":"\n弧头相同的弧在同一个链表上，弧尾相同的弧也在同一个链表上，头结点即为顶点结点"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"顶点结点也有五个域","loc":{"start":{"line":57,"column":4},"end":{"line":57,"column":13}},"range":[1125,1134],"raw":" 顶点结点也有五个"}],"loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":13}},"range":[1121,1134],"raw":"\n### 顶点结点也有五个"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"数据域(data):存储与顶点相关的信息","loc":{"start":{"line":59,"column":2},"end":{"line":59,"column":22}},"range":[1138,1158],"raw":" 数据域(data):存储与顶点相关的信"}],"loc":{"start":{"line":59,"column":2},"end":{"line":59,"column":22}},"range":[1138,1158],"raw":" 数据域(data):存储与顶点相关的信"}],"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":22}},"range":[1136,1158],"raw":"\n- 数据域(data):存储与顶点相关的信"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"链域(firstin、firstout):分别指向以该顶点为弧头或弧尾的第一个弧结点","loc":{"start":{"line":60,"column":2},"end":{"line":60,"column":44}},"range":[1161,1203],"raw":" 链域(firstin、firstout):分别指向以该顶点为弧头或弧尾的第一个弧结"}],"loc":{"start":{"line":60,"column":2},"end":{"line":60,"column":44}},"range":[1161,1203],"raw":" 链域(firstin、firstout):分别指向以该顶点为弧头或弧尾的第一个弧结"}],"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":44}},"range":[1159,1203],"raw":"\n- 链域(firstin、firstout):分别指向以该顶点为弧头或弧尾的第一个弧结"}],"loc":{"start":{"line":59,"column":0},"end":{"line":60,"column":44}},"range":[1136,1203],"raw":"\n- 数据域(data):存储与顶点相关的信息\n- 链域(firstin、firstout):分别指向以该顶点为弧头或弧尾的第一个弧结"},{"type":"Paragraph","children":[{"type":"Str","value":"若将有向图的邻接矩阵视为稀疏矩阵的话，十字链表可以看作是邻接矩阵的链表式存储结构","loc":{"start":{"line":62,"column":0},"end":{"line":62,"column":40}},"range":[1205,1245],"raw":"\n若将有向图的邻接矩阵视为稀疏矩阵的话，十字链表可以看作是邻接矩阵的链表式存储结"}],"loc":{"start":{"line":62,"column":0},"end":{"line":62,"column":40}},"range":[1205,1245],"raw":"\n若将有向图的邻接矩阵视为稀疏矩阵的话，十字链表可以看作是邻接矩阵的链表式存储结"},{"type":"Paragraph","children":[{"type":"Str","value":"在十字链表中既容易找到以某个顶点为弧头的弧，也容易找到以某个顶点为弧尾的弧，所以采用十字链表存储图，容易求得顶点的度","loc":{"start":{"line":64,"column":0},"end":{"line":64,"column":58}},"range":[1247,1305],"raw":"\n在十字链表中既容易找到以某个顶点为弧头的弧，也容易找到以某个顶点为弧尾的弧，所以采用十字链表存储图，容易求得顶点的"}],"loc":{"start":{"line":64,"column":0},"end":{"line":64,"column":58}},"range":[1247,1305],"raw":"\n在十字链表中既容易找到以某个顶点为弧头的弧，也容易找到以某个顶点为弧尾的弧，所以采用十字链表存储图，容易求得顶点的"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"邻接多重表(Adjacency Multilist)","loc":{"start":{"line":66,"column":3},"end":{"line":66,"column":29}},"range":[1310,1336],"raw":" 邻接多重表(Adjacency Multilist"}],"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":29}},"range":[1307,1336],"raw":"\n## 邻接多重表(Adjacency Multilist"},{"type":"Paragraph","children":[{"type":"Str","value":"无向图的另一种链式存储结构，每一条边用一个结点表示，有如下的6个域：","loc":{"start":{"line":68,"column":0},"end":{"line":68,"column":34}},"range":[1338,1372],"raw":"\n无向图的另一种链式存储结构，每一条边用一个结点表示，有如下的6个域"}],"loc":{"start":{"line":68,"column":0},"end":{"line":68,"column":34}},"range":[1338,1372],"raw":"\n无向图的另一种链式存储结构，每一条边用一个结点表示，有如下的6个域"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/31/14VrKmQ8GNExTDY.png","alt":"PNG??.png","loc":{"start":{"line":70,"column":0},"end":{"line":70,"column":63}},"range":[1374,1437],"raw":"\n![PNG??.png](https://i.loli.net/2020/07/31/14VrKmQ8GNExTDY.png"}],"loc":{"start":{"line":70,"column":0},"end":{"line":70,"column":63}},"range":[1374,1437],"raw":"\n![PNG??.png](https://i.loli.net/2020/07/31/14VrKmQ8GNExTDY.png"},{"type":"Paragraph","children":[{"type":"Str","value":"从左到右依次为：","loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":8}},"range":[1439,1447],"raw":"\n从左到右依次为"}],"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":8}},"range":[1439,1447],"raw":"\n从左到右依次为"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"标志域：标记该边是否被搜索过","loc":{"start":{"line":74,"column":2},"end":{"line":74,"column":16}},"range":[1451,1465],"raw":" 标志域：标记该边是否被搜索"}],"loc":{"start":{"line":74,"column":2},"end":{"line":74,"column":16}},"range":[1451,1465],"raw":" 标志域：标记该边是否被搜索"}],"loc":{"start":{"line":74,"column":0},"end":{"line":74,"column":16}},"range":[1449,1465],"raw":"\n- 标志域：标记该边是否被搜索"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"ivex和jvex：该边依附的两个顶点在图中的位置","loc":{"start":{"line":75,"column":2},"end":{"line":75,"column":27}},"range":[1468,1493],"raw":" ivex和jvex：该边依附的两个顶点在图中的位"}],"loc":{"start":{"line":75,"column":2},"end":{"line":75,"column":27}},"range":[1468,1493],"raw":" ivex和jvex：该边依附的两个顶点在图中的位"}],"loc":{"start":{"line":75,"column":0},"end":{"line":75,"column":27}},"range":[1466,1493],"raw":"\n- ivex和jvex：该边依附的两个顶点在图中的位"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"ilink：指向下一条依附于ivex的边","loc":{"start":{"line":76,"column":2},"end":{"line":76,"column":22}},"range":[1496,1516],"raw":" ilink：指向下一条依附于ivex的"}],"loc":{"start":{"line":76,"column":2},"end":{"line":76,"column":22}},"range":[1496,1516],"raw":" ilink：指向下一条依附于ivex的"}],"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":22}},"range":[1494,1516],"raw":"\n- ilink：指向下一条依附于ivex的"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"jlink：指向下一条依附于jvex的边","loc":{"start":{"line":77,"column":2},"end":{"line":77,"column":22}},"range":[1519,1539],"raw":" jlink：指向下一条依附于jvex的"}],"loc":{"start":{"line":77,"column":2},"end":{"line":77,"column":22}},"range":[1519,1539],"raw":" jlink：指向下一条依附于jvex的"}],"loc":{"start":{"line":77,"column":0},"end":{"line":77,"column":22}},"range":[1517,1539],"raw":"\n- jlink：指向下一条依附于jvex的"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"info：指向和边有关的各种信息的指针域","loc":{"start":{"line":78,"column":2},"end":{"line":78,"column":22}},"range":[1542,1562],"raw":" info：指向和边有关的各种信息的指针"}],"loc":{"start":{"line":78,"column":2},"end":{"line":78,"column":22}},"range":[1542,1562],"raw":" info：指向和边有关的各种信息的指针"}],"loc":{"start":{"line":78,"column":0},"end":{"line":78,"column":22}},"range":[1540,1562],"raw":"\n- info：指向和边有关的各种信息的指针"}],"loc":{"start":{"line":74,"column":0},"end":{"line":78,"column":22}},"range":[1449,1562],"raw":"\n- 标志域：标记该边是否被搜索过\n- ivex和jvex：该边依附的两个顶点在图中的位置\n- ilink：指向下一条依附于ivex的边\n- jlink：指向下一条依附于jvex的边\n- info：指向和边有关的各种信息的指针"},{"type":"Paragraph","children":[{"type":"Str","value":"每一个顶点用一个结点表示，有如下的2个域：","loc":{"start":{"line":80,"column":0},"end":{"line":80,"column":21}},"range":[1564,1585],"raw":"\n每一个顶点用一个结点表示，有如下的2个域"}],"loc":{"start":{"line":80,"column":0},"end":{"line":80,"column":21}},"range":[1564,1585],"raw":"\n每一个顶点用一个结点表示，有如下的2个域"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/31/rhziJF1dEVNpAym.png","alt":"PNG??.png","loc":{"start":{"line":82,"column":0},"end":{"line":82,"column":63}},"range":[1587,1650],"raw":"\n![PNG??.png](https://i.loli.net/2020/07/31/rhziJF1dEVNpAym.png"}],"loc":{"start":{"line":82,"column":0},"end":{"line":82,"column":63}},"range":[1587,1650],"raw":"\n![PNG??.png](https://i.loli.net/2020/07/31/rhziJF1dEVNpAym.png"},{"type":"Paragraph","children":[{"type":"Str","value":"从左到右依次是：","loc":{"start":{"line":84,"column":0},"end":{"line":84,"column":8}},"range":[1652,1660],"raw":"\n从左到右依次是"}],"loc":{"start":{"line":84,"column":0},"end":{"line":84,"column":8}},"range":[1652,1660],"raw":"\n从左到右依次是"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"data域：存储与该顶点有关的信息","loc":{"start":{"line":86,"column":2},"end":{"line":86,"column":19}},"range":[1664,1681],"raw":" data域：存储与该顶点有关的信"}],"loc":{"start":{"line":86,"column":2},"end":{"line":86,"column":19}},"range":[1664,1681],"raw":" data域：存储与该顶点有关的信"}],"loc":{"start":{"line":86,"column":0},"end":{"line":86,"column":19}},"range":[1662,1681],"raw":"\n- data域：存储与该顶点有关的信"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"firstedge：指示第一条依附于该顶点的边","loc":{"start":{"line":87,"column":2},"end":{"line":87,"column":25}},"range":[1684,1707],"raw":" firstedge：指示第一条依附于该顶点的"}],"loc":{"start":{"line":87,"column":2},"end":{"line":87,"column":25}},"range":[1684,1707],"raw":" firstedge：指示第一条依附于该顶点的"}],"loc":{"start":{"line":87,"column":0},"end":{"line":87,"column":25}},"range":[1682,1707],"raw":"\n- firstedge：指示第一条依附于该顶点的"}],"loc":{"start":{"line":86,"column":0},"end":{"line":87,"column":25}},"range":[1662,1707],"raw":"\n- data域：存储与该顶点有关的信息\n- firstedge：指示第一条依附于该顶点的"}],"loc":{"start":{"line":1,"column":0},"end":{"line":88,"column":0}},"range":[0,1708],"raw":"﻿---\ntags: ['数据结构','图','邻接矩阵']\n---\n# 图的存储结构\n\n图的结构比较复杂，任意两个结点之间都可能存在联系，无法用数据元素在存储区的物理位置来表示其元素之间的关系。所以图没有顺序映像的存储结构，只有采用多重链表的链式映像结构。\n\n## 数组表示法\n\n用两个数组分别存储数据元素（顶点）的信息和数据元素之间的关系（边或弧）的信息。\n\n### 邻接矩阵\n\n以二维数组表示有n个顶点的图时，需要存放n个顶点的信息和  $n^{2}$  条边的信息的存储量。对于无向图，由于邻接矩阵关于对角线对称，可以压缩为只存储对角线上三角（或下三角）区域的元素。\n\n![PNG??.png](https://i.loli.net/2020/07/31/LoB6ucMYPXvfejg.png)\n\n通过邻接矩阵可以很方便地知道顶点之间是否有边（或弧）相连，并且很容易球的各个顶点的度。\n\n对于无向图，顶点 $v_{i}$ 的度是邻接矩阵中第i行（第i列）的元素之和，即：\n\n $TD(v_{i})=\\sum_{j=0}^{n-1}A[i][j]$ \n\n对于有向图，第i行的元素之和为顶点 $v_{i}$ 的出度 $OD(v_{i})$ ，第j列元素之和为顶点 $v_{j}$ 的入度 $ID(v_{j})$ 。\n\n网络的邻接矩阵可以定义为\n\n- 当< $v_{i},v_{j}$ > 或  $(v_{i}, v_{j})$   $\\in VR$ ：\n  \n   $A[i][j]=w_{i,j}$ \n- 反之：\n  \n   $A[i][j]=\\infty$ \n\n## 邻接表(Adjacency List)\n\n图的一种链式存储结构，对图中的每一个顶点建立一个单链表。\n\n每个单链表由三个域组成。分别是指示顶点 $v_{i}$ 邻接的点在途中的位置的邻接点域，指示下一条边或弧的节点的链域和存储数据、边或弧权值等信息的数据域。\n\n## 十字链表\n\n将有向图的邻接表和逆邻接表组合起来得到的一种链表，对于有向图的每一条弧，每个顶点都有一个结点与之对应，两种结点的结构如下图所示：\n\n![PNG??.png](https://i.loli.net/2020/07/31/OBpy3TzQkHNiVve.png)\n\n### 弧结点有五个域\n\n- 尾域(tailvex):指向弧头\n- 头域(headvex):指向弧尾\n- 链域(hlink):指向弧头相同的下一条弧\n- 链域(tlink):指向弧尾相同的下一条弧\n- 数据域(info):存储于弧相关的信息\n\n弧头相同的弧在同一个链表上，弧尾相同的弧也在同一个链表上，头结点即为顶点结点。\n\n### 顶点结点也有五个域\n\n- 数据域(data):存储与顶点相关的信息\n- 链域(firstin、firstout):分别指向以该顶点为弧头或弧尾的第一个弧结点\n\n若将有向图的邻接矩阵视为稀疏矩阵的话，十字链表可以看作是邻接矩阵的链表式存储结构\n\n在十字链表中既容易找到以某个顶点为弧头的弧，也容易找到以某个顶点为弧尾的弧，所以采用十字链表存储图，容易求得顶点的度\n\n## 邻接多重表(Adjacency Multilist)\n\n无向图的另一种链式存储结构，每一条边用一个结点表示，有如下的6个域：\n\n![PNG??.png](https://i.loli.net/2020/07/31/14VrKmQ8GNExTDY.png)\n\n从左到右依次为：\n\n- 标志域：标记该边是否被搜索过\n- ivex和jvex：该边依附的两个顶点在图中的位置\n- ilink：指向下一条依附于ivex的边\n- jlink：指向下一条依附于jvex的边\n- info：指向和边有关的各种信息的指针域\n\n每一个顶点用一个结点表示，有如下的2个域：\n\n![PNG??.png](https://i.loli.net/2020/07/31/rhziJF1dEVNpAym.png)\n\n从左到右依次是：\n\n- data域：存储与该顶点有关的信息\n- firstedge：指示第一条依附于该顶点的边"},"catalogue":{"title":"图的存储结构","json-path":"数据结构/2020-07-31-图的存储结构.json","mdate":"2020-07-31","cover":"https://i.328888.xyz/2023/01/01/tZuxv.jpeg","icon":"💊","visible":true,"tags":["数据结构","图","邻接矩阵"]}}