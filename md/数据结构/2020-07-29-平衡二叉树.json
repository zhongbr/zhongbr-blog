{"ast":{"type":"Document","children":[{"type":"Yaml","value":"tags: ['数据结构','树']","loc":{"start":{"line":1,"column":0},"end":{"line":3,"column":3}},"range":[0,26],"raw":"﻿---\ntags: ['数据结构','树']\n--","visible":false},{"type":"Header","depth":1,"children":[{"type":"Str","value":"平衡二叉树(AVL)","loc":{"start":{"line":5,"column":2},"end":{"line":5,"column":12}},"range":[30,40],"raw":" 平衡二叉树(AVL"}],"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":12}},"range":[28,40],"raw":"\n# 平衡二叉树(AVL"},{"type":"BlockQuote","children":[{"type":"Paragraph","children":[{"type":"Str","value":"平衡因子：左子树的高度 - 右子树的高度\n平衡二叉树：任意结点的平衡因子的绝对值都不超过1","loc":{"start":{"line":7,"column":2},"end":{"line":8,"column":26}},"range":[44,91],"raw":" 平衡因子：左子树的高度 - 右子树的高度\n> 平衡二叉树：任意结点的平衡因子的绝对值都不超过"}],"loc":{"start":{"line":7,"column":2},"end":{"line":8,"column":26}},"range":[44,91],"raw":" 平衡因子：左子树的高度 - 右子树的高度\n> 平衡二叉树：任意结点的平衡因子的绝对值都不超过"}],"loc":{"start":{"line":7,"column":0},"end":{"line":8,"column":26}},"range":[42,91],"raw":"\n> 平衡因子：左子树的高度 - 右子树的高度\n> 平衡二叉树：任意结点的平衡因子的绝对值都不超过"},{"type":"Paragraph","children":[{"type":"Str","value":"如何计算高度为h的","loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":9}},"range":[93,102],"raw":"\n如何计算高度为h"},{"type":"Strong","children":[{"type":"Str","value":"最小","loc":{"start":{"line":10,"column":11},"end":{"line":10,"column":13}},"range":[104,106],"raw":"*最"}],"loc":{"start":{"line":10,"column":9},"end":{"line":10,"column":15}},"range":[102,108],"raw":"的**最小*"},{"type":"Str","value":"平衡二叉树的结点数 ","loc":{"start":{"line":10,"column":15},"end":{"line":10,"column":25}},"range":[108,118],"raw":"*平衡二叉树的结点数"},{"type":"InlineMath","value":"N_{n}","data":{"hName":"span","hProperties":{"className":["math","math-inline"]},"hChildren":[{"type":"Str","value":"N_{n}"}]},"loc":{"start":{"line":10,"column":25},"end":{"line":10,"column":34}},"range":[118,127],"raw":" $$N_{n}$"},{"type":"Str","value":" ?","loc":{"start":{"line":10,"column":34},"end":{"line":10,"column":36}},"range":[127,129],"raw":"$ "}],"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}},"range":[93,129],"raw":"\n如何计算高度为h的**最小**平衡二叉树的结点数 $$N_{n}$$ "},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/29/NmzWMQSFaA4IcPy.png","alt":"PNG??.png","loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":63}},"range":[131,194],"raw":"\n![PNG??.png](https://i.loli.net/2020/07/29/NmzWMQSFaA4IcPy.png"}],"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":63}},"range":[131,194],"raw":"\n![PNG??.png](https://i.loli.net/2020/07/29/NmzWMQSFaA4IcPy.png"},{"type":"Paragraph","children":[{"type":"Str","value":"可以得到求最小平衡二叉树结点数的递推公式：","loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":21}},"range":[196,217],"raw":"\n可以得到求最小平衡二叉树结点数的递推公式"}],"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":21}},"range":[196,217],"raw":"\n可以得到求最小平衡二叉树结点数的递推公式"},{"type":"Math","meta":null,"value":"N_{h} = N_{h-1} + N_{h-2}","data":{"hName":"div","hProperties":{"className":["math","math-display"]},"hChildren":[{"type":"Str","value":"N_{h} = N_{h-1} + N_{h-2}"}]},"loc":{"start":{"line":15,"column":1},"end":{"line":17,"column":4}},"range":[219,253],"raw":" $$ \nN_{h} = N_{h-1} + N_{h-2}\n $$"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"平衡二叉树的判断","loc":{"start":{"line":19,"column":3},"end":{"line":19,"column":11}},"range":[258,266],"raw":" 平衡二叉树的判"}],"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":11}},"range":[255,266],"raw":"\n## 平衡二叉树的判"},{"type":"Paragraph","children":[{"type":"Str","value":"若根结点的左子树和右子树均为平衡二叉树且左右子树的高度差绝对值小于等于1.","loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}},"range":[268,305],"raw":"\n若根结点的左子树和右子树均为平衡二叉树且左右子树的高度差绝对值小于等于1"}],"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}},"range":[268,305],"raw":"\n若根结点的左子树和右子树均为平衡二叉树且左右子树的高度差绝对值小于等于1"},{"type":"Paragraph","children":[{"type":"Str","value":"后序遍历：","loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":5}},"range":[307,312],"raw":"\n后序遍历"}],"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":5}},"range":[307,312],"raw":"\n后序遍历"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"判断左子树是平衡二叉树","loc":{"start":{"line":25,"column":2},"end":{"line":25,"column":13}},"range":[316,327],"raw":" 判断左子树是平衡二叉"}],"loc":{"start":{"line":25,"column":2},"end":{"line":25,"column":13}},"range":[316,327],"raw":" 判断左子树是平衡二叉"}],"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":13}},"range":[314,327],"raw":"\n- 判断左子树是平衡二叉"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"判断右子树是平衡二叉树","loc":{"start":{"line":26,"column":2},"end":{"line":26,"column":13}},"range":[330,341],"raw":" 判断右子树是平衡二叉"}],"loc":{"start":{"line":26,"column":2},"end":{"line":26,"column":13}},"range":[330,341],"raw":" 判断右子树是平衡二叉"}],"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":13}},"range":[328,341],"raw":"\n- 判断右子树是平衡二叉"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"判断以该结点为根结点的二叉树是平衡二叉树","loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":22}},"range":[344,364],"raw":" 判断以该结点为根结点的二叉树是平衡二叉"}],"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":22}},"range":[344,364],"raw":" 判断以该结点为根结点的二叉树是平衡二叉"}],"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":22}},"range":[342,364],"raw":"\n- 判断以该结点为根结点的二叉树是平衡二叉"}],"loc":{"start":{"line":25,"column":0},"end":{"line":27,"column":22}},"range":[314,364],"raw":"\n- 判断左子树是平衡二叉树\n- 判断右子树是平衡二叉树\n- 判断以该结点为根结点的二叉树是平衡二叉"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"代码实现","loc":{"start":{"line":29,"column":4},"end":{"line":29,"column":8}},"range":[370,374],"raw":" 代码实"}],"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":8}},"range":[366,374],"raw":"\n### 代码实"},{"type":"CodeBlock","lang":"c","meta":null,"value":"#include \"math.h\"\n#define TRUE 1\n#define FALSE 0\n#define bool int\n\nvoid JudgeAVL(BiTree bt, bool *banlance, int *h){\n    int bl = 0, br = 0, hl = 0, hr = 0;\n    if(bt == NULL){\n        h = 0;\n        balance = TRUE;\n    }\n    else if(bt->lchild==NULL && bt->rchild==NULL){\n        h = 1;\n        balance = TRUE;\n    }\n    else{\n        JudgeAVL(bt, &bl, &hl);\n        JudgeAVL(bt, &br, &hr);\n        h = (hl > hr ? hl : hr) + 1;\n        balance = (abs(hl-hr) <= 1 && bl && br);\n    }\n}","loc":{"start":{"line":31,"column":0},"end":{"line":54,"column":3}},"range":[376,870],"raw":"\n```c\n#include \"math.h\"\n#define TRUE 1\n#define FALSE 0\n#define bool int\n\nvoid JudgeAVL(BiTree bt, bool *banlance, int *h){\n    int bl = 0, br = 0, hl = 0, hr = 0;\n    if(bt == NULL){\n        h = 0;\n        balance = TRUE;\n    }\n    else if(bt->lchild==NULL && bt->rchild==NULL){\n        h = 1;\n        balance = TRUE;\n    }\n    else{\n        JudgeAVL(bt, &bl, &hl);\n        JudgeAVL(bt, &br, &hr);\n        h = (hl > hr ? hl : hr) + 1;\n        balance = (abs(hl-hr) <= 1 && bl && br);\n    }\n}\n``"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"平衡二叉树的插入","loc":{"start":{"line":56,"column":3},"end":{"line":56,"column":11}},"range":[875,883],"raw":" 平衡二叉树的插"}],"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":11}},"range":[872,883],"raw":"\n## 平衡二叉树的插"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"先按照二叉排序树的插入方式进行插入","loc":{"start":{"line":58,"column":2},"end":{"line":58,"column":19}},"range":[887,904],"raw":" 先按照二叉排序树的插入方式进行插"}],"loc":{"start":{"line":58,"column":2},"end":{"line":58,"column":19}},"range":[887,904],"raw":" 先按照二叉排序树的插入方式进行插"}],"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":19}},"range":[885,904],"raw":"\n- 先按照二叉排序树的插入方式进行插"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"对插入后的结果进行调整，如果不是平衡二叉树就对其进行调整","loc":{"start":{"line":59,"column":2},"end":{"line":59,"column":30}},"range":[907,935],"raw":" 对插入后的结果进行调整，如果不是平衡二叉树就对其进行调"}],"loc":{"start":{"line":59,"column":2},"end":{"line":59,"column":30}},"range":[907,935],"raw":" 对插入后的结果进行调整，如果不是平衡二叉树就对其进行调"}],"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":30}},"range":[905,935],"raw":"\n- 对插入后的结果进行调整，如果不是平衡二叉树就对其进行调"}],"loc":{"start":{"line":58,"column":0},"end":{"line":59,"column":30}},"range":[885,935],"raw":"\n- 先按照二叉排序树的插入方式进行插入\n- 对插入后的结果进行调整，如果不是平衡二叉树就对其进行调"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"LL平衡旋转（右单旋转）","loc":{"start":{"line":61,"column":4},"end":{"line":61,"column":16}},"range":[941,953],"raw":" LL平衡旋转（右单旋转"}],"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":16}},"range":[937,953],"raw":"\n### LL平衡旋转（右单旋转"},{"type":"Paragraph","children":[{"type":"Str","value":"原因：在结点A的左孩子的左子树上插入了新结点导致不平衡\n调整方法：将A的左孩子B代替A，将A作为结点B的右子树，B的原右子树作为A的左子树。","loc":{"start":{"line":63,"column":0},"end":{"line":64,"column":42}},"range":[955,1025],"raw":"\n原因：在结点A的左孩子的左子树上插入了新结点导致不平衡\n调整方法：将A的左孩子B代替A，将A作为结点B的右子树，B的原右子树作为A的左子树"}],"loc":{"start":{"line":63,"column":0},"end":{"line":64,"column":42}},"range":[955,1025],"raw":"\n原因：在结点A的左孩子的左子树上插入了新结点导致不平衡\n调整方法：将A的左孩子B代替A，将A作为结点B的右子树，B的原右子树作为A的左子树"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/29/DMPLcaJIxVUgKEy.png","alt":"quicker_505b4b2f-da65-41dc-8670-ffc0941404f3.png","loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":102}},"range":[1027,1129],"raw":"\n![quicker_505b4b2f-da65-41dc-8670-ffc0941404f3.png](https://i.loli.net/2020/07/29/DMPLcaJIxVUgKEy.png"}],"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":102}},"range":[1027,1129],"raw":"\n![quicker_505b4b2f-da65-41dc-8670-ffc0941404f3.png](https://i.loli.net/2020/07/29/DMPLcaJIxVUgKEy.png"},{"type":"BlockQuote","children":[{"type":"Paragraph","children":[{"type":"Emphasis","children":[{"type":"Strong","children":[{"type":"Str","value":"eg.1 H为0时","loc":{"start":{"line":68,"column":5},"end":{"line":68,"column":14}},"range":[1136,1145],"raw":"*eg.1 H为0"}],"loc":{"start":{"line":68,"column":3},"end":{"line":68,"column":16}},"range":[1134,1147],"raw":"***eg.1 H为0时*"}],"loc":{"start":{"line":68,"column":2},"end":{"line":68,"column":17}},"range":[1133,1148],"raw":" ***eg.1 H为0时**"}],"loc":{"start":{"line":68,"column":2},"end":{"line":68,"column":17}},"range":[1133,1148],"raw":" ***eg.1 H为0时**"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/29/AaqSIPXZGmvjOiH.png","alt":"quicker_982e2659-14c2-4c9b-acde-c5a4f9cb94e3.png","loc":{"start":{"line":70,"column":2},"end":{"line":70,"column":104}},"range":[1153,1255],"raw":" ![quicker_982e2659-14c2-4c9b-acde-c5a4f9cb94e3.png](https://i.loli.net/2020/07/29/AaqSIPXZGmvjOiH.png"}],"loc":{"start":{"line":70,"column":2},"end":{"line":70,"column":104}},"range":[1153,1255],"raw":" ![quicker_982e2659-14c2-4c9b-acde-c5a4f9cb94e3.png](https://i.loli.net/2020/07/29/AaqSIPXZGmvjOiH.png"},{"type":"Paragraph","children":[{"type":"Emphasis","children":[{"type":"Strong","children":[{"type":"Str","value":"eg.2 一般情况","loc":{"start":{"line":72,"column":5},"end":{"line":72,"column":14}},"range":[1263,1272],"raw":"*eg.2 一般情"}],"loc":{"start":{"line":72,"column":3},"end":{"line":72,"column":16}},"range":[1261,1274],"raw":"***eg.2 一般情况*"}],"loc":{"start":{"line":72,"column":2},"end":{"line":72,"column":17}},"range":[1260,1275],"raw":" ***eg.2 一般情况**"}],"loc":{"start":{"line":72,"column":2},"end":{"line":72,"column":17}},"range":[1260,1275],"raw":" ***eg.2 一般情况**"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/29/aInKYyxCTUS8LHt.png","alt":"quicker_3ced414c-af4a-44ad-aa1c-a70da0f390d4.png","loc":{"start":{"line":74,"column":2},"end":{"line":74,"column":104}},"range":[1280,1382],"raw":" ![quicker_3ced414c-af4a-44ad-aa1c-a70da0f390d4.png](https://i.loli.net/2020/07/29/aInKYyxCTUS8LHt.png"}],"loc":{"start":{"line":74,"column":2},"end":{"line":74,"column":104}},"range":[1280,1382],"raw":" ![quicker_3ced414c-af4a-44ad-aa1c-a70da0f390d4.png](https://i.loli.net/2020/07/29/aInKYyxCTUS8LHt.png"}],"loc":{"start":{"line":68,"column":0},"end":{"line":74,"column":104}},"range":[1131,1382],"raw":"\n> ***eg.1 H为0时***\n>\n> ![quicker_982e2659-14c2-4c9b-acde-c5a4f9cb94e3.png](https://i.loli.net/2020/07/29/AaqSIPXZGmvjOiH.png)\n>\n> ***eg.2 一般情况***\n>\n> ![quicker_3ced414c-af4a-44ad-aa1c-a70da0f390d4.png](https://i.loli.net/2020/07/29/aInKYyxCTUS8LHt.png"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"RR平衡旋转（左单旋转）","loc":{"start":{"line":76,"column":4},"end":{"line":76,"column":16}},"range":[1388,1400],"raw":" RR平衡旋转（左单旋转"}],"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":16}},"range":[1384,1400],"raw":"\n### RR平衡旋转（左单旋转"},{"type":"Paragraph","children":[{"type":"Str","value":"原因：在结点A的右孩子的右子树上插入了新节点导致不平衡\n调整方法：将A的右孩子B代替A，将A作为结点B的左子树，B的原左子树作为A的右子树。","loc":{"start":{"line":78,"column":0},"end":{"line":79,"column":42}},"range":[1402,1472],"raw":"\n原因：在结点A的右孩子的右子树上插入了新节点导致不平衡\n调整方法：将A的右孩子B代替A，将A作为结点B的左子树，B的原左子树作为A的右子树"}],"loc":{"start":{"line":78,"column":0},"end":{"line":79,"column":42}},"range":[1402,1472],"raw":"\n原因：在结点A的右孩子的右子树上插入了新节点导致不平衡\n调整方法：将A的右孩子B代替A，将A作为结点B的左子树，B的原左子树作为A的右子树"},{"type":"Paragraph","children":[{"type":"Str","value":"与LL平衡旋转是对称的关系","loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":13}},"range":[1474,1487],"raw":"\n与LL平衡旋转是对称的关"}],"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":13}},"range":[1474,1487],"raw":"\n与LL平衡旋转是对称的关"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/29/kjBO4r81FYKxlMq.png","alt":"quicker_35a9fe00-064c-49f9-b290-68fde0a186af.png","loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":102}},"range":[1489,1591],"raw":"\n![quicker_35a9fe00-064c-49f9-b290-68fde0a186af.png](https://i.loli.net/2020/07/29/kjBO4r81FYKxlMq.png"}],"loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":102}},"range":[1489,1591],"raw":"\n![quicker_35a9fe00-064c-49f9-b290-68fde0a186af.png](https://i.loli.net/2020/07/29/kjBO4r81FYKxlMq.png"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"LR平衡旋转（先左后右双旋转）","loc":{"start":{"line":85,"column":3},"end":{"line":85,"column":18}},"range":[1596,1611],"raw":" LR平衡旋转（先左后右双旋转"}],"loc":{"start":{"line":85,"column":0},"end":{"line":85,"column":18}},"range":[1593,1611],"raw":"\n## LR平衡旋转（先左后右双旋转"},{"type":"Paragraph","children":[{"type":"Str","value":"原因：在结点A的左孩子的右子树上插入了新的结点导致不平衡\n调整方法：将A的左孩子B的右孩子C代替B，然后再将C向上代替A的位置。","loc":{"start":{"line":87,"column":0},"end":{"line":88,"column":35}},"range":[1613,1677],"raw":"\n原因：在结点A的左孩子的右子树上插入了新的结点导致不平衡\n调整方法：将A的左孩子B的右孩子C代替B，然后再将C向上代替A的位置"}],"loc":{"start":{"line":87,"column":0},"end":{"line":88,"column":35}},"range":[1613,1677],"raw":"\n原因：在结点A的左孩子的右子树上插入了新的结点导致不平衡\n调整方法：将A的左孩子B的右孩子C代替B，然后再将C向上代替A的位置"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/29/IZF7Ps9Bqk8XtMr.png","alt":"quicker_274d036a-1652-4db9-9d9c-ebbc9e62bcb7.png","loc":{"start":{"line":90,"column":0},"end":{"line":90,"column":102}},"range":[1679,1781],"raw":"\n![quicker_274d036a-1652-4db9-9d9c-ebbc9e62bcb7.png](https://i.loli.net/2020/07/29/IZF7Ps9Bqk8XtMr.png"}],"loc":{"start":{"line":90,"column":0},"end":{"line":90,"column":102}},"range":[1679,1781],"raw":"\n![quicker_274d036a-1652-4db9-9d9c-ebbc9e62bcb7.png](https://i.loli.net/2020/07/29/IZF7Ps9Bqk8XtMr.png"},{"type":"BlockQuote","children":[{"type":"Paragraph","children":[{"type":"Emphasis","children":[{"type":"Strong","children":[{"type":"Str","value":"eg.1 一般情况","loc":{"start":{"line":92,"column":5},"end":{"line":92,"column":14}},"range":[1788,1797],"raw":"*eg.1 一般情"}],"loc":{"start":{"line":92,"column":3},"end":{"line":92,"column":16}},"range":[1786,1799],"raw":"***eg.1 一般情况*"}],"loc":{"start":{"line":92,"column":2},"end":{"line":92,"column":17}},"range":[1785,1800],"raw":" ***eg.1 一般情况**"}],"loc":{"start":{"line":92,"column":2},"end":{"line":92,"column":17}},"range":[1785,1800],"raw":" ***eg.1 一般情况**"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/29/1wQOpxHvCVt79oI.png","alt":"quicker_bf869700-747c-4047-aabe-7c04d848460e.png","loc":{"start":{"line":94,"column":2},"end":{"line":94,"column":104}},"range":[1805,1907],"raw":" ![quicker_bf869700-747c-4047-aabe-7c04d848460e.png](https://i.loli.net/2020/07/29/1wQOpxHvCVt79oI.png"}],"loc":{"start":{"line":94,"column":2},"end":{"line":94,"column":104}},"range":[1805,1907],"raw":" ![quicker_bf869700-747c-4047-aabe-7c04d848460e.png](https://i.loli.net/2020/07/29/1wQOpxHvCVt79oI.png"}],"loc":{"start":{"line":92,"column":0},"end":{"line":94,"column":104}},"range":[1783,1907],"raw":"\n> ***eg.1 一般情况***\n>\n> ![quicker_bf869700-747c-4047-aabe-7c04d848460e.png](https://i.loli.net/2020/07/29/1wQOpxHvCVt79oI.png"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"RL平衡旋转（先右后左双旋转）","loc":{"start":{"line":96,"column":3},"end":{"line":96,"column":18}},"range":[1912,1927],"raw":" RL平衡旋转（先右后左双旋转"}],"loc":{"start":{"line":96,"column":0},"end":{"line":96,"column":18}},"range":[1909,1927],"raw":"\n## RL平衡旋转（先右后左双旋转"},{"type":"Paragraph","children":[{"type":"Str","value":"原因：在结点A的右孩子的左子树上插入了新的结点导致不平衡\n调整方法：将A的右孩子B的左孩子C代替B，然后将C向上替代A的位置。","loc":{"start":{"line":98,"column":0},"end":{"line":99,"column":34}},"range":[1929,1992],"raw":"\n原因：在结点A的右孩子的左子树上插入了新的结点导致不平衡\n调整方法：将A的右孩子B的左孩子C代替B，然后将C向上替代A的位置"}],"loc":{"start":{"line":98,"column":0},"end":{"line":99,"column":34}},"range":[1929,1992],"raw":"\n原因：在结点A的右孩子的左子树上插入了新的结点导致不平衡\n调整方法：将A的右孩子B的左孩子C代替B，然后将C向上替代A的位置"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/29/qUJHTsuBlmgM6zx.png","alt":"quicker_cd2f86fe-9323-465c-98d4-14188ce5ab4d.png","loc":{"start":{"line":101,"column":0},"end":{"line":101,"column":102}},"range":[1994,2096],"raw":"\n![quicker_cd2f86fe-9323-465c-98d4-14188ce5ab4d.png](https://i.loli.net/2020/07/29/qUJHTsuBlmgM6zx.png"}],"loc":{"start":{"line":101,"column":0},"end":{"line":101,"column":102}},"range":[1994,2096],"raw":"\n![quicker_cd2f86fe-9323-465c-98d4-14188ce5ab4d.png](https://i.loli.net/2020/07/29/qUJHTsuBlmgM6zx.png"}],"loc":{"start":{"line":1,"column":0},"end":{"line":102,"column":0}},"range":[0,2097],"raw":"﻿---\ntags: ['数据结构','树']\n---\n\n# 平衡二叉树(AVL)\n\n> 平衡因子：左子树的高度 - 右子树的高度\n> 平衡二叉树：任意结点的平衡因子的绝对值都不超过1\n\n如何计算高度为h的**最小**平衡二叉树的结点数 $$N_{n}$$ ?\n\n![PNG??.png](https://i.loli.net/2020/07/29/NmzWMQSFaA4IcPy.png)\n\n可以得到求最小平衡二叉树结点数的递推公式：\n $$ \nN_{h} = N_{h-1} + N_{h-2}\n $$ \n\n## 平衡二叉树的判断\n\n若根结点的左子树和右子树均为平衡二叉树且左右子树的高度差绝对值小于等于1.\n\n后序遍历：\n\n- 判断左子树是平衡二叉树\n- 判断右子树是平衡二叉树\n- 判断以该结点为根结点的二叉树是平衡二叉树\n\n### 代码实现\n\n```c\n#include \"math.h\"\n#define TRUE 1\n#define FALSE 0\n#define bool int\n\nvoid JudgeAVL(BiTree bt, bool *banlance, int *h){\n    int bl = 0, br = 0, hl = 0, hr = 0;\n    if(bt == NULL){\n        h = 0;\n        balance = TRUE;\n    }\n    else if(bt->lchild==NULL && bt->rchild==NULL){\n        h = 1;\n        balance = TRUE;\n    }\n    else{\n        JudgeAVL(bt, &bl, &hl);\n        JudgeAVL(bt, &br, &hr);\n        h = (hl > hr ? hl : hr) + 1;\n        balance = (abs(hl-hr) <= 1 && bl && br);\n    }\n}\n```\n\n## 平衡二叉树的插入\n\n- 先按照二叉排序树的插入方式进行插入\n- 对插入后的结果进行调整，如果不是平衡二叉树就对其进行调整\n\n### LL平衡旋转（右单旋转）\n\n原因：在结点A的左孩子的左子树上插入了新结点导致不平衡\n调整方法：将A的左孩子B代替A，将A作为结点B的右子树，B的原右子树作为A的左子树。\n\n![quicker_505b4b2f-da65-41dc-8670-ffc0941404f3.png](https://i.loli.net/2020/07/29/DMPLcaJIxVUgKEy.png)\n\n> ***eg.1 H为0时***\n>\n> ![quicker_982e2659-14c2-4c9b-acde-c5a4f9cb94e3.png](https://i.loli.net/2020/07/29/AaqSIPXZGmvjOiH.png)\n>\n> ***eg.2 一般情况***\n>\n> ![quicker_3ced414c-af4a-44ad-aa1c-a70da0f390d4.png](https://i.loli.net/2020/07/29/aInKYyxCTUS8LHt.png)\n\n### RR平衡旋转（左单旋转）\n\n原因：在结点A的右孩子的右子树上插入了新节点导致不平衡\n调整方法：将A的右孩子B代替A，将A作为结点B的左子树，B的原左子树作为A的右子树。\n\n与LL平衡旋转是对称的关系\n\n![quicker_35a9fe00-064c-49f9-b290-68fde0a186af.png](https://i.loli.net/2020/07/29/kjBO4r81FYKxlMq.png)\n\n## LR平衡旋转（先左后右双旋转）\n\n原因：在结点A的左孩子的右子树上插入了新的结点导致不平衡\n调整方法：将A的左孩子B的右孩子C代替B，然后再将C向上代替A的位置。\n\n![quicker_274d036a-1652-4db9-9d9c-ebbc9e62bcb7.png](https://i.loli.net/2020/07/29/IZF7Ps9Bqk8XtMr.png)\n\n> ***eg.1 一般情况***\n>\n> ![quicker_bf869700-747c-4047-aabe-7c04d848460e.png](https://i.loli.net/2020/07/29/1wQOpxHvCVt79oI.png)\n\n## RL平衡旋转（先右后左双旋转）\n\n原因：在结点A的右孩子的左子树上插入了新的结点导致不平衡\n调整方法：将A的右孩子B的左孩子C代替B，然后将C向上替代A的位置。\n\n![quicker_cd2f86fe-9323-465c-98d4-14188ce5ab4d.png](https://i.loli.net/2020/07/29/qUJHTsuBlmgM6zx.png)"},"catalogue":{"title":"平衡二叉树","json-path":"数据结构/2020-07-29-平衡二叉树.json","mdate":"2020-07-29","cover":"https://i.328888.xyz/2022/12/31/ndpoc.jpeg","icon":"🐻","visible":true,"tags":["数据结构","树"]}}