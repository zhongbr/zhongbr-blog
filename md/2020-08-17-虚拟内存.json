{"ast":{"type":"Document","children":[{"type":"Yaml","value":"title: '虚拟内存'\ntags: ['操作系统','虚拟内存']","loc":{"start":{"line":1,"column":0},"end":{"line":4,"column":3}},"range":[0,43],"raw":"---\ntitle: '虚拟内存'\ntags: ['操作系统','虚拟内存']\n---"},{"type":"Header","depth":1,"children":[{"type":"Str","value":"虚拟内存","loc":{"start":{"line":5,"column":2},"end":{"line":5,"column":6}},"range":[46,50],"raw":"虚拟内存"}],"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":6}},"range":[44,50],"raw":"# 虚拟内存"},{"type":"Paragraph","children":[{"type":"Str","value":"虚拟内存技术是一种实现内存扩充的技术。","loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":19}},"range":[52,71],"raw":"虚拟内存技术是一种实现内存扩充的技术。"},{"type":"Strong","children":[{"type":"Str","value":"比交换技术和覆盖技术更先进","loc":{"start":{"line":7,"column":21},"end":{"line":7,"column":34}},"range":[73,86],"raw":"比交换技术和覆盖技术更先进"}],"loc":{"start":{"line":7,"column":19},"end":{"line":7,"column":36}},"range":[71,88],"raw":"**比交换技术和覆盖技术更先进**"},{"type":"Str","value":"。","loc":{"start":{"line":7,"column":36},"end":{"line":7,"column":37}},"range":[88,89],"raw":"。"}],"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"range":[52,89],"raw":"虚拟内存技术是一种实现内存扩充的技术。**比交换技术和覆盖技术更先进**。"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"传统的存储管理方式的特征、缺点","loc":{"start":{"line":9,"column":3},"end":{"line":9,"column":18}},"range":[94,109],"raw":"传统的存储管理方式的特征、缺点"}],"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":18}},"range":[91,109],"raw":"## 传统的存储管理方式的特征、缺点"},{"type":"Paragraph","children":[{"type":"Str","value":"传统的存储管理方案：连续分配和非连续分配，很多长期用不到的数据也会占用内存，导致内存的利用率不高。","loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":49}},"range":[111,160],"raw":"传统的存储管理方案：连续分配和非连续分配，很多长期用不到的数据也会占用内存，导致内存的利用率不高。"}],"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":49}},"range":[111,160],"raw":"传统的存储管理方案：连续分配和非连续分配，很多长期用不到的数据也会占用内存，导致内存的利用率不高。"},{"type":"Paragraph","children":[{"type":"Strong","children":[{"type":"Str","value":"一次性","loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":5}},"range":[164,167],"raw":"一次性"}],"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":7}},"range":[162,169],"raw":"**一次性**"},{"type":"Str","value":"：作业必须一次性全部装入内存后才能开始运行：","loc":{"start":{"line":13,"column":7},"end":{"line":13,"column":29}},"range":[169,191],"raw":"：作业必须一次性全部装入内存后才能开始运行："}],"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":29}},"range":[162,191],"raw":"**一次性**：作业必须一次性全部装入内存后才能开始运行："},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"作业很大的时候，不能全部装入内存，导致大作业无法运行。","loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":29}},"range":[195,222],"raw":"作业很大的时候，不能全部装入内存，导致大作业无法运行。"}],"loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":29}},"range":[195,222],"raw":"作业很大的时候，不能全部装入内存，导致大作业无法运行。"}],"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":29}},"range":[193,222],"raw":"- 作业很大的时候，不能全部装入内存，导致大作业无法运行。"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"当大量的作业要求运行的时候，只有少量的作业可以运行，降低系统的并发度。","loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":37}},"range":[225,260],"raw":"当大量的作业要求运行的时候，只有少量的作业可以运行，降低系统的并发度。"}],"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":37}},"range":[225,260],"raw":"当大量的作业要求运行的时候，只有少量的作业可以运行，降低系统的并发度。"}],"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":37}},"range":[223,260],"raw":"- 当大量的作业要求运行的时候，只有少量的作业可以运行，降低系统的并发度。"}],"loc":{"start":{"line":15,"column":0},"end":{"line":16,"column":37}},"range":[193,260],"raw":"- 作业很大的时候，不能全部装入内存，导致大作业无法运行。\n- 当大量的作业要求运行的时候，只有少量的作业可以运行，降低系统的并发度。"},{"type":"Paragraph","children":[{"type":"Strong","children":[{"type":"Str","value":"驻留性","loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":5}},"range":[264,267],"raw":"驻留性"}],"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":7}},"range":[262,269],"raw":"**驻留性**"},{"type":"Str","value":"：一旦作业被装入内存，就会一直驻留在内存中，直至作业运行结束。事实上，在一个时间段内，只需要访问作业的一小部分数据就可以正常运行，导致了内存中主流了大量的、暂时用不到的数据，浪费了宝贵的内存资源。","loc":{"start":{"line":18,"column":7},"end":{"line":18,"column":105}},"range":[269,367],"raw":"：一旦作业被装入内存，就会一直驻留在内存中，直至作业运行结束。事实上，在一个时间段内，只需要访问作业的一小部分数据就可以正常运行，导致了内存中主流了大量的、暂时用不到的数据，浪费了宝贵的内存资源。"}],"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":105}},"range":[262,367],"raw":"**驻留性**：一旦作业被装入内存，就会一直驻留在内存中，直至作业运行结束。事实上，在一个时间段内，只需要访问作业的一小部分数据就可以正常运行，导致了内存中主流了大量的、暂时用不到的数据，浪费了宝贵的内存资源。"},{"type":"HorizontalRule","loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":4}},"range":[369,373],"raw":"****"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"高速缓冲技术","loc":{"start":{"line":22,"column":3},"end":{"line":22,"column":9}},"range":[378,384],"raw":"高速缓冲技术"}],"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":9}},"range":[375,384],"raw":"## 高速缓冲技术"},{"type":"BlockQuote","children":[{"type":"Paragraph","children":[{"type":"Str","value":"局部性原理：有","loc":{"start":{"line":24,"column":2},"end":{"line":24,"column":9}},"range":[388,395],"raw":"局部性原理：有"},{"type":"Strong","children":[{"type":"Str","value":"时间局部性和空间局部性","loc":{"start":{"line":24,"column":11},"end":{"line":24,"column":22}},"range":[397,408],"raw":"时间局部性和空间局部性"}],"loc":{"start":{"line":24,"column":9},"end":{"line":24,"column":24}},"range":[395,410],"raw":"**时间局部性和空间局部性**"}],"loc":{"start":{"line":24,"column":2},"end":{"line":24,"column":24}},"range":[388,410],"raw":"局部性原理：有**时间局部性和空间局部性**"},{"type":"Paragraph","children":[{"type":"Str","value":"计算机的存储结构（由下到上","loc":{"start":{"line":26,"column":2},"end":{"line":26,"column":15}},"range":[415,428],"raw":"计算机的存储结构（由下到上"},{"type":"Strong","children":[{"type":"Str","value":"容量递减、速度递增","loc":{"start":{"line":26,"column":17},"end":{"line":26,"column":26}},"range":[430,439],"raw":"容量递减、速度递增"}],"loc":{"start":{"line":26,"column":15},"end":{"line":26,"column":28}},"range":[428,441],"raw":"**容量递减、速度递增**"},{"type":"Str","value":"）：","loc":{"start":{"line":26,"column":28},"end":{"line":26,"column":30}},"range":[441,443],"raw":"）："}],"loc":{"start":{"line":26,"column":2},"end":{"line":26,"column":30}},"range":[415,443],"raw":"计算机的存储结构（由下到上**容量递减、速度递增**）："},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"寄存器","loc":{"start":{"line":28,"column":4},"end":{"line":28,"column":7}},"range":[450,453],"raw":"寄存器"}],"loc":{"start":{"line":28,"column":4},"end":{"line":28,"column":7}},"range":[450,453],"raw":"寄存器"}],"loc":{"start":{"line":28,"column":2},"end":{"line":28,"column":7}},"range":[448,453],"raw":"- 寄存器"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"高速缓冲","loc":{"start":{"line":29,"column":4},"end":{"line":29,"column":8}},"range":[458,462],"raw":"高速缓冲"}],"loc":{"start":{"line":29,"column":4},"end":{"line":29,"column":8}},"range":[458,462],"raw":"高速缓冲"}],"loc":{"start":{"line":29,"column":2},"end":{"line":29,"column":8}},"range":[456,462],"raw":"- 高速缓冲"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"内存","loc":{"start":{"line":30,"column":4},"end":{"line":30,"column":6}},"range":[467,469],"raw":"内存"}],"loc":{"start":{"line":30,"column":4},"end":{"line":30,"column":6}},"range":[467,469],"raw":"内存"}],"loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":6}},"range":[465,469],"raw":"- 内存"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"外存（磁盘、磁带）","loc":{"start":{"line":31,"column":4},"end":{"line":31,"column":13}},"range":[474,483],"raw":"外存（磁盘、磁带）"}],"loc":{"start":{"line":31,"column":4},"end":{"line":31,"column":13}},"range":[474,483],"raw":"外存（磁盘、磁带）"}],"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":13}},"range":[472,483],"raw":"- 外存（磁盘、磁带）"}],"loc":{"start":{"line":28,"column":2},"end":{"line":31,"column":13}},"range":[448,483],"raw":"- 寄存器\n> - 高速缓冲\n> - 内存\n> - 外存（磁盘、磁带）"}],"loc":{"start":{"line":24,"column":0},"end":{"line":31,"column":13}},"range":[386,483],"raw":"> 局部性原理：有**时间局部性和空间局部性**\n>\n> 计算机的存储结构（由下到上**容量递减、速度递增**）：\n>\n> - 寄存器\n> - 高速缓冲\n> - 内存\n> - 外存（磁盘、磁带）"},{"type":"Paragraph","children":[{"type":"Str","value":"高速缓冲技术的思想：将","loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":11}},"range":[485,496],"raw":"高速缓冲技术的思想：将"},{"type":"Strong","children":[{"type":"Str","value":"近期会频繁访问","loc":{"start":{"line":33,"column":13},"end":{"line":33,"column":20}},"range":[498,505],"raw":"近期会频繁访问"}],"loc":{"start":{"line":33,"column":11},"end":{"line":33,"column":22}},"range":[496,507],"raw":"**近期会频繁访问**"},{"type":"Str","value":"的数据放到高速的存储器中，","loc":{"start":{"line":33,"column":22},"end":{"line":33,"column":35}},"range":[507,520],"raw":"的数据放到高速的存储器中，"},{"type":"Strong","children":[{"type":"Str","value":"暂时用不到的数据","loc":{"start":{"line":33,"column":37},"end":{"line":33,"column":45}},"range":[522,530],"raw":"暂时用不到的数据"}],"loc":{"start":{"line":33,"column":35},"end":{"line":33,"column":47}},"range":[520,532],"raw":"**暂时用不到的数据**"},{"type":"Str","value":"放在更低速的存储器中。","loc":{"start":{"line":33,"column":47},"end":{"line":33,"column":58}},"range":[532,543],"raw":"放在更低速的存储器中。"}],"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":58}},"range":[485,543],"raw":"高速缓冲技术的思想：将**近期会频繁访问**的数据放到高速的存储器中，**暂时用不到的数据**放在更低速的存储器中。"},{"type":"HorizontalRule","loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":5}},"range":[545,550],"raw":"*****"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"虚拟内存技术","loc":{"start":{"line":37,"column":3},"end":{"line":37,"column":9}},"range":[555,561],"raw":"虚拟内存技术"}],"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":9}},"range":[552,561],"raw":"## 虚拟内存技术"},{"type":"Paragraph","children":[{"type":"Str","value":"虚拟内存：在操作系统的管理下，在用户看来，似乎有一个比实际内存大得多的内存，这就是虚拟内存。","loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":46}},"range":[563,609],"raw":"虚拟内存：在操作系统的管理下，在用户看来，似乎有一个比实际内存大得多的内存，这就是虚拟内存。"}],"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":46}},"range":[563,609],"raw":"虚拟内存：在操作系统的管理下，在用户看来，似乎有一个比实际内存大得多的内存，这就是虚拟内存。"},{"type":"Paragraph","children":[{"type":"Str","value":"基于局部性原理，在程序装入内存时，可以将程序中很快会用到的部分装入内存，暂时用不到的部分驻留在外存，就可以让程序开始执行。","loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":61}},"range":[611,672],"raw":"基于局部性原理，在程序装入内存时，可以将程序中很快会用到的部分装入内存，暂时用不到的部分驻留在外存，就可以让程序开始执行。"}],"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":61}},"range":[611,672],"raw":"基于局部性原理，在程序装入内存时，可以将程序中很快会用到的部分装入内存，暂时用不到的部分驻留在外存，就可以让程序开始执行。"},{"type":"Paragraph","children":[{"type":"Str","value":"在程序执行的过程中，当访问的信息不在内存是，由","loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":23}},"range":[674,697],"raw":"在程序执行的过程中，当访问的信息不在内存是，由"},{"type":"Strong","children":[{"type":"Str","value":"操作系统负责将所需要的信息从外存调入内存","loc":{"start":{"line":43,"column":25},"end":{"line":43,"column":45}},"range":[699,719],"raw":"操作系统负责将所需要的信息从外存调入内存"}],"loc":{"start":{"line":43,"column":23},"end":{"line":43,"column":47}},"range":[697,721],"raw":"**操作系统负责将所需要的信息从外存调入内存**"},{"type":"Str","value":"，然后继续执行程序。","loc":{"start":{"line":43,"column":47},"end":{"line":43,"column":57}},"range":[721,731],"raw":"，然后继续执行程序。"}],"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":57}},"range":[674,731],"raw":"在程序执行的过程中，当访问的信息不在内存是，由**操作系统负责将所需要的信息从外存调入内存**，然后继续执行程序。"},{"type":"Paragraph","children":[{"type":"Str","value":"当内存的容量不足是，由","loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":11}},"range":[733,744],"raw":"当内存的容量不足是，由"},{"type":"Strong","children":[{"type":"Str","value":"操作系统负责将内存中暂时用不到的数据换出到外存","loc":{"start":{"line":45,"column":13},"end":{"line":45,"column":36}},"range":[746,769],"raw":"操作系统负责将内存中暂时用不到的数据换出到外存"}],"loc":{"start":{"line":45,"column":11},"end":{"line":45,"column":38}},"range":[744,771],"raw":"**操作系统负责将内存中暂时用不到的数据换出到外存**"},{"type":"Str","value":"中。","loc":{"start":{"line":45,"column":38},"end":{"line":45,"column":40}},"range":[771,773],"raw":"中。"}],"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":40}},"range":[733,773],"raw":"当内存的容量不足是，由**操作系统负责将内存中暂时用不到的数据换出到外存**中。"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"虚拟内存的容量问题","loc":{"start":{"line":47,"column":4},"end":{"line":47,"column":13}},"range":[779,788],"raw":"虚拟内存的容量问题"}],"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":13}},"range":[775,788],"raw":"### 虚拟内存的容量问题"},{"type":"List","ordered":false,"start":null,"spread":true,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"虚拟内存的","loc":{"start":{"line":49,"column":2},"end":{"line":49,"column":7}},"range":[792,797],"raw":"虚拟内存的"},{"type":"Strong","children":[{"type":"Str","value":"最大容量是由计算机的地址结构（CPU的寻址范围）确定","loc":{"start":{"line":49,"column":9},"end":{"line":49,"column":35}},"range":[799,825],"raw":"最大容量是由计算机的地址结构（CPU的寻址范围）确定"}],"loc":{"start":{"line":49,"column":7},"end":{"line":49,"column":37}},"range":[797,827],"raw":"**最大容量是由计算机的地址结构（CPU的寻址范围）确定**"},{"type":"Str","value":"的","loc":{"start":{"line":49,"column":37},"end":{"line":49,"column":38}},"range":[827,828],"raw":"的"}],"loc":{"start":{"line":49,"column":2},"end":{"line":49,"column":38}},"range":[792,828],"raw":"虚拟内存的**最大容量是由计算机的地址结构（CPU的寻址范围）确定**的"}],"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":38}},"range":[790,828],"raw":"- 虚拟内存的**最大容量是由计算机的地址结构（CPU的寻址范围）确定**的"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"虚拟内存的实际容量 = min(内存和外存的实际容量之和，CPU的寻址范围)","loc":{"start":{"line":51,"column":2},"end":{"line":51,"column":40}},"range":[832,870],"raw":"虚拟内存的实际容量 = min(内存和外存的实际容量之和，CPU的寻址范围)"}],"loc":{"start":{"line":51,"column":2},"end":{"line":51,"column":40}},"range":[832,870],"raw":"虚拟内存的实际容量 = min(内存和外存的实际容量之和，CPU的寻址范围)"}],"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":40}},"range":[830,870],"raw":"- 虚拟内存的实际容量 = min(内存和外存的实际容量之和，CPU的寻址范围)"}],"loc":{"start":{"line":49,"column":0},"end":{"line":51,"column":40}},"range":[790,870],"raw":"- 虚拟内存的**最大容量是由计算机的地址结构（CPU的寻址范围）确定**的\n\n- 虚拟内存的实际容量 = min(内存和外存的实际容量之和，CPU的寻址范围)"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"虚拟内存的特征","loc":{"start":{"line":53,"column":4},"end":{"line":53,"column":11}},"range":[876,883],"raw":"虚拟内存的特征"}],"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":11}},"range":[872,883],"raw":"### 虚拟内存的特征"},{"type":"List","ordered":true,"start":1,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"多次性：无需在作业运行时一次性全部装入内存，而是允许多次调入内存","loc":{"start":{"line":55,"column":3},"end":{"line":55,"column":35}},"range":[888,920],"raw":"多次性：无需在作业运行时一次性全部装入内存，而是允许多次调入内存"}],"loc":{"start":{"line":55,"column":3},"end":{"line":55,"column":35}},"range":[888,920],"raw":"多次性：无需在作业运行时一次性全部装入内存，而是允许多次调入内存"}],"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":35}},"range":[885,920],"raw":"1. 多次性：无需在作业运行时一次性全部装入内存，而是允许多次调入内存"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"对换性：在作业运行时无需一直常驻内存，允许在作业运行的时候，将作业换、换出","loc":{"start":{"line":56,"column":3},"end":{"line":56,"column":40}},"range":[924,961],"raw":"对换性：在作业运行时无需一直常驻内存，允许在作业运行的时候，将作业换、换出"}],"loc":{"start":{"line":56,"column":3},"end":{"line":56,"column":40}},"range":[924,961],"raw":"对换性：在作业运行时无需一直常驻内存，允许在作业运行的时候，将作业换、换出"}],"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":40}},"range":[921,961],"raw":"2. 对换性：在作业运行时无需一直常驻内存，允许在作业运行的时候，将作业换、换出"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"虚拟性：从逻辑上扩充了内存的容量，使用户实际看到的内存容量远大于内存的实际容量","loc":{"start":{"line":57,"column":3},"end":{"line":57,"column":42}},"range":[965,1004],"raw":"虚拟性：从逻辑上扩充了内存的容量，使用户实际看到的内存容量远大于内存的实际容量"}],"loc":{"start":{"line":57,"column":3},"end":{"line":57,"column":42}},"range":[965,1004],"raw":"虚拟性：从逻辑上扩充了内存的容量，使用户实际看到的内存容量远大于内存的实际容量"}],"loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":42}},"range":[962,1004],"raw":"3. 虚拟性：从逻辑上扩充了内存的容量，使用户实际看到的内存容量远大于内存的实际容量"}],"loc":{"start":{"line":55,"column":0},"end":{"line":57,"column":42}},"range":[885,1004],"raw":"1. 多次性：无需在作业运行时一次性全部装入内存，而是允许多次调入内存\n2. 对换性：在作业运行时无需一直常驻内存，允许在作业运行的时候，将作业换、换出\n3. 虚拟性：从逻辑上扩充了内存的容量，使用户实际看到的内存容量远大于内存的实际容量"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"虚拟内存技术的实现","loc":{"start":{"line":59,"column":4},"end":{"line":59,"column":13}},"range":[1010,1019],"raw":"虚拟内存技术的实现"}],"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":13}},"range":[1006,1019],"raw":"### 虚拟内存技术的实现"},{"type":"Paragraph","children":[{"type":"Str","value":"虚拟内存技术需要建立在","loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":11}},"range":[1021,1032],"raw":"虚拟内存技术需要建立在"},{"type":"Strong","children":[{"type":"Str","value":"离散分配","loc":{"start":{"line":61,"column":13},"end":{"line":61,"column":17}},"range":[1034,1038],"raw":"离散分配"}],"loc":{"start":{"line":61,"column":11},"end":{"line":61,"column":19}},"range":[1032,1040],"raw":"**离散分配**"},{"type":"Str","value":"的内存管理方式基础上。","loc":{"start":{"line":61,"column":19},"end":{"line":61,"column":30}},"range":[1040,1051],"raw":"的内存管理方式基础上。"}],"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":30}},"range":[1021,1051],"raw":"虚拟内存技术需要建立在**离散分配**的内存管理方式基础上。"},{"type":"Paragraph","children":[{"type":"Str","value":"传统的非连续分配存储管理（使用虚拟内存后）：","loc":{"start":{"line":63,"column":0},"end":{"line":63,"column":22}},"range":[1053,1075],"raw":"传统的非连续分配存储管理（使用虚拟内存后）："}],"loc":{"start":{"line":63,"column":0},"end":{"line":63,"column":22}},"range":[1053,1075],"raw":"传统的非连续分配存储管理（使用虚拟内存后）："},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"基本分页存储管理（请求分页存储管理）","loc":{"start":{"line":65,"column":2},"end":{"line":65,"column":20}},"range":[1079,1097],"raw":"基本分页存储管理（请求分页存储管理）"}],"loc":{"start":{"line":65,"column":2},"end":{"line":65,"column":20}},"range":[1079,1097],"raw":"基本分页存储管理（请求分页存储管理）"}],"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":20}},"range":[1077,1097],"raw":"- 基本分页存储管理（请求分页存储管理）"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"基本分段存储管理（请求分段存储管理）","loc":{"start":{"line":66,"column":2},"end":{"line":66,"column":20}},"range":[1100,1118],"raw":"基本分段存储管理（请求分段存储管理）"}],"loc":{"start":{"line":66,"column":2},"end":{"line":66,"column":20}},"range":[1100,1118],"raw":"基本分段存储管理（请求分段存储管理）"}],"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":20}},"range":[1098,1118],"raw":"- 基本分段存储管理（请求分段存储管理）"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"基本段页式存储管理（请求段页式存储管理）","loc":{"start":{"line":67,"column":2},"end":{"line":67,"column":22}},"range":[1121,1141],"raw":"基本段页式存储管理（请求段页式存储管理）"}],"loc":{"start":{"line":67,"column":2},"end":{"line":67,"column":22}},"range":[1121,1141],"raw":"基本段页式存储管理（请求段页式存储管理）"}],"loc":{"start":{"line":67,"column":0},"end":{"line":67,"column":22}},"range":[1119,1141],"raw":"- 基本段页式存储管理（请求段页式存储管理）"}],"loc":{"start":{"line":65,"column":0},"end":{"line":67,"column":22}},"range":[1077,1141],"raw":"- 基本分页存储管理（请求分页存储管理）\n- 基本分段存储管理（请求分段存储管理）\n- 基本段页式存储管理（请求段页式存储管理）"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"操作系统需要为内存中信息的调入和调出提供两个新的功能","loc":{"start":{"line":69,"column":5},"end":{"line":69,"column":31}},"range":[1148,1174],"raw":"操作系统需要为内存中信息的调入和调出提供两个新的功能"}],"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":31}},"range":[1143,1174],"raw":"#### 操作系统需要为内存中信息的调入和调出提供两个新的功能"},{"type":"List","ordered":true,"start":1,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"请求调页（请求调段）：将要访问的不在内存中的信息调入内存","loc":{"start":{"line":71,"column":3},"end":{"line":71,"column":31}},"range":[1179,1207],"raw":"请求调页（请求调段）：将要访问的不在内存中的信息调入内存"}],"loc":{"start":{"line":71,"column":3},"end":{"line":71,"column":31}},"range":[1179,1207],"raw":"请求调页（请求调段）：将要访问的不在内存中的信息调入内存"}],"loc":{"start":{"line":71,"column":0},"end":{"line":71,"column":31}},"range":[1176,1207],"raw":"1. 请求调页（请求调段）：将要访问的不在内存中的信息调入内存"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"页面置换（段置换）：将内存中暂时用不到的信息置换到外存","loc":{"start":{"line":72,"column":3},"end":{"line":72,"column":30}},"range":[1211,1238],"raw":"页面置换（段置换）：将内存中暂时用不到的信息置换到外存"}],"loc":{"start":{"line":72,"column":3},"end":{"line":72,"column":30}},"range":[1211,1238],"raw":"页面置换（段置换）：将内存中暂时用不到的信息置换到外存"}],"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":30}},"range":[1208,1238],"raw":"2. 页面置换（段置换）：将内存中暂时用不到的信息置换到外存"}],"loc":{"start":{"line":71,"column":0},"end":{"line":72,"column":30}},"range":[1176,1238],"raw":"1. 请求调页（请求调段）：将要访问的不在内存中的信息调入内存\n2. 页面置换（段置换）：将内存中暂时用不到的信息置换到外存"}],"loc":{"start":{"line":1,"column":0},"end":{"line":72,"column":30}},"range":[0,1238],"raw":"---\ntitle: '虚拟内存'\ntags: ['操作系统','虚拟内存']\n---\n# 虚拟内存\n\n虚拟内存技术是一种实现内存扩充的技术。**比交换技术和覆盖技术更先进**。\n\n## 传统的存储管理方式的特征、缺点\n\n传统的存储管理方案：连续分配和非连续分配，很多长期用不到的数据也会占用内存，导致内存的利用率不高。\n\n**一次性**：作业必须一次性全部装入内存后才能开始运行：\n\n- 作业很大的时候，不能全部装入内存，导致大作业无法运行。\n- 当大量的作业要求运行的时候，只有少量的作业可以运行，降低系统的并发度。\n\n**驻留性**：一旦作业被装入内存，就会一直驻留在内存中，直至作业运行结束。事实上，在一个时间段内，只需要访问作业的一小部分数据就可以正常运行，导致了内存中主流了大量的、暂时用不到的数据，浪费了宝贵的内存资源。\n\n****\n\n## 高速缓冲技术\n\n> 局部性原理：有**时间局部性和空间局部性**\n>\n> 计算机的存储结构（由下到上**容量递减、速度递增**）：\n>\n> - 寄存器\n> - 高速缓冲\n> - 内存\n> - 外存（磁盘、磁带）\n\n高速缓冲技术的思想：将**近期会频繁访问**的数据放到高速的存储器中，**暂时用不到的数据**放在更低速的存储器中。\n\n*****\n\n## 虚拟内存技术\n\n虚拟内存：在操作系统的管理下，在用户看来，似乎有一个比实际内存大得多的内存，这就是虚拟内存。\n\n基于局部性原理，在程序装入内存时，可以将程序中很快会用到的部分装入内存，暂时用不到的部分驻留在外存，就可以让程序开始执行。\n\n在程序执行的过程中，当访问的信息不在内存是，由**操作系统负责将所需要的信息从外存调入内存**，然后继续执行程序。\n\n当内存的容量不足是，由**操作系统负责将内存中暂时用不到的数据换出到外存**中。\n\n### 虚拟内存的容量问题\n\n- 虚拟内存的**最大容量是由计算机的地址结构（CPU的寻址范围）确定**的\n\n- 虚拟内存的实际容量 = min(内存和外存的实际容量之和，CPU的寻址范围)\n\n### 虚拟内存的特征\n\n1. 多次性：无需在作业运行时一次性全部装入内存，而是允许多次调入内存\n2. 对换性：在作业运行时无需一直常驻内存，允许在作业运行的时候，将作业换、换出\n3. 虚拟性：从逻辑上扩充了内存的容量，使用户实际看到的内存容量远大于内存的实际容量\n\n### 虚拟内存技术的实现\n\n虚拟内存技术需要建立在**离散分配**的内存管理方式基础上。\n\n传统的非连续分配存储管理（使用虚拟内存后）：\n\n- 基本分页存储管理（请求分页存储管理）\n- 基本分段存储管理（请求分段存储管理）\n- 基本段页式存储管理（请求段页式存储管理）\n\n#### 操作系统需要为内存中信息的调入和调出提供两个新的功能\n\n1. 请求调页（请求调段）：将要访问的不在内存中的信息调入内存\n2. 页面置换（段置换）：将内存中暂时用不到的信息置换到外存"},"catalogue":{"title":"虚拟内存","json-path":"2020-08-17-虚拟内存.json","mdate":"2022-08-30T14:19:31.455Z","tags":["操作系统","虚拟内存"]}}