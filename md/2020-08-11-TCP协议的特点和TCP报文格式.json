{"ast":{"type":"Document","children":[{"type":"Yaml","value":"title: 'TCP协议'\ntags: ['计算机网路','传输层','TCP']","loc":{"start":{"line":1,"column":0},"end":{"line":4,"column":3}},"range":[0,50],"raw":"---\ntitle: 'TCP协议'\ntags: ['计算机网路','传输层','TCP']\n---"},{"type":"Header","depth":1,"children":[{"type":"Str","value":"TCP协议的特点和TCP报文格式","loc":{"start":{"line":5,"column":2},"end":{"line":5,"column":18}},"range":[53,69],"raw":"TCP协议的特点和TCP报文格式"}],"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":18}},"range":[51,69],"raw":"# TCP协议的特点和TCP报文格式"},{"type":"HorizontalRule","loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":5}},"range":[71,76],"raw":"*****"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"特点","loc":{"start":{"line":9,"column":3},"end":{"line":9,"column":5}},"range":[81,83],"raw":"特点"}],"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":5}},"range":[78,83],"raw":"## 特点"},{"type":"List","ordered":true,"start":1,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"面向连接（虚连接）的传输层协议","loc":{"start":{"line":11,"column":3},"end":{"line":11,"column":18}},"range":[88,103],"raw":"面向连接（虚连接）的传输层协议"}],"loc":{"start":{"line":11,"column":3},"end":{"line":11,"column":18}},"range":[88,103],"raw":"面向连接（虚连接）的传输层协议"}],"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":18}},"range":[85,103],"raw":"1. 面向连接（虚连接）的传输层协议"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"每一条TCP连接只能是点对点的","loc":{"start":{"line":12,"column":3},"end":{"line":12,"column":18}},"range":[107,122],"raw":"每一条TCP连接只能是点对点的"}],"loc":{"start":{"line":12,"column":3},"end":{"line":12,"column":18}},"range":[107,122],"raw":"每一条TCP连接只能是点对点的"}],"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":18}},"range":[104,122],"raw":"2. 每一条TCP连接只能是点对点的"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"TCP可以提供可靠的交付服务，无差错，不丢失、不重复、按照顺序到达","loc":{"start":{"line":13,"column":3},"end":{"line":13,"column":36}},"range":[126,159],"raw":"TCP可以提供可靠的交付服务，无差错，不丢失、不重复、按照顺序到达"}],"loc":{"start":{"line":13,"column":3},"end":{"line":13,"column":36}},"range":[126,159],"raw":"TCP可以提供可靠的交付服务，无差错，不丢失、不重复、按照顺序到达"}],"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}},"range":[123,159],"raw":"3. TCP可以提供可靠的交付服务，无差错，不丢失、不重复、按照顺序到达"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"可以提供全双工通信","loc":{"start":{"line":14,"column":3},"end":{"line":14,"column":12}},"range":[163,172],"raw":"可以提供全双工通信"}],"loc":{"start":{"line":14,"column":3},"end":{"line":14,"column":12}},"range":[163,172],"raw":"可以提供全双工通信"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"发送缓存：准备发送的数据 & 已发送但尚未收到确认的数据 的队列","loc":{"start":{"line":15,"column":5},"end":{"line":15,"column":37}},"range":[178,210],"raw":"发送缓存：准备发送的数据 & 已发送但尚未收到确认的数据 的队列"}],"loc":{"start":{"line":15,"column":5},"end":{"line":15,"column":37}},"range":[178,210],"raw":"发送缓存：准备发送的数据 & 已发送但尚未收到确认的数据 的队列"}],"loc":{"start":{"line":15,"column":3},"end":{"line":15,"column":37}},"range":[176,210],"raw":"- 发送缓存：准备发送的数据 & 已发送但尚未收到确认的数据 的队列"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"接收缓存：按序到达但未被接收应用程序读取的数据 & 不按序到达的数据","loc":{"start":{"line":16,"column":5},"end":{"line":16,"column":39}},"range":[216,250],"raw":"接收缓存：按序到达但未被接收应用程序读取的数据 & 不按序到达的数据"}],"loc":{"start":{"line":16,"column":5},"end":{"line":16,"column":39}},"range":[216,250],"raw":"接收缓存：按序到达但未被接收应用程序读取的数据 & 不按序到达的数据"}],"loc":{"start":{"line":16,"column":3},"end":{"line":16,"column":39}},"range":[214,250],"raw":"- 接收缓存：按序到达但未被接收应用程序读取的数据 & 不按序到达的数据"}],"loc":{"start":{"line":15,"column":3},"end":{"line":16,"column":39}},"range":[176,250],"raw":"- 发送缓存：准备发送的数据 & 已发送但尚未收到确认的数据 的队列\n   - 接收缓存：按序到达但未被接收应用程序读取的数据 & 不按序到达的数据"}],"loc":{"start":{"line":14,"column":0},"end":{"line":16,"column":39}},"range":[160,250],"raw":"4. 可以提供全双工通信\n   - 发送缓存：准备发送的数据 & 已发送但尚未收到确认的数据 的队列\n   - 接收缓存：按序到达但未被接收应用程序读取的数据 & 不按序到达的数据"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"面向字节流：TCP把应用程序交下来的数据仅仅看成是一连串无结构的字节流","loc":{"start":{"line":17,"column":3},"end":{"line":17,"column":38}},"range":[254,289],"raw":"面向字节流：TCP把应用程序交下来的数据仅仅看成是一连串无结构的字节流"}],"loc":{"start":{"line":17,"column":3},"end":{"line":17,"column":38}},"range":[254,289],"raw":"面向字节流：TCP把应用程序交下来的数据仅仅看成是一连串无结构的字节流"}],"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":38}},"range":[251,289],"raw":"5. 面向字节流：TCP把应用程序交下来的数据仅仅看成是一连串无结构的字节流"}],"loc":{"start":{"line":11,"column":0},"end":{"line":17,"column":38}},"range":[85,289],"raw":"1. 面向连接（虚连接）的传输层协议\n2. 每一条TCP连接只能是点对点的\n3. TCP可以提供可靠的交付服务，无差错，不丢失、不重复、按照顺序到达\n4. 可以提供全双工通信\n   - 发送缓存：准备发送的数据 & 已发送但尚未收到确认的数据 的队列\n   - 接收缓存：按序到达但未被接收应用程序读取的数据 & 不按序到达的数据\n5. 面向字节流：TCP把应用程序交下来的数据仅仅看成是一连串无结构的字节流"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"RTT估计方法","loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":11}},"range":[295,302],"raw":"RTT估计方法"}],"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":11}},"range":[291,302],"raw":"### RTT估计方法"},{"type":"Paragraph","children":[{"type":"Str","value":"$新估计RTT=(1-\\alpha) * (旧RTT) + \\alpha*新RTT样本$","loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":44}},"range":[304,348],"raw":"$新估计RTT=(1-\\alpha) * (旧RTT) + \\alpha*新RTT样本$"}],"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":44}},"range":[304,348],"raw":"$新估计RTT=(1-\\alpha) * (旧RTT) + \\alpha*新RTT样本$"},{"type":"HorizontalRule","loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":5}},"range":[350,355],"raw":"*****"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"首部格式","loc":{"start":{"line":25,"column":3},"end":{"line":25,"column":7}},"range":[360,364],"raw":"首部格式"}],"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":7}},"range":[357,364],"raw":"## 首部格式"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/08/11/YzRPSbdorQX2fsy.png","alt":"截屏 2020-08-11 下午4.11.16.png","loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":81}},"range":[366,447],"raw":"![截屏 2020-08-11 下午4.11.16.png](https://i.loli.net/2020/08/11/YzRPSbdorQX2fsy.png)"}],"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":81}},"range":[366,447],"raw":"![截屏 2020-08-11 下午4.11.16.png](https://i.loli.net/2020/08/11/YzRPSbdorQX2fsy.png)"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"源端口、目的端口：一个占用两个字节","loc":{"start":{"line":29,"column":2},"end":{"line":29,"column":19}},"range":[451,468],"raw":"源端口、目的端口：一个占用两个字节"}],"loc":{"start":{"line":29,"column":2},"end":{"line":29,"column":19}},"range":[451,468],"raw":"源端口、目的端口：一个占用两个字节"}],"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":19}},"range":[449,468],"raw":"- 源端口、目的端口：一个占用两个字节"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"序号：在一个TCP连接中，传送的字节流中的每一个字节都按照顺序编号，本字段表示本报文段所发送的数据的第一个字节的序号。","loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":61}},"range":[471,530],"raw":"序号：在一个TCP连接中，传送的字节流中的每一个字节都按照顺序编号，本字段表示本报文段所发送的数据的第一个字节的序号。"}],"loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":61}},"range":[471,530],"raw":"序号：在一个TCP连接中，传送的字节流中的每一个字节都按照顺序编号，本字段表示本报文段所发送的数据的第一个字节的序号。"}],"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":61}},"range":[469,530],"raw":"- 序号：在一个TCP连接中，传送的字节流中的每一个字节都按照顺序编号，本字段表示本报文段所发送的数据的第一个字节的序号。"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"确认号：期望收到对方下一个报文段的第一个数据字节的序号。若确认号为N，证明到序号N-1为止的数据都已经正确接收。","loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":58}},"range":[533,589],"raw":"确认号：期望收到对方下一个报文段的第一个数据字节的序号。若确认号为N，证明到序号N-1为止的数据都已经正确接收。"}],"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":58}},"range":[533,589],"raw":"确认号：期望收到对方下一个报文段的第一个数据字节的序号。若确认号为N，证明到序号N-1为止的数据都已经正确接收。"}],"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":58}},"range":[531,589],"raw":"- 确认号：期望收到对方下一个报文段的第一个数据字节的序号。若确认号为N，证明到序号N-1为止的数据都已经正确接收。"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"数据便宜（首部长度）：TCP报文段的数据起始处距离TCP报文段的起始处有多远，以4字节为单位，即1个数为4字节。","loc":{"start":{"line":32,"column":2},"end":{"line":32,"column":58}},"range":[592,648],"raw":"数据便宜（首部长度）：TCP报文段的数据起始处距离TCP报文段的起始处有多远，以4字节为单位，即1个数为4字节。"}],"loc":{"start":{"line":32,"column":2},"end":{"line":32,"column":58}},"range":[592,648],"raw":"数据便宜（首部长度）：TCP报文段的数据起始处距离TCP报文段的起始处有多远，以4字节为单位，即1个数为4字节。"}],"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":58}},"range":[590,648],"raw":"- 数据便宜（首部长度）：TCP报文段的数据起始处距离TCP报文段的起始处有多远，以4字节为单位，即1个数为4字节。"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"控制位：","loc":{"start":{"line":33,"column":2},"end":{"line":33,"column":6}},"range":[651,655],"raw":"控制位："}],"loc":{"start":{"line":33,"column":2},"end":{"line":33,"column":6}},"range":[651,655],"raw":"控制位："},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"URG紧急位：URG=1时，表明此报文段有紧急数据，是高优先级的数据，应该尽快传送，不用在缓存里排队，配合紧急指针字段使用","loc":{"start":{"line":34,"column":4},"end":{"line":34,"column":65}},"range":[660,721],"raw":"URG紧急位：URG=1时，表明此报文段有紧急数据，是高优先级的数据，应该尽快传送，不用在缓存里排队，配合紧急指针字段使用"}],"loc":{"start":{"line":34,"column":4},"end":{"line":34,"column":65}},"range":[660,721],"raw":"URG紧急位：URG=1时，表明此报文段有紧急数据，是高优先级的数据，应该尽快传送，不用在缓存里排队，配合紧急指针字段使用"}],"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":65}},"range":[658,721],"raw":"- URG紧急位：URG=1时，表明此报文段有紧急数据，是高优先级的数据，应该尽快传送，不用在缓存里排队，配合紧急指针字段使用"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"ACK确认位：ACK=1时确认号有效，在连接建立后所有的传送都必须把ACK置位1","loc":{"start":{"line":35,"column":4},"end":{"line":35,"column":44}},"range":[726,766],"raw":"ACK确认位：ACK=1时确认号有效，在连接建立后所有的传送都必须把ACK置位1"}],"loc":{"start":{"line":35,"column":4},"end":{"line":35,"column":44}},"range":[726,766],"raw":"ACK确认位：ACK=1时确认号有效，在连接建立后所有的传送都必须把ACK置位1"}],"loc":{"start":{"line":35,"column":2},"end":{"line":35,"column":44}},"range":[724,766],"raw":"- ACK确认位：ACK=1时确认号有效，在连接建立后所有的传送都必须把ACK置位1"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"PSH推送位：PSH=1时接收方应该尽快交付给接收应用进程，不再等到缓存填满再向上交付","loc":{"start":{"line":36,"column":4},"end":{"line":36,"column":47}},"range":[771,814],"raw":"PSH推送位：PSH=1时接收方应该尽快交付给接收应用进程，不再等到缓存填满再向上交付"}],"loc":{"start":{"line":36,"column":4},"end":{"line":36,"column":47}},"range":[771,814],"raw":"PSH推送位：PSH=1时接收方应该尽快交付给接收应用进程，不再等到缓存填满再向上交付"}],"loc":{"start":{"line":36,"column":2},"end":{"line":36,"column":47}},"range":[769,814],"raw":"- PSH推送位：PSH=1时接收方应该尽快交付给接收应用进程，不再等到缓存填满再向上交付"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"RST复位：RST=1时表明TCP连接中出现严重的差错，必须释放连接，然后重新建立传输连接","loc":{"start":{"line":37,"column":4},"end":{"line":37,"column":49}},"range":[819,864],"raw":"RST复位：RST=1时表明TCP连接中出现严重的差错，必须释放连接，然后重新建立传输连接"}],"loc":{"start":{"line":37,"column":4},"end":{"line":37,"column":49}},"range":[819,864],"raw":"RST复位：RST=1时表明TCP连接中出现严重的差错，必须释放连接，然后重新建立传输连接"}],"loc":{"start":{"line":37,"column":2},"end":{"line":37,"column":49}},"range":[817,864],"raw":"- RST复位：RST=1时表明TCP连接中出现严重的差错，必须释放连接，然后重新建立传输连接"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"SYN同步位：SYN=1时，表明是一个连接请求/连接接受报文","loc":{"start":{"line":38,"column":4},"end":{"line":38,"column":34}},"range":[869,899],"raw":"SYN同步位：SYN=1时，表明是一个连接请求/连接接受报文"}],"loc":{"start":{"line":38,"column":4},"end":{"line":38,"column":34}},"range":[869,899],"raw":"SYN同步位：SYN=1时，表明是一个连接请求/连接接受报文"}],"loc":{"start":{"line":38,"column":2},"end":{"line":38,"column":34}},"range":[867,899],"raw":"- SYN同步位：SYN=1时，表明是一个连接请求/连接接受报文"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"FIN终止位：FIN=1时，表明此报文段发送方的数据已经发送完，要求释放连接","loc":{"start":{"line":39,"column":4},"end":{"line":39,"column":42}},"range":[904,942],"raw":"FIN终止位：FIN=1时，表明此报文段发送方的数据已经发送完，要求释放连接"}],"loc":{"start":{"line":39,"column":4},"end":{"line":39,"column":42}},"range":[904,942],"raw":"FIN终止位：FIN=1时，表明此报文段发送方的数据已经发送完，要求释放连接"}],"loc":{"start":{"line":39,"column":2},"end":{"line":39,"column":42}},"range":[902,942],"raw":"- FIN终止位：FIN=1时，表明此报文段发送方的数据已经发送完，要求释放连接"}],"loc":{"start":{"line":34,"column":2},"end":{"line":39,"column":42}},"range":[658,942],"raw":"- URG紧急位：URG=1时，表明此报文段有紧急数据，是高优先级的数据，应该尽快传送，不用在缓存里排队，配合紧急指针字段使用\n  - ACK确认位：ACK=1时确认号有效，在连接建立后所有的传送都必须把ACK置位1\n  - PSH推送位：PSH=1时接收方应该尽快交付给接收应用进程，不再等到缓存填满再向上交付\n  - RST复位：RST=1时表明TCP连接中出现严重的差错，必须释放连接，然后重新建立传输连接\n  - SYN同步位：SYN=1时，表明是一个连接请求/连接接受报文\n  - FIN终止位：FIN=1时，表明此报文段发送方的数据已经发送完，要求释放连接"}],"loc":{"start":{"line":33,"column":0},"end":{"line":39,"column":42}},"range":[649,942],"raw":"- 控制位：\n  - URG紧急位：URG=1时，表明此报文段有紧急数据，是高优先级的数据，应该尽快传送，不用在缓存里排队，配合紧急指针字段使用\n  - ACK确认位：ACK=1时确认号有效，在连接建立后所有的传送都必须把ACK置位1\n  - PSH推送位：PSH=1时接收方应该尽快交付给接收应用进程，不再等到缓存填满再向上交付\n  - RST复位：RST=1时表明TCP连接中出现严重的差错，必须释放连接，然后重新建立传输连接\n  - SYN同步位：SYN=1时，表明是一个连接请求/连接接受报文\n  - FIN终止位：FIN=1时，表明此报文段发送方的数据已经发送完，要求释放连接"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"窗口：指的是发送本报文段的一方的接收窗口（自己的接收窗口），即现在允许接收的数据量","loc":{"start":{"line":40,"column":2},"end":{"line":40,"column":43}},"range":[945,986],"raw":"窗口：指的是发送本报文段的一方的接收窗口（自己的接收窗口），即现在允许接收的数据量"}],"loc":{"start":{"line":40,"column":2},"end":{"line":40,"column":43}},"range":[945,986],"raw":"窗口：指的是发送本报文段的一方的接收窗口（自己的接收窗口），即现在允许接收的数据量"}],"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":43}},"range":[943,986],"raw":"- 窗口：指的是发送本报文段的一方的接收窗口（自己的接收窗口），即现在允许接收的数据量"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"检验和：检验首部+数据部分，检验时要加上12B的伪首部，第四个字段为6","loc":{"start":{"line":41,"column":2},"end":{"line":41,"column":37}},"range":[989,1024],"raw":"检验和：检验首部+数据部分，检验时要加上12B的伪首部，第四个字段为6"}],"loc":{"start":{"line":41,"column":2},"end":{"line":41,"column":37}},"range":[989,1024],"raw":"检验和：检验首部+数据部分，检验时要加上12B的伪首部，第四个字段为6"}],"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":37}},"range":[987,1024],"raw":"- 检验和：检验首部+数据部分，检验时要加上12B的伪首部，第四个字段为6"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"紧急指针：URG紧急位=1时才有意义，指出本报文段中紧急数据的字节数，从数据部分开始位到紧急指针的位是紧急数据，剩下的数据是普通数据。","loc":{"start":{"line":42,"column":2},"end":{"line":42,"column":69}},"range":[1027,1094],"raw":"紧急指针：URG紧急位=1时才有意义，指出本报文段中紧急数据的字节数，从数据部分开始位到紧急指针的位是紧急数据，剩下的数据是普通数据。"}],"loc":{"start":{"line":42,"column":2},"end":{"line":42,"column":69}},"range":[1027,1094],"raw":"紧急指针：URG紧急位=1时才有意义，指出本报文段中紧急数据的字节数，从数据部分开始位到紧急指针的位是紧急数据，剩下的数据是普通数据。"}],"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":69}},"range":[1025,1094],"raw":"- 紧急指针：URG紧急位=1时才有意义，指出本报文段中紧急数据的字节数，从数据部分开始位到紧急指针的位是紧急数据，剩下的数据是普通数据。"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"选项：最大报文段长度MSS、窗口扩大、时间戳、选择确认等","loc":{"start":{"line":43,"column":2},"end":{"line":43,"column":30}},"range":[1097,1125],"raw":"选项：最大报文段长度MSS、窗口扩大、时间戳、选择确认等"}],"loc":{"start":{"line":43,"column":2},"end":{"line":43,"column":30}},"range":[1097,1125],"raw":"选项：最大报文段长度MSS、窗口扩大、时间戳、选择确认等"}],"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":30}},"range":[1095,1125],"raw":"- 选项：最大报文段长度MSS、窗口扩大、时间戳、选择确认等"}],"loc":{"start":{"line":29,"column":0},"end":{"line":43,"column":30}},"range":[449,1125],"raw":"- 源端口、目的端口：一个占用两个字节\n- 序号：在一个TCP连接中，传送的字节流中的每一个字节都按照顺序编号，本字段表示本报文段所发送的数据的第一个字节的序号。\n- 确认号：期望收到对方下一个报文段的第一个数据字节的序号。若确认号为N，证明到序号N-1为止的数据都已经正确接收。\n- 数据便宜（首部长度）：TCP报文段的数据起始处距离TCP报文段的起始处有多远，以4字节为单位，即1个数为4字节。\n- 控制位：\n  - URG紧急位：URG=1时，表明此报文段有紧急数据，是高优先级的数据，应该尽快传送，不用在缓存里排队，配合紧急指针字段使用\n  - ACK确认位：ACK=1时确认号有效，在连接建立后所有的传送都必须把ACK置位1\n  - PSH推送位：PSH=1时接收方应该尽快交付给接收应用进程，不再等到缓存填满再向上交付\n  - RST复位：RST=1时表明TCP连接中出现严重的差错，必须释放连接，然后重新建立传输连接\n  - SYN同步位：SYN=1时，表明是一个连接请求/连接接受报文\n  - FIN终止位：FIN=1时，表明此报文段发送方的数据已经发送完，要求释放连接\n- 窗口：指的是发送本报文段的一方的接收窗口（自己的接收窗口），即现在允许接收的数据量\n- 检验和：检验首部+数据部分，检验时要加上12B的伪首部，第四个字段为6\n- 紧急指针：URG紧急位=1时才有意义，指出本报文段中紧急数据的字节数，从数据部分开始位到紧急指针的位是紧急数据，剩下的数据是普通数据。\n- 选项：最大报文段长度MSS、窗口扩大、时间戳、选择确认等"},{"type":"HorizontalRule","loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":5}},"range":[1127,1132],"raw":"*****"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"TCP连接管理","loc":{"start":{"line":47,"column":3},"end":{"line":47,"column":10}},"range":[1137,1144],"raw":"TCP连接管理"}],"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":10}},"range":[1134,1144],"raw":"## TCP连接管理"},{"type":"Paragraph","children":[{"type":"Str","value":"TCP建立连接的三个阶段：","loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":13}},"range":[1146,1159],"raw":"TCP建立连接的三个阶段："}],"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":13}},"range":[1146,1159],"raw":"TCP建立连接的三个阶段："},{"type":"Header","depth":3,"children":[{"type":"Str","value":"连接建立","loc":{"start":{"line":51,"column":4},"end":{"line":51,"column":8}},"range":[1165,1169],"raw":"连接建立"}],"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":8}},"range":[1161,1169],"raw":"### 连接建立"},{"type":"Paragraph","children":[{"type":"Str","value":"TCP连接的建立采用客户服务器方式，主动发起连接的应用进程叫做客户端，被动等待连接的应用进程叫做服务器。","loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":52}},"range":[1171,1223],"raw":"TCP连接的建立采用客户服务器方式，主动发起连接的应用进程叫做客户端，被动等待连接的应用进程叫做服务器。"}],"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":52}},"range":[1171,1223],"raw":"TCP连接的建立采用客户服务器方式，主动发起连接的应用进程叫做客户端，被动等待连接的应用进程叫做服务器。"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/08/11/H2YG8nSjok7PZs5.png","alt":"截屏 2020-08-11 下午5.08.44.png","loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":81}},"range":[1225,1306],"raw":"![截屏 2020-08-11 下午5.08.44.png](https://i.loli.net/2020/08/11/H2YG8nSjok7PZs5.png)"}],"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":81}},"range":[1225,1306],"raw":"![截屏 2020-08-11 下午5.08.44.png](https://i.loli.net/2020/08/11/H2YG8nSjok7PZs5.png)"},{"type":"List","ordered":true,"start":1,"spread":true,"children":[{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"客户端发送连接请求报文段，无应用层数据","loc":{"start":{"line":57,"column":3},"end":{"line":57,"column":22}},"range":[1311,1330],"raw":"客户端发送连接请求报文段，无应用层数据"}],"loc":{"start":{"line":57,"column":3},"end":{"line":57,"column":22}},"range":[1311,1330],"raw":"客户端发送连接请求报文段，无应用层数据"},{"type":"Paragraph","children":[{"type":"Str","value":"SYN = 1, 序号seq = x[随机]","loc":{"start":{"line":59,"column":3},"end":{"line":59,"column":25}},"range":[1335,1357],"raw":"SYN = 1, 序号seq = x[随机]"}],"loc":{"start":{"line":59,"column":3},"end":{"line":59,"column":25}},"range":[1335,1357],"raw":"SYN = 1, 序号seq = x[随机]"}],"loc":{"start":{"line":57,"column":0},"end":{"line":59,"column":25}},"range":[1308,1357],"raw":"1. 客户端发送连接请求报文段，无应用层数据\n\n   SYN = 1, 序号seq = x[随机]"},{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"服务器端为该TCP连接分配缓存和变量，并向客户端回复确认报文段，允许连接，无应用层数据。","loc":{"start":{"line":61,"column":3},"end":{"line":61,"column":47}},"range":[1362,1406],"raw":"服务器端为该TCP连接分配缓存和变量，并向客户端回复确认报文段，允许连接，无应用层数据。"}],"loc":{"start":{"line":61,"column":3},"end":{"line":61,"column":47}},"range":[1362,1406],"raw":"服务器端为该TCP连接分配缓存和变量，并向客户端回复确认报文段，允许连接，无应用层数据。"},{"type":"Paragraph","children":[{"type":"Str","value":"SYN = 1, ACK=1, seq=y[随机], ack=x+1","loc":{"start":{"line":63,"column":3},"end":{"line":63,"column":37}},"range":[1411,1445],"raw":"SYN = 1, ACK=1, seq=y[随机], ack=x+1"}],"loc":{"start":{"line":63,"column":3},"end":{"line":63,"column":37}},"range":[1411,1445],"raw":"SYN = 1, ACK=1, seq=y[随机], ack=x+1"}],"loc":{"start":{"line":61,"column":0},"end":{"line":63,"column":37}},"range":[1359,1445],"raw":"2. 服务器端为该TCP连接分配缓存和变量，并向客户端回复确认报文段，允许连接，无应用层数据。\n\n   SYN = 1, ACK=1, seq=y[随机], ack=x+1"},{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"客户端为该TCP连接分配缓存和变量，并向服务器端回复确认的确认，可以携带数据。","loc":{"start":{"line":65,"column":3},"end":{"line":65,"column":42}},"range":[1450,1489],"raw":"客户端为该TCP连接分配缓存和变量，并向服务器端回复确认的确认，可以携带数据。"}],"loc":{"start":{"line":65,"column":3},"end":{"line":65,"column":42}},"range":[1450,1489],"raw":"客户端为该TCP连接分配缓存和变量，并向服务器端回复确认的确认，可以携带数据。"},{"type":"Paragraph","children":[{"type":"Str","value":"ACK = 1, seq=x+1, ack=y+1","loc":{"start":{"line":67,"column":3},"end":{"line":67,"column":28}},"range":[1494,1519],"raw":"ACK = 1, seq=x+1, ack=y+1"}],"loc":{"start":{"line":67,"column":3},"end":{"line":67,"column":28}},"range":[1494,1519],"raw":"ACK = 1, seq=x+1, ack=y+1"}],"loc":{"start":{"line":65,"column":0},"end":{"line":67,"column":28}},"range":[1447,1519],"raw":"3. 客户端为该TCP连接分配缓存和变量，并向服务器端回复确认的确认，可以携带数据。\n\n   ACK = 1, seq=x+1, ack=y+1"}],"loc":{"start":{"line":57,"column":0},"end":{"line":67,"column":28}},"range":[1308,1519],"raw":"1. 客户端发送连接请求报文段，无应用层数据\n\n   SYN = 1, 序号seq = x[随机]\n\n2. 服务器端为该TCP连接分配缓存和变量，并向客户端回复确认报文段，允许连接，无应用层数据。\n\n   SYN = 1, ACK=1, seq=y[随机], ack=x+1\n\n3. 客户端为该TCP连接分配缓存和变量，并向服务器端回复确认的确认，可以携带数据。\n\n   ACK = 1, seq=x+1, ack=y+1"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"SYN洪泛攻击","loc":{"start":{"line":69,"column":5},"end":{"line":69,"column":12}},"range":[1526,1533],"raw":"SYN洪泛攻击"}],"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":12}},"range":[1521,1533],"raw":"#### SYN洪泛攻击"},{"type":"Paragraph","children":[{"type":"Str","value":"SYN洪泛攻击发生在OSI第四层,这种方式利用TCP协议的特性,就是三次握手。攻击者发送TCP SYN,SYN是TCP三次握手中的","loc":{"start":{"line":71,"column":0},"end":{"line":71,"column":65}},"range":[1535,1600],"raw":"SYN洪泛攻击发生在OSI第四层,这种方式利用TCP协议的特性,就是三次握手。攻击者发送TCP SYN,SYN是TCP三次握手中的"},{"type":"Strong","children":[{"type":"Str","value":"第一个数据包","loc":{"start":{"line":71,"column":67},"end":{"line":71,"column":73}},"range":[1602,1608],"raw":"第一个数据包"}],"loc":{"start":{"line":71,"column":65},"end":{"line":71,"column":75}},"range":[1600,1610],"raw":"**第一个数据包**"},{"type":"Str","value":"，而当服务器返回ACK后，该攻击者就不对其进行再确认，那这个TCP连接就处于挂起状态，也就是所谓的半连接状态，服务器收不到再确认的话，还会重复发送ACK给攻击者。这样更加会浪费服务器的资源。攻击者就对服务器发送非常大量的这种TCP连接，由于每一个都没法完成三次握手，所以在服务器上,这些TCP连接会因为挂起状态而消耗CPU和内存，最后服务器可能死机，就无法为正常用户提供服务了。","loc":{"start":{"line":71,"column":75},"end":{"line":71,"column":264}},"range":[1610,1799],"raw":"，而当服务器返回ACK后，该攻击者就不对其进行再确认，那这个TCP连接就处于挂起状态，也就是所谓的半连接状态，服务器收不到再确认的话，还会重复发送ACK给攻击者。这样更加会浪费服务器的资源。攻击者就对服务器发送非常大量的这种TCP连接，由于每一个都没法完成三次握手，所以在服务器上,这些TCP连接会因为挂起状态而消耗CPU和内存，最后服务器可能死机，就无法为正常用户提供服务了。"}],"loc":{"start":{"line":71,"column":0},"end":{"line":71,"column":264}},"range":[1535,1799],"raw":"SYN洪泛攻击发生在OSI第四层,这种方式利用TCP协议的特性,就是三次握手。攻击者发送TCP SYN,SYN是TCP三次握手中的**第一个数据包**，而当服务器返回ACK后，该攻击者就不对其进行再确认，那这个TCP连接就处于挂起状态，也就是所谓的半连接状态，服务器收不到再确认的话，还会重复发送ACK给攻击者。这样更加会浪费服务器的资源。攻击者就对服务器发送非常大量的这种TCP连接，由于每一个都没法完成三次握手，所以在服务器上,这些TCP连接会因为挂起状态而消耗CPU和内存，最后服务器可能死机，就无法为正常用户提供服务了。"},{"type":"Paragraph","children":[{"type":"Str","value":"解决SYN洪泛攻击的方法是设置SYN cookie","loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":25}},"range":[1801,1826],"raw":"解决SYN洪泛攻击的方法是设置SYN cookie"}],"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":25}},"range":[1801,1826],"raw":"解决SYN洪泛攻击的方法是设置SYN cookie"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"连接释放","loc":{"start":{"line":75,"column":4},"end":{"line":75,"column":8}},"range":[1832,1836],"raw":"连接释放"}],"loc":{"start":{"line":75,"column":0},"end":{"line":75,"column":8}},"range":[1828,1836],"raw":"### 连接释放"},{"type":"Paragraph","children":[{"type":"Str","value":"参与一条TCP连接的两个进程中的任何一个都能终止该进程，连接结束后，主机中的资源（缓存和变量）将被释放。","loc":{"start":{"line":77,"column":0},"end":{"line":77,"column":52}},"range":[1838,1890],"raw":"参与一条TCP连接的两个进程中的任何一个都能终止该进程，连接结束后，主机中的资源（缓存和变量）将被释放。"}],"loc":{"start":{"line":77,"column":0},"end":{"line":77,"column":52}},"range":[1838,1890],"raw":"参与一条TCP连接的两个进程中的任何一个都能终止该进程，连接结束后，主机中的资源（缓存和变量）将被释放。"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/08/11/RmExnKFqW15vsc2.png","alt":"截屏 2020-08-11 下午5.21.08.png","loc":{"start":{"line":79,"column":0},"end":{"line":79,"column":81}},"range":[1892,1973],"raw":"![截屏 2020-08-11 下午5.21.08.png](https://i.loli.net/2020/08/11/RmExnKFqW15vsc2.png)"}],"loc":{"start":{"line":79,"column":0},"end":{"line":79,"column":81}},"range":[1892,1973],"raw":"![截屏 2020-08-11 下午5.21.08.png](https://i.loli.net/2020/08/11/RmExnKFqW15vsc2.png)"},{"type":"List","ordered":false,"start":null,"spread":true,"children":[{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"客户端发送连接释放报文段，停止发送数据，主动关闭TCP连接","loc":{"start":{"line":81,"column":2},"end":{"line":81,"column":31}},"range":[1977,2006],"raw":"客户端发送连接释放报文段，停止发送数据，主动关闭TCP连接"}],"loc":{"start":{"line":81,"column":2},"end":{"line":81,"column":31}},"range":[1977,2006],"raw":"客户端发送连接释放报文段，停止发送数据，主动关闭TCP连接"},{"type":"Paragraph","children":[{"type":"Str","value":"FIN = 1, seq = u","loc":{"start":{"line":83,"column":2},"end":{"line":83,"column":18}},"range":[2012,2028],"raw":"FIN = 1, seq = u"}],"loc":{"start":{"line":83,"column":2},"end":{"line":83,"column":18}},"range":[2012,2028],"raw":"FIN = 1, seq = u"}],"loc":{"start":{"line":81,"column":0},"end":{"line":83,"column":18}},"range":[1975,2028],"raw":"- 客户端发送连接释放报文段，停止发送数据，主动关闭TCP连接\n  \n  FIN = 1, seq = u"},{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"服务器回送一个确认报文段，客户端服务器这个方向的连接就释放了，处于半关闭的状态","loc":{"start":{"line":85,"column":2},"end":{"line":85,"column":41}},"range":[2032,2071],"raw":"服务器回送一个确认报文段，客户端服务器这个方向的连接就释放了，处于半关闭的状态"}],"loc":{"start":{"line":85,"column":2},"end":{"line":85,"column":41}},"range":[2032,2071],"raw":"服务器回送一个确认报文段，客户端服务器这个方向的连接就释放了，处于半关闭的状态"},{"type":"Paragraph","children":[{"type":"Str","value":"ACK = 1, seq = v, ack = u+1","loc":{"start":{"line":87,"column":2},"end":{"line":87,"column":29}},"range":[2075,2102],"raw":"ACK = 1, seq = v, ack = u+1"}],"loc":{"start":{"line":87,"column":2},"end":{"line":87,"column":29}},"range":[2075,2102],"raw":"ACK = 1, seq = v, ack = u+1"}],"loc":{"start":{"line":85,"column":0},"end":{"line":87,"column":29}},"range":[2030,2102],"raw":"- 服务器回送一个确认报文段，客户端服务器这个方向的连接就释放了，处于半关闭的状态\n\n  ACK = 1, seq = v, ack = u+1"},{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"服务器端发完数据，就发出连接释放报文段，主动关闭TCP连接","loc":{"start":{"line":89,"column":2},"end":{"line":89,"column":31}},"range":[2106,2135],"raw":"服务器端发完数据，就发出连接释放报文段，主动关闭TCP连接"}],"loc":{"start":{"line":89,"column":2},"end":{"line":89,"column":31}},"range":[2106,2135],"raw":"服务器端发完数据，就发出连接释放报文段，主动关闭TCP连接"},{"type":"Paragraph","children":[{"type":"Str","value":"FIN = 1, ACK = 1, seq = w, ack = u+1","loc":{"start":{"line":91,"column":2},"end":{"line":91,"column":38}},"range":[2139,2175],"raw":"FIN = 1, ACK = 1, seq = w, ack = u+1"}],"loc":{"start":{"line":91,"column":2},"end":{"line":91,"column":38}},"range":[2139,2175],"raw":"FIN = 1, ACK = 1, seq = w, ack = u+1"}],"loc":{"start":{"line":89,"column":0},"end":{"line":91,"column":38}},"range":[2104,2175],"raw":"- 服务器端发完数据，就发出连接释放报文段，主动关闭TCP连接\n\n  FIN = 1, ACK = 1, seq = w, ack = u+1"},{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"客户端回复一个确认报文段，等到等待倒计时设置的2MSL（最长报文段寿命）后，连接彻底关闭（避免本报文段丢失导致服务器端连接一直得不到释放）","loc":{"start":{"line":93,"column":2},"end":{"line":93,"column":71}},"range":[2179,2248],"raw":"客户端回复一个确认报文段，等到等待倒计时设置的2MSL（最长报文段寿命）后，连接彻底关闭（避免本报文段丢失导致服务器端连接一直得不到释放）"}],"loc":{"start":{"line":93,"column":2},"end":{"line":93,"column":71}},"range":[2179,2248],"raw":"客户端回复一个确认报文段，等到等待倒计时设置的2MSL（最长报文段寿命）后，连接彻底关闭（避免本报文段丢失导致服务器端连接一直得不到释放）"},{"type":"Paragraph","children":[{"type":"Str","value":"ACK = 1, seq = u+1, ack = w+1","loc":{"start":{"line":95,"column":2},"end":{"line":95,"column":31}},"range":[2254,2283],"raw":"ACK = 1, seq = u+1, ack = w+1"}],"loc":{"start":{"line":95,"column":2},"end":{"line":95,"column":31}},"range":[2254,2283],"raw":"ACK = 1, seq = u+1, ack = w+1"}],"loc":{"start":{"line":93,"column":0},"end":{"line":95,"column":31}},"range":[2177,2283],"raw":"- 客户端回复一个确认报文段，等到等待倒计时设置的2MSL（最长报文段寿命）后，连接彻底关闭（避免本报文段丢失导致服务器端连接一直得不到释放）\n  \n  ACK = 1, seq = u+1, ack = w+1"}],"loc":{"start":{"line":81,"column":0},"end":{"line":95,"column":31}},"range":[1975,2283],"raw":"- 客户端发送连接释放报文段，停止发送数据，主动关闭TCP连接\n  \n  FIN = 1, seq = u\n\n- 服务器回送一个确认报文段，客户端服务器这个方向的连接就释放了，处于半关闭的状态\n\n  ACK = 1, seq = v, ack = u+1\n\n- 服务器端发完数据，就发出连接释放报文段，主动关闭TCP连接\n\n  FIN = 1, ACK = 1, seq = w, ack = u+1\n\n- 客户端回复一个确认报文段，等到等待倒计时设置的2MSL（最长报文段寿命）后，连接彻底关闭（避免本报文段丢失导致服务器端连接一直得不到释放）\n  \n  ACK = 1, seq = u+1, ack = w+1"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"数据传送","loc":{"start":{"line":97,"column":4},"end":{"line":97,"column":8}},"range":[2289,2293],"raw":"数据传送"}],"loc":{"start":{"line":97,"column":0},"end":{"line":97,"column":8}},"range":[2285,2293],"raw":"### 数据传送"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"TCP 可靠传输","loc":{"start":{"line":99,"column":5},"end":{"line":99,"column":13}},"range":[2300,2308],"raw":"TCP 可靠传输"}],"loc":{"start":{"line":99,"column":0},"end":{"line":99,"column":13}},"range":[2295,2308],"raw":"#### TCP 可靠传输"},{"type":"Paragraph","children":[{"type":"Str","value":"可靠：保证接收方进程从缓存中读取的字节流于发送方发出的字节流完全一样","loc":{"start":{"line":101,"column":0},"end":{"line":101,"column":34}},"range":[2310,2344],"raw":"可靠：保证接收方进程从缓存中读取的字节流于发送方发出的字节流完全一样"}],"loc":{"start":{"line":101,"column":0},"end":{"line":101,"column":34}},"range":[2310,2344],"raw":"可靠：保证接收方进程从缓存中读取的字节流于发送方发出的字节流完全一样"},{"type":"Header","depth":5,"children":[{"type":"Str","value":"TCP实现可靠传输的机制","loc":{"start":{"line":103,"column":6},"end":{"line":103,"column":18}},"range":[2352,2364],"raw":"TCP实现可靠传输的机制"}],"loc":{"start":{"line":103,"column":0},"end":{"line":103,"column":18}},"range":[2346,2364],"raw":"##### TCP实现可靠传输的机制"},{"type":"Header","depth":6,"children":[{"type":"Str","value":"校验","loc":{"start":{"line":105,"column":7},"end":{"line":105,"column":9}},"range":[2373,2375],"raw":"校验"}],"loc":{"start":{"line":105,"column":0},"end":{"line":105,"column":9}},"range":[2366,2375],"raw":"###### 校验"},{"type":"Paragraph","children":[{"type":"Str","value":"与UDP校验相同，引入了伪首部","loc":{"start":{"line":107,"column":0},"end":{"line":107,"column":15}},"range":[2377,2392],"raw":"与UDP校验相同，引入了伪首部"}],"loc":{"start":{"line":107,"column":0},"end":{"line":107,"column":15}},"range":[2377,2392],"raw":"与UDP校验相同，引入了伪首部"},{"type":"Header","depth":6,"children":[{"type":"Str","value":"序号","loc":{"start":{"line":109,"column":7},"end":{"line":109,"column":9}},"range":[2401,2403],"raw":"序号"}],"loc":{"start":{"line":109,"column":0},"end":{"line":109,"column":9}},"range":[2394,2403],"raw":"###### 序号"},{"type":"Paragraph","children":[{"type":"Str","value":"序号字段指的是一个报文段中第一个字节的序号。","loc":{"start":{"line":111,"column":0},"end":{"line":111,"column":22}},"range":[2405,2427],"raw":"序号字段指的是一个报文段中第一个字节的序号。"}],"loc":{"start":{"line":111,"column":0},"end":{"line":111,"column":22}},"range":[2405,2427],"raw":"序号字段指的是一个报文段中第一个字节的序号。"},{"type":"Header","depth":6,"children":[{"type":"Str","value":"确认","loc":{"start":{"line":113,"column":7},"end":{"line":113,"column":9}},"range":[2436,2438],"raw":"确认"}],"loc":{"start":{"line":113,"column":0},"end":{"line":113,"column":9}},"range":[2429,2438],"raw":"###### 确认"},{"type":"Paragraph","children":[{"type":"Str","value":"采用累积确认机制，确认报文段内的确认号字段为接收方期待的下一个字节的序号","loc":{"start":{"line":115,"column":0},"end":{"line":115,"column":36}},"range":[2440,2476],"raw":"采用累积确认机制，确认报文段内的确认号字段为接收方期待的下一个字节的序号"}],"loc":{"start":{"line":115,"column":0},"end":{"line":115,"column":36}},"range":[2440,2476],"raw":"采用累积确认机制，确认报文段内的确认号字段为接收方期待的下一个字节的序号"},{"type":"Paragraph","children":[{"type":"Str","value":"冗余ACK：每当收到比期望序号大的报文段时，发送一个冗余ACK，指明下一个希望收到的字节的序号","loc":{"start":{"line":117,"column":0},"end":{"line":117,"column":47}},"range":[2478,2525],"raw":"冗余ACK：每当收到比期望序号大的报文段时，发送一个冗余ACK，指明下一个希望收到的字节的序号"}],"loc":{"start":{"line":117,"column":0},"end":{"line":117,"column":47}},"range":[2478,2525],"raw":"冗余ACK：每当收到比期望序号大的报文段时，发送一个冗余ACK，指明下一个希望收到的字节的序号"},{"type":"Header","depth":6,"children":[{"type":"Str","value":"重传","loc":{"start":{"line":119,"column":7},"end":{"line":119,"column":9}},"range":[2534,2536],"raw":"重传"}],"loc":{"start":{"line":119,"column":0},"end":{"line":119,"column":9}},"range":[2527,2536],"raw":"###### 重传"},{"type":"Paragraph","children":[{"type":"Str","value":"超时重传：确认和重传是不分家的，TCP在**规定的时间（重传时间）**内没有收到确认，就会重传已发送但是未确认的报文段。","loc":{"start":{"line":121,"column":0},"end":{"line":121,"column":60}},"range":[2538,2598],"raw":"超时重传：确认和重传是不分家的，TCP在**规定的时间（重传时间）**内没有收到确认，就会重传已发送但是未确认的报文段。"}],"loc":{"start":{"line":121,"column":0},"end":{"line":121,"column":60}},"range":[2538,2598],"raw":"超时重传：确认和重传是不分家的，TCP在**规定的时间（重传时间）**内没有收到确认，就会重传已发送但是未确认的报文段。"},{"type":"Paragraph","children":[{"type":"Str","value":"TCP采用自适应算法，动态确定重传时间RTTs（加权平均往返时间）。","loc":{"start":{"line":123,"column":0},"end":{"line":123,"column":34}},"range":[2600,2634],"raw":"TCP采用自适应算法，动态确定重传时间RTTs（加权平均往返时间）。"}],"loc":{"start":{"line":123,"column":0},"end":{"line":123,"column":34}},"range":[2600,2634],"raw":"TCP采用自适应算法，动态确定重传时间RTTs（加权平均往返时间）。"},{"type":"Paragraph","children":[{"type":"Str","value":"快速重传：发送方收到","loc":{"start":{"line":125,"column":0},"end":{"line":125,"column":10}},"range":[2636,2646],"raw":"快速重传：发送方收到"},{"type":"Strong","children":[{"type":"Str","value":"冗余ACK","loc":{"start":{"line":125,"column":12},"end":{"line":125,"column":17}},"range":[2648,2653],"raw":"冗余ACK"}],"loc":{"start":{"line":125,"column":10},"end":{"line":125,"column":19}},"range":[2646,2655],"raw":"**冗余ACK**"},{"type":"Str","value":"之后，重新发送丢失的报文段","loc":{"start":{"line":125,"column":19},"end":{"line":125,"column":32}},"range":[2655,2668],"raw":"之后，重新发送丢失的报文段"}],"loc":{"start":{"line":125,"column":0},"end":{"line":125,"column":32}},"range":[2636,2668],"raw":"快速重传：发送方收到**冗余ACK**之后，重新发送丢失的报文段"},{"type":"HorizontalRule","loc":{"start":{"line":127,"column":0},"end":{"line":127,"column":5}},"range":[2670,2675],"raw":"*****"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"TCP流量控制","loc":{"start":{"line":129,"column":3},"end":{"line":129,"column":10}},"range":[2680,2687],"raw":"TCP流量控制"}],"loc":{"start":{"line":129,"column":0},"end":{"line":129,"column":10}},"range":[2677,2687],"raw":"## TCP流量控制"},{"type":"Paragraph","children":[{"type":"Str","value":"让发送方发慢点，使接收方可以来得及接收，使用","loc":{"start":{"line":131,"column":0},"end":{"line":131,"column":22}},"range":[2689,2711],"raw":"让发送方发慢点，使接收方可以来得及接收，使用"},{"type":"Strong","children":[{"type":"Str","value":"滑动窗口的机制","loc":{"start":{"line":131,"column":24},"end":{"line":131,"column":31}},"range":[2713,2720],"raw":"滑动窗口的机制"}],"loc":{"start":{"line":131,"column":22},"end":{"line":131,"column":33}},"range":[2711,2722],"raw":"**滑动窗口的机制**"},{"type":"Str","value":"来实现流量控制。","loc":{"start":{"line":131,"column":33},"end":{"line":131,"column":41}},"range":[2722,2730],"raw":"来实现流量控制。"}],"loc":{"start":{"line":131,"column":0},"end":{"line":131,"column":41}},"range":[2689,2730],"raw":"让发送方发慢点，使接收方可以来得及接收，使用**滑动窗口的机制**来实现流量控制。"},{"type":"Paragraph","children":[{"type":"Str","value":"通信过程中，接收方根据自己的接收缓存大小，动态调整发送方发送窗口的大小，发送方的发送窗口大小取接收方接收窗口rwnd和拥塞窗口的最小值。","loc":{"start":{"line":133,"column":0},"end":{"line":133,"column":68}},"range":[2732,2800],"raw":"通信过程中，接收方根据自己的接收缓存大小，动态调整发送方发送窗口的大小，发送方的发送窗口大小取接收方接收窗口rwnd和拥塞窗口的最小值。"}],"loc":{"start":{"line":133,"column":0},"end":{"line":133,"column":68}},"range":[2732,2800],"raw":"通信过程中，接收方根据自己的接收缓存大小，动态调整发送方发送窗口的大小，发送方的发送窗口大小取接收方接收窗口rwnd和拥塞窗口的最小值。"},{"type":"Paragraph","children":[{"type":"Str","value":"TCP为每一个连接都设有持续计时器，只要TCP连接一方接收到另一方零窗口通知，就会启动持续计时器。","loc":{"start":{"line":135,"column":0},"end":{"line":135,"column":49}},"range":[2802,2851],"raw":"TCP为每一个连接都设有持续计时器，只要TCP连接一方接收到另一方零窗口通知，就会启动持续计时器。"}],"loc":{"start":{"line":135,"column":0},"end":{"line":135,"column":49}},"range":[2802,2851],"raw":"TCP为每一个连接都设有持续计时器，只要TCP连接一方接收到另一方零窗口通知，就会启动持续计时器。"},{"type":"Paragraph","children":[{"type":"Str","value":"如果持续计时器到期，就发送一个零窗口探测报文段，接收方收到探测报文段后，就会回复当前接收方的接收窗口的值。如果窗口值仍然是0，发送方就重新设置持续计时器，否则发送方继续发送数据。","loc":{"start":{"line":137,"column":0},"end":{"line":137,"column":89}},"range":[2853,2942],"raw":"如果持续计时器到期，就发送一个零窗口探测报文段，接收方收到探测报文段后，就会回复当前接收方的接收窗口的值。如果窗口值仍然是0，发送方就重新设置持续计时器，否则发送方继续发送数据。"}],"loc":{"start":{"line":137,"column":0},"end":{"line":137,"column":89}},"range":[2853,2942],"raw":"如果持续计时器到期，就发送一个零窗口探测报文段，接收方收到探测报文段后，就会回复当前接收方的接收窗口的值。如果窗口值仍然是0，发送方就重新设置持续计时器，否则发送方继续发送数据。"},{"type":"HorizontalRule","loc":{"start":{"line":139,"column":0},"end":{"line":139,"column":5}},"range":[2944,2949],"raw":"*****"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"TCP拥塞控制","loc":{"start":{"line":141,"column":3},"end":{"line":141,"column":10}},"range":[2954,2961],"raw":"TCP拥塞控制"}],"loc":{"start":{"line":141,"column":0},"end":{"line":141,"column":10}},"range":[2951,2961],"raw":"## TCP拥塞控制"},{"type":"Paragraph","children":[{"type":"Str","value":"出现拥塞的条件：","loc":{"start":{"line":143,"column":0},"end":{"line":143,"column":8}},"range":[2963,2971],"raw":"出现拥塞的条件："}],"loc":{"start":{"line":143,"column":0},"end":{"line":143,"column":8}},"range":[2963,2971],"raw":"出现拥塞的条件："},{"type":"Paragraph","children":[{"type":"Str","value":"对资源需求的总和 > 可以用的资源","loc":{"start":{"line":145,"column":0},"end":{"line":145,"column":17}},"range":[2973,2990],"raw":"对资源需求的总和 > 可以用的资源"}],"loc":{"start":{"line":145,"column":0},"end":{"line":145,"column":17}},"range":[2973,2990],"raw":"对资源需求的总和 > 可以用的资源"},{"type":"Paragraph","children":[{"type":"Str","value":"网路中资源呈现供应不足 $\\Rrightarrow$ 网路性能变坏 $\\Rrightarrow$ 由于重发等引起网络的负荷增大 $\\Rrightarrow$ 网络吞吐量下降  $\\Rrightarrow$ 网络资源供应更加不足。","loc":{"start":{"line":147,"column":0},"end":{"line":147,"column":114}},"range":[2992,3106],"raw":"网路中资源呈现供应不足 $\\Rrightarrow$ 网路性能变坏 $\\Rrightarrow$ 由于重发等引起网络的负荷增大 $\\Rrightarrow$ 网络吞吐量下降  $\\Rrightarrow$ 网络资源供应更加不足。"}],"loc":{"start":{"line":147,"column":0},"end":{"line":147,"column":114}},"range":[2992,3106],"raw":"网路中资源呈现供应不足 $\\Rrightarrow$ 网路性能变坏 $\\Rrightarrow$ 由于重发等引起网络的负荷增大 $\\Rrightarrow$ 网络吞吐量下降  $\\Rrightarrow$ 网络资源供应更加不足。"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"拥塞控制的四种算法","loc":{"start":{"line":149,"column":4},"end":{"line":149,"column":13}},"range":[3112,3121],"raw":"拥塞控制的四种算法"}],"loc":{"start":{"line":149,"column":0},"end":{"line":149,"column":13}},"range":[3108,3121],"raw":"### 拥塞控制的四种算法"},{"type":"Paragraph","children":[{"type":"Str","value":"假定:","loc":{"start":{"line":151,"column":0},"end":{"line":151,"column":3}},"range":[3123,3126],"raw":"假定:"}],"loc":{"start":{"line":151,"column":0},"end":{"line":151,"column":3}},"range":[3123,3126],"raw":"假定:"},{"type":"List","ordered":true,"start":1,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"数据单方向传送,而另一个方向只传送确认","loc":{"start":{"line":152,"column":3},"end":{"line":152,"column":22}},"range":[3130,3149],"raw":"数据单方向传送,而另一个方向只传送确认"}],"loc":{"start":{"line":152,"column":3},"end":{"line":152,"column":22}},"range":[3130,3149],"raw":"数据单方向传送,而另一个方向只传送确认"}],"loc":{"start":{"line":152,"column":0},"end":{"line":152,"column":22}},"range":[3127,3149],"raw":"1. 数据单方向传送,而另一个方向只传送确认"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"接收方总是有足够大的缓存空间,因而发送窗口大小取决于拥塞程度","loc":{"start":{"line":153,"column":3},"end":{"line":153,"column":33}},"range":[3153,3183],"raw":"接收方总是有足够大的缓存空间,因而发送窗口大小取决于拥塞程度"}],"loc":{"start":{"line":153,"column":3},"end":{"line":153,"column":33}},"range":[3153,3183],"raw":"接收方总是有足够大的缓存空间,因而发送窗口大小取决于拥塞程度"}],"loc":{"start":{"line":153,"column":0},"end":{"line":153,"column":33}},"range":[3150,3183],"raw":"2. 接收方总是有足够大的缓存空间,因而发送窗口大小取决于拥塞程度"}],"loc":{"start":{"line":152,"column":0},"end":{"line":154,"column":3}},"range":[3127,3187],"raw":"1. 数据单方向传送,而另一个方向只传送确认\n2. 接收方总是有足够大的缓存空间,因而发送窗口大小取决于拥塞程度\n   "},{"type":"Paragraph","children":[{"type":"Str","value":"发送窗口=Min{接收窗口rwnd,拥塞窗口cwnd}","loc":{"start":{"line":156,"column":0},"end":{"line":156,"column":27}},"range":[3189,3216],"raw":"发送窗口=Min{接收窗口rwnd,拥塞窗口cwnd}"}],"loc":{"start":{"line":156,"column":0},"end":{"line":156,"column":27}},"range":[3189,3216],"raw":"发送窗口=Min{接收窗口rwnd,拥塞窗口cwnd}"},{"type":"Paragraph","children":[{"type":"Str","value":"接收窗口：接收方根据接受缓存设置的值,并告知给发送方,反映接收方容量。\n拥塞窗口：发送方根据自己估算的网络拥塞程度而设置的窗口值,反映网络当前容量。","loc":{"start":{"line":158,"column":0},"end":{"line":159,"column":38}},"range":[3218,3292],"raw":"接收窗口：接收方根据接受缓存设置的值,并告知给发送方,反映接收方容量。\n拥塞窗口：发送方根据自己估算的网络拥塞程度而设置的窗口值,反映网络当前容量。"}],"loc":{"start":{"line":158,"column":0},"end":{"line":159,"column":38}},"range":[3218,3292],"raw":"接收窗口：接收方根据接受缓存设置的值,并告知给发送方,反映接收方容量。\n拥塞窗口：发送方根据自己估算的网络拥塞程度而设置的窗口值,反映网络当前容量。"},{"type":"HorizontalRule","loc":{"start":{"line":161,"column":0},"end":{"line":161,"column":5}},"range":[3294,3299],"raw":"*****"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"慢开始和 拥塞避免","loc":{"start":{"line":163,"column":5},"end":{"line":163,"column":14}},"range":[3306,3315],"raw":"慢开始和 拥塞避免"}],"loc":{"start":{"line":163,"column":0},"end":{"line":163,"column":14}},"range":[3301,3315],"raw":"#### 慢开始和 拥塞避免"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/08/11/tYRL6yS1vHOUB5P.png","alt":"截屏 2020-08-11 下午8.20.00.png","loc":{"start":{"line":165,"column":0},"end":{"line":165,"column":81}},"range":[3317,3398],"raw":"![截屏 2020-08-11 下午8.20.00.png](https://i.loli.net/2020/08/11/tYRL6yS1vHOUB5P.png)"}],"loc":{"start":{"line":165,"column":0},"end":{"line":165,"column":81}},"range":[3317,3398],"raw":"![截屏 2020-08-11 下午8.20.00.png](https://i.loli.net/2020/08/11/tYRL6yS1vHOUB5P.png)"},{"type":"Paragraph","children":[{"type":"Str","value":"开始时采用指数增长注入数据报的数量，达到ssthresh时，为了避免网络拥塞，使用“假发增大”，发生网络拥塞的时候，将当前的窗口数量除以2，作为新的门限值ssthresh，将拥塞窗口调整到1，继续执行慢开始。","loc":{"start":{"line":167,"column":0},"end":{"line":167,"column":104}},"range":[3400,3504],"raw":"开始时采用指数增长注入数据报的数量，达到ssthresh时，为了避免网络拥塞，使用“假发增大”，发生网络拥塞的时候，将当前的窗口数量除以2，作为新的门限值ssthresh，将拥塞窗口调整到1，继续执行慢开始。"}],"loc":{"start":{"line":167,"column":0},"end":{"line":167,"column":104}},"range":[3400,3504],"raw":"开始时采用指数增长注入数据报的数量，达到ssthresh时，为了避免网络拥塞，使用“假发增大”，发生网络拥塞的时候，将当前的窗口数量除以2，作为新的门限值ssthresh，将拥塞窗口调整到1，继续执行慢开始。"},{"type":"Paragraph","children":[{"type":"Str","value":"调整拥塞窗口数量的时机：收到接收方的确认的时候，调整拥塞窗口的数量","loc":{"start":{"line":169,"column":0},"end":{"line":169,"column":33}},"range":[3506,3539],"raw":"调整拥塞窗口数量的时机：收到接收方的确认的时候，调整拥塞窗口的数量"}],"loc":{"start":{"line":169,"column":0},"end":{"line":169,"column":33}},"range":[3506,3539],"raw":"调整拥塞窗口数量的时机：收到接收方的确认的时候，调整拥塞窗口的数量"},{"type":"HorizontalRule","loc":{"start":{"line":171,"column":0},"end":{"line":171,"column":5}},"range":[3541,3546],"raw":"*****"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"快重传和快恢复","loc":{"start":{"line":173,"column":5},"end":{"line":173,"column":12}},"range":[3553,3560],"raw":"快重传和快恢复"}],"loc":{"start":{"line":173,"column":0},"end":{"line":173,"column":12}},"range":[3548,3560],"raw":"#### 快重传和快恢复"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/08/11/NKETm21jwAVsDUo.png","alt":"截屏 2020-08-11 下午8.28.31.png","loc":{"start":{"line":175,"column":0},"end":{"line":175,"column":81}},"range":[3562,3643],"raw":"![截屏 2020-08-11 下午8.28.31.png](https://i.loli.net/2020/08/11/NKETm21jwAVsDUo.png)"}],"loc":{"start":{"line":175,"column":0},"end":{"line":175,"column":81}},"range":[3562,3643],"raw":"![截屏 2020-08-11 下午8.28.31.png](https://i.loli.net/2020/08/11/NKETm21jwAVsDUo.png)"},{"type":"Paragraph","children":[{"type":"Str","value":"在收到接收方的冗余ACK时，不用将拥塞窗口降到1，而是降到新的门限值。","loc":{"start":{"line":177,"column":0},"end":{"line":177,"column":35}},"range":[3645,3680],"raw":"在收到接收方的冗余ACK时，不用将拥塞窗口降到1，而是降到新的门限值。"}],"loc":{"start":{"line":177,"column":0},"end":{"line":177,"column":35}},"range":[3645,3680],"raw":"在收到接收方的冗余ACK时，不用将拥塞窗口降到1，而是降到新的门限值。"}],"loc":{"start":{"line":1,"column":0},"end":{"line":178,"column":0}},"range":[0,3681],"raw":"---\ntitle: 'TCP协议'\ntags: ['计算机网路','传输层','TCP']\n---\n# TCP协议的特点和TCP报文格式\n\n*****\n\n## 特点\n\n1. 面向连接（虚连接）的传输层协议\n2. 每一条TCP连接只能是点对点的\n3. TCP可以提供可靠的交付服务，无差错，不丢失、不重复、按照顺序到达\n4. 可以提供全双工通信\n   - 发送缓存：准备发送的数据 & 已发送但尚未收到确认的数据 的队列\n   - 接收缓存：按序到达但未被接收应用程序读取的数据 & 不按序到达的数据\n5. 面向字节流：TCP把应用程序交下来的数据仅仅看成是一连串无结构的字节流\n\n### RTT估计方法\n\n$新估计RTT=(1-\\alpha) * (旧RTT) + \\alpha*新RTT样本$\n\n*****\n\n## 首部格式\n\n![截屏 2020-08-11 下午4.11.16.png](https://i.loli.net/2020/08/11/YzRPSbdorQX2fsy.png)\n\n- 源端口、目的端口：一个占用两个字节\n- 序号：在一个TCP连接中，传送的字节流中的每一个字节都按照顺序编号，本字段表示本报文段所发送的数据的第一个字节的序号。\n- 确认号：期望收到对方下一个报文段的第一个数据字节的序号。若确认号为N，证明到序号N-1为止的数据都已经正确接收。\n- 数据便宜（首部长度）：TCP报文段的数据起始处距离TCP报文段的起始处有多远，以4字节为单位，即1个数为4字节。\n- 控制位：\n  - URG紧急位：URG=1时，表明此报文段有紧急数据，是高优先级的数据，应该尽快传送，不用在缓存里排队，配合紧急指针字段使用\n  - ACK确认位：ACK=1时确认号有效，在连接建立后所有的传送都必须把ACK置位1\n  - PSH推送位：PSH=1时接收方应该尽快交付给接收应用进程，不再等到缓存填满再向上交付\n  - RST复位：RST=1时表明TCP连接中出现严重的差错，必须释放连接，然后重新建立传输连接\n  - SYN同步位：SYN=1时，表明是一个连接请求/连接接受报文\n  - FIN终止位：FIN=1时，表明此报文段发送方的数据已经发送完，要求释放连接\n- 窗口：指的是发送本报文段的一方的接收窗口（自己的接收窗口），即现在允许接收的数据量\n- 检验和：检验首部+数据部分，检验时要加上12B的伪首部，第四个字段为6\n- 紧急指针：URG紧急位=1时才有意义，指出本报文段中紧急数据的字节数，从数据部分开始位到紧急指针的位是紧急数据，剩下的数据是普通数据。\n- 选项：最大报文段长度MSS、窗口扩大、时间戳、选择确认等\n\n*****\n\n## TCP连接管理\n\nTCP建立连接的三个阶段：\n\n### 连接建立\n\nTCP连接的建立采用客户服务器方式，主动发起连接的应用进程叫做客户端，被动等待连接的应用进程叫做服务器。\n\n![截屏 2020-08-11 下午5.08.44.png](https://i.loli.net/2020/08/11/H2YG8nSjok7PZs5.png)\n\n1. 客户端发送连接请求报文段，无应用层数据\n\n   SYN = 1, 序号seq = x[随机]\n\n2. 服务器端为该TCP连接分配缓存和变量，并向客户端回复确认报文段，允许连接，无应用层数据。\n\n   SYN = 1, ACK=1, seq=y[随机], ack=x+1\n\n3. 客户端为该TCP连接分配缓存和变量，并向服务器端回复确认的确认，可以携带数据。\n\n   ACK = 1, seq=x+1, ack=y+1\n\n#### SYN洪泛攻击\n\nSYN洪泛攻击发生在OSI第四层,这种方式利用TCP协议的特性,就是三次握手。攻击者发送TCP SYN,SYN是TCP三次握手中的**第一个数据包**，而当服务器返回ACK后，该攻击者就不对其进行再确认，那这个TCP连接就处于挂起状态，也就是所谓的半连接状态，服务器收不到再确认的话，还会重复发送ACK给攻击者。这样更加会浪费服务器的资源。攻击者就对服务器发送非常大量的这种TCP连接，由于每一个都没法完成三次握手，所以在服务器上,这些TCP连接会因为挂起状态而消耗CPU和内存，最后服务器可能死机，就无法为正常用户提供服务了。\n\n解决SYN洪泛攻击的方法是设置SYN cookie\n\n### 连接释放\n\n参与一条TCP连接的两个进程中的任何一个都能终止该进程，连接结束后，主机中的资源（缓存和变量）将被释放。\n\n![截屏 2020-08-11 下午5.21.08.png](https://i.loli.net/2020/08/11/RmExnKFqW15vsc2.png)\n\n- 客户端发送连接释放报文段，停止发送数据，主动关闭TCP连接\n  \n  FIN = 1, seq = u\n\n- 服务器回送一个确认报文段，客户端服务器这个方向的连接就释放了，处于半关闭的状态\n\n  ACK = 1, seq = v, ack = u+1\n\n- 服务器端发完数据，就发出连接释放报文段，主动关闭TCP连接\n\n  FIN = 1, ACK = 1, seq = w, ack = u+1\n\n- 客户端回复一个确认报文段，等到等待倒计时设置的2MSL（最长报文段寿命）后，连接彻底关闭（避免本报文段丢失导致服务器端连接一直得不到释放）\n  \n  ACK = 1, seq = u+1, ack = w+1\n\n### 数据传送\n\n#### TCP 可靠传输\n\n可靠：保证接收方进程从缓存中读取的字节流于发送方发出的字节流完全一样\n\n##### TCP实现可靠传输的机制\n\n###### 校验\n\n与UDP校验相同，引入了伪首部\n\n###### 序号\n\n序号字段指的是一个报文段中第一个字节的序号。\n\n###### 确认\n\n采用累积确认机制，确认报文段内的确认号字段为接收方期待的下一个字节的序号\n\n冗余ACK：每当收到比期望序号大的报文段时，发送一个冗余ACK，指明下一个希望收到的字节的序号\n\n###### 重传\n\n超时重传：确认和重传是不分家的，TCP在**规定的时间（重传时间）**内没有收到确认，就会重传已发送但是未确认的报文段。\n\nTCP采用自适应算法，动态确定重传时间RTTs（加权平均往返时间）。\n\n快速重传：发送方收到**冗余ACK**之后，重新发送丢失的报文段\n\n*****\n\n## TCP流量控制\n\n让发送方发慢点，使接收方可以来得及接收，使用**滑动窗口的机制**来实现流量控制。\n\n通信过程中，接收方根据自己的接收缓存大小，动态调整发送方发送窗口的大小，发送方的发送窗口大小取接收方接收窗口rwnd和拥塞窗口的最小值。\n\nTCP为每一个连接都设有持续计时器，只要TCP连接一方接收到另一方零窗口通知，就会启动持续计时器。\n\n如果持续计时器到期，就发送一个零窗口探测报文段，接收方收到探测报文段后，就会回复当前接收方的接收窗口的值。如果窗口值仍然是0，发送方就重新设置持续计时器，否则发送方继续发送数据。\n\n*****\n\n## TCP拥塞控制\n\n出现拥塞的条件：\n\n对资源需求的总和 > 可以用的资源\n\n网路中资源呈现供应不足 $\\Rrightarrow$ 网路性能变坏 $\\Rrightarrow$ 由于重发等引起网络的负荷增大 $\\Rrightarrow$ 网络吞吐量下降  $\\Rrightarrow$ 网络资源供应更加不足。\n\n### 拥塞控制的四种算法\n\n假定:\n1. 数据单方向传送,而另一个方向只传送确认\n2. 接收方总是有足够大的缓存空间,因而发送窗口大小取决于拥塞程度\n   \n\n发送窗口=Min{接收窗口rwnd,拥塞窗口cwnd}\n\n接收窗口：接收方根据接受缓存设置的值,并告知给发送方,反映接收方容量。\n拥塞窗口：发送方根据自己估算的网络拥塞程度而设置的窗口值,反映网络当前容量。\n\n*****\n\n#### 慢开始和 拥塞避免\n\n![截屏 2020-08-11 下午8.20.00.png](https://i.loli.net/2020/08/11/tYRL6yS1vHOUB5P.png)\n\n开始时采用指数增长注入数据报的数量，达到ssthresh时，为了避免网络拥塞，使用“假发增大”，发生网络拥塞的时候，将当前的窗口数量除以2，作为新的门限值ssthresh，将拥塞窗口调整到1，继续执行慢开始。\n\n调整拥塞窗口数量的时机：收到接收方的确认的时候，调整拥塞窗口的数量\n\n*****\n\n#### 快重传和快恢复\n\n![截屏 2020-08-11 下午8.28.31.png](https://i.loli.net/2020/08/11/NKETm21jwAVsDUo.png)\n\n在收到接收方的冗余ACK时，不用将拥塞窗口降到1，而是降到新的门限值。\n"},"catalogue":{"title":"TCP协议","json-path":"2020-08-11-TCP协议的特点和TCP报文格式.json","mdate":"2022-08-30T14:19:31.453Z","tags":["计算机网路","传输层","TCP"]}}