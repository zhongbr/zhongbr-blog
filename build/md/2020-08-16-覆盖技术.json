{"ast":{"type":"Document","children":[{"type":"Yaml","value":"title: '覆盖技术和交换技术'\ntags: ['操作系统','内存']","loc":{"start":{"line":1,"column":0},"end":{"line":4,"column":3}},"range":[0,46],"raw":"---\ntitle: '覆盖技术和交换技术'\ntags: ['操作系统','内存']\n---"},{"type":"Header","depth":1,"children":[{"type":"Str","value":"覆盖技术和交换技术","loc":{"start":{"line":5,"column":2},"end":{"line":5,"column":11}},"range":[49,58],"raw":"覆盖技术和交换技术"}],"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":11}},"range":[47,58],"raw":"# 覆盖技术和交换技术"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"覆盖技术","loc":{"start":{"line":7,"column":3},"end":{"line":7,"column":7}},"range":[63,67],"raw":"覆盖技术"}],"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":7}},"range":[60,67],"raw":"## 覆盖技术"},{"type":"Paragraph","children":[{"type":"Str","value":"将程序分为多个段（多个模块），常用的模块常驻内存，不常用的段，在需要的时候再调入内存。","loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":43}},"range":[69,112],"raw":"将程序分为多个段（多个模块），常用的模块常驻内存，不常用的段，在需要的时候再调入内存。"}],"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":43}},"range":[69,112],"raw":"将程序分为多个段（多个模块），常用的模块常驻内存，不常用的段，在需要的时候再调入内存。"},{"type":"Paragraph","children":[{"type":"Str","value":"内存分为“固定区”和“覆盖区”，常驻内存的额段需要放在固定区内，其他段放在覆盖区内。","loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":42}},"range":[114,156],"raw":"内存分为“固定区”和“覆盖区”，常驻内存的额段需要放在固定区内，其他段放在覆盖区内。"}],"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":42}},"range":[114,156],"raw":"内存分为“固定区”和“覆盖区”，常驻内存的额段需要放在固定区内，其他段放在覆盖区内。"},{"type":"Paragraph","children":[{"type":"Str","value":"根据程序的调用结构，对多个不可能同时被调用的程序段分配一个可覆盖的内存的区域，这个区域的大小根据最大的程序段定。","loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":56}},"range":[158,214],"raw":"根据程序的调用结构，对多个不可能同时被调用的程序段分配一个可覆盖的内存的区域，这个区域的大小根据最大的程序段定。"}],"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":56}},"range":[158,214],"raw":"根据程序的调用结构，对多个不可能同时被调用的程序段分配一个可覆盖的内存的区域，这个区域的大小根据最大的程序段定。"},{"type":"Paragraph","children":[{"type":"Str","value":"缺点：必须由程序员定义程序的覆盖结构，操作系统完成自动覆盖，","loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":30}},"range":[216,246],"raw":"缺点：必须由程序员定义程序的覆盖结构，操作系统完成自动覆盖，"},{"type":"Strong","children":[{"type":"Str","value":"对用户不透明，增加了用户的编程负担","loc":{"start":{"line":15,"column":32},"end":{"line":15,"column":49}},"range":[248,265],"raw":"对用户不透明，增加了用户的编程负担"}],"loc":{"start":{"line":15,"column":30},"end":{"line":15,"column":51}},"range":[246,267],"raw":"**对用户不透明，增加了用户的编程负担**"},{"type":"Str","value":"。","loc":{"start":{"line":15,"column":51},"end":{"line":15,"column":52}},"range":[267,268],"raw":"。"}],"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":52}},"range":[216,268],"raw":"缺点：必须由程序员定义程序的覆盖结构，操作系统完成自动覆盖，**对用户不透明，增加了用户的编程负担**。"},{"type":"Paragraph","children":[{"type":"Str","value":"覆盖技术","loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":4}},"range":[270,274],"raw":"覆盖技术"},{"type":"Strong","children":[{"type":"Str","value":"只用于早期的操作系统","loc":{"start":{"line":17,"column":6},"end":{"line":17,"column":16}},"range":[276,286],"raw":"只用于早期的操作系统"}],"loc":{"start":{"line":17,"column":4},"end":{"line":17,"column":18}},"range":[274,288],"raw":"**只用于早期的操作系统**"},{"type":"Str","value":"。","loc":{"start":{"line":17,"column":18},"end":{"line":17,"column":19}},"range":[288,289],"raw":"。"}],"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":19}},"range":[270,289],"raw":"覆盖技术**只用于早期的操作系统**。"},{"type":"HorizontalRule","loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":5}},"range":[291,296],"raw":"*****"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"交换技术","loc":{"start":{"line":21,"column":3},"end":{"line":21,"column":7}},"range":[301,305],"raw":"交换技术"}],"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":7}},"range":[298,305],"raw":"## 交换技术"},{"type":"Paragraph","children":[{"type":"Str","value":"当内存空间紧张的时候，操作系统将内存中某些进程暂时换出内存（","loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":30}},"range":[307,337],"raw":"当内存空间紧张的时候，操作系统将内存中某些进程暂时换出内存（"},{"type":"Strong","children":[{"type":"Str","value":"PCB还在内存中，放入挂起队列","loc":{"start":{"line":23,"column":32},"end":{"line":23,"column":47}},"range":[339,354],"raw":"PCB还在内存中，放入挂起队列"}],"loc":{"start":{"line":23,"column":30},"end":{"line":23,"column":49}},"range":[337,356],"raw":"**PCB还在内存中，放入挂起队列**"},{"type":"Str","value":"），把外存中某些具备运行条件的进程换入内存（进程在内存和磁盘中动态调度）。","loc":{"start":{"line":23,"column":49},"end":{"line":23,"column":86}},"range":[356,393],"raw":"），把外存中某些具备运行条件的进程换入内存（进程在内存和磁盘中动态调度）。"}],"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":86}},"range":[307,393],"raw":"当内存空间紧张的时候，操作系统将内存中某些进程暂时换出内存（**PCB还在内存中，放入挂起队列**），把外存中某些具备运行条件的进程换入内存（进程在内存和磁盘中动态调度）。"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"对换区","loc":{"start":{"line":25,"column":4},"end":{"line":25,"column":7}},"range":[399,402],"raw":"对换区"}],"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":7}},"range":[395,402],"raw":"### 对换区"},{"type":"Paragraph","children":[{"type":"Str","value":"具有对换功能的操作系统中，通常把磁盘空间分为文件区和对换区，文件区用于存放文件，主要追求存储空间的利用率，对文件区空间的管理采用离散分配方式。","loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":71}},"range":[404,475],"raw":"具有对换功能的操作系统中，通常把磁盘空间分为文件区和对换区，文件区用于存放文件，主要追求存储空间的利用率，对文件区空间的管理采用离散分配方式。"}],"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":71}},"range":[404,475],"raw":"具有对换功能的操作系统中，通常把磁盘空间分为文件区和对换区，文件区用于存放文件，主要追求存储空间的利用率，对文件区空间的管理采用离散分配方式。"},{"type":"Paragraph","children":[{"type":"Str","value":"对换区只占磁盘空间的小部分，被换出的进程的数据就存放在对换区，对换区的读写速度直接影响到操作系统的整体速度，因此对换区空间管理主要追求输入和输出的速度，对换区常采用连续分配的方式。","loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":90}},"range":[477,567],"raw":"对换区只占磁盘空间的小部分，被换出的进程的数据就存放在对换区，对换区的读写速度直接影响到操作系统的整体速度，因此对换区空间管理主要追求输入和输出的速度，对换区常采用连续分配的方式。"}],"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":90}},"range":[477,567],"raw":"对换区只占磁盘空间的小部分，被换出的进程的数据就存放在对换区，对换区的读写速度直接影响到操作系统的整体速度，因此对换区空间管理主要追求输入和输出的速度，对换区常采用连续分配的方式。"},{"type":"Paragraph","children":[{"type":"Strong","children":[{"type":"Str","value":"对换区的IO速度比文件区的IO更快","loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":19}},"range":[571,588],"raw":"对换区的IO速度比文件区的IO更快"}],"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":21}},"range":[569,590],"raw":"**对换区的IO速度比文件区的IO更快**"},{"type":"Str","value":"。","loc":{"start":{"line":31,"column":21},"end":{"line":31,"column":22}},"range":[590,591],"raw":"。"}],"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":22}},"range":[569,591],"raw":"**对换区的IO速度比文件区的IO更快**。"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"对换的时机","loc":{"start":{"line":33,"column":4},"end":{"line":33,"column":9}},"range":[597,602],"raw":"对换的时机"}],"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":9}},"range":[593,602],"raw":"### 对换的时机"},{"type":"Paragraph","children":[{"type":"Str","value":"对换通常发生在许多进程运行且内存吃紧的时候，操作系统负荷降低的时候，对换就会暂停。","loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":41}},"range":[604,645],"raw":"对换通常发生在许多进程运行且内存吃紧的时候，操作系统负荷降低的时候，对换就会暂停。"}],"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":41}},"range":[604,645],"raw":"对换通常发生在许多进程运行且内存吃紧的时候，操作系统负荷降低的时候，对换就会暂停。"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"对换的进程","loc":{"start":{"line":37,"column":4},"end":{"line":37,"column":9}},"range":[651,656],"raw":"对换的进程"}],"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":9}},"range":[647,656],"raw":"### 对换的进程"},{"type":"Paragraph","children":[{"type":"Str","value":"优先换出优先级低的进程，防止优先级低的进程饥饿，可以考虑进程在内存中驻留的时间。","loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":40}},"range":[658,698],"raw":"优先换出优先级低的进程，防止优先级低的进程饥饿，可以考虑进程在内存中驻留的时间。"}],"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":40}},"range":[658,698],"raw":"优先换出优先级低的进程，防止优先级低的进程饥饿，可以考虑进程在内存中驻留的时间。"}],"loc":{"start":{"line":1,"column":0},"end":{"line":39,"column":40}},"range":[0,698],"raw":"---\ntitle: '覆盖技术和交换技术'\ntags: ['操作系统','内存']\n---\n# 覆盖技术和交换技术\n\n## 覆盖技术\n\n将程序分为多个段（多个模块），常用的模块常驻内存，不常用的段，在需要的时候再调入内存。\n\n内存分为“固定区”和“覆盖区”，常驻内存的额段需要放在固定区内，其他段放在覆盖区内。\n\n根据程序的调用结构，对多个不可能同时被调用的程序段分配一个可覆盖的内存的区域，这个区域的大小根据最大的程序段定。\n\n缺点：必须由程序员定义程序的覆盖结构，操作系统完成自动覆盖，**对用户不透明，增加了用户的编程负担**。\n\n覆盖技术**只用于早期的操作系统**。\n\n*****\n\n## 交换技术\n\n当内存空间紧张的时候，操作系统将内存中某些进程暂时换出内存（**PCB还在内存中，放入挂起队列**），把外存中某些具备运行条件的进程换入内存（进程在内存和磁盘中动态调度）。\n\n### 对换区\n\n具有对换功能的操作系统中，通常把磁盘空间分为文件区和对换区，文件区用于存放文件，主要追求存储空间的利用率，对文件区空间的管理采用离散分配方式。\n\n对换区只占磁盘空间的小部分，被换出的进程的数据就存放在对换区，对换区的读写速度直接影响到操作系统的整体速度，因此对换区空间管理主要追求输入和输出的速度，对换区常采用连续分配的方式。\n\n**对换区的IO速度比文件区的IO更快**。\n\n### 对换的时机\n\n对换通常发生在许多进程运行且内存吃紧的时候，操作系统负荷降低的时候，对换就会暂停。\n\n### 对换的进程\n\n优先换出优先级低的进程，防止优先级低的进程饥饿，可以考虑进程在内存中驻留的时间。"},"catalogue":{"title":"覆盖技术和交换技术","json-path":"2020-08-16-覆盖技术.json","mdate":"2022-08-30T14:19:31.454Z","tags":["操作系统","内存"]}}