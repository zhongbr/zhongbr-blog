{"ast":{"type":"Document","children":[{"type":"Yaml","value":"tags: ['数据结构','树']","loc":{"start":{"line":1,"column":0},"end":{"line":3,"column":3}},"range":[0,26],"raw":"---\ntags: ['数据结构','树']\n---"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"树和树的定义","loc":{"start":{"line":5,"column":3},"end":{"line":5,"column":9}},"range":[31,37],"raw":"树和树的定义"}],"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":9}},"range":[28,37],"raw":"## 树和树的定义"},{"type":"BlockQuote","children":[{"type":"Paragraph","children":[{"type":"Str","value":"树是一种以分支关系定义的层次结构","loc":{"start":{"line":7,"column":2},"end":{"line":7,"column":18}},"range":[41,57],"raw":"树是一种以分支关系定义的层次结构"}],"loc":{"start":{"line":7,"column":2},"end":{"line":7,"column":18}},"range":[41,57],"raw":"树是一种以分支关系定义的层次结构"}],"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":18}},"range":[39,57],"raw":"> 树是一种以分支关系定义的层次结构"},{"type":"Paragraph","children":[{"type":"Str","value":"任何一棵非空的树：\n(1) 有且仅有一个根(Root)节点;\n(2) 当n>1时，其余结点可以分为若干个互不相交的子树;","loc":{"start":{"line":9,"column":0},"end":{"line":11,"column":29}},"range":[59,119],"raw":"任何一棵非空的树：\n(1) 有且仅有一个根(Root)节点;\n(2) 当n>1时，其余结点可以分为若干个互不相交的子树;"}],"loc":{"start":{"line":9,"column":0},"end":{"line":11,"column":29}},"range":[59,119],"raw":"任何一棵非空的树：\n(1) 有且仅有一个根(Root)节点;\n(2) 当n>1时，其余结点可以分为若干个互不相交的子树;"},{"type":"Paragraph","children":[{"type":"Str","value":"树的定义是一个递归定义，在树的定义中也用到了树的概念。","loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":27}},"range":[121,148],"raw":"树的定义是一个递归定义，在树的定义中也用到了树的概念。"}],"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":27}},"range":[121,148],"raw":"树的定义是一个递归定义，在树的定义中也用到了树的概念。"},{"type":"Paragraph","children":[{"type":"Strong","children":[{"type":"Str","value":"术语","loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":4}},"range":[152,154],"raw":"术语"}],"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":6}},"range":[150,156],"raw":"**术语**"}],"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":6}},"range":[150,156],"raw":"**术语**"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"结点：包含一个数据元素和若干个指向其他子树的分支","loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":26}},"range":[160,184],"raw":"结点：包含一个数据元素和若干个指向其他子树的分支"}],"loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":26}},"range":[160,184],"raw":"结点：包含一个数据元素和若干个指向其他子树的分支"}],"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":26}},"range":[158,184],"raw":"- 结点：包含一个数据元素和若干个指向其他子树的分支"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"结点度：结点拥有的子树的数目成为结点的度","loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":22}},"range":[187,207],"raw":"结点度：结点拥有的子树的数目成为结点的度"}],"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":22}},"range":[187,207],"raw":"结点度：结点拥有的子树的数目成为结点的度"}],"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":22}},"range":[185,207],"raw":"- 结点度：结点拥有的子树的数目成为结点的度"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"叶子结点（终端结点）：结点度为0的结点","loc":{"start":{"line":19,"column":2},"end":{"line":19,"column":21}},"range":[210,229],"raw":"叶子结点（终端结点）：结点度为0的结点"}],"loc":{"start":{"line":19,"column":2},"end":{"line":19,"column":21}},"range":[210,229],"raw":"叶子结点（终端结点）：结点度为0的结点"}],"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":21}},"range":[208,229],"raw":"- 叶子结点（终端结点）：结点度为0的结点"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"分支结点（非终端结点）：结点度不为0的结点","loc":{"start":{"line":20,"column":2},"end":{"line":20,"column":23}},"range":[232,253],"raw":"分支结点（非终端结点）：结点度不为0的结点"}],"loc":{"start":{"line":20,"column":2},"end":{"line":20,"column":23}},"range":[232,253],"raw":"分支结点（非终端结点）：结点度不为0的结点"}],"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":23}},"range":[230,253],"raw":"- 分支结点（非终端结点）：结点度不为0的结点"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"树的度：树内各个结点度的最大值","loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":17}},"range":[256,271],"raw":"树的度：树内各个结点度的最大值"}],"loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":17}},"range":[256,271],"raw":"树的度：树内各个结点度的最大值"}],"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":17}},"range":[254,271],"raw":"- 树的度：树内各个结点度的最大值"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"孩子、双亲：结点的子树的根节点称为该结点的孩子，该结点称为孩子的双亲","loc":{"start":{"line":22,"column":2},"end":{"line":22,"column":36}},"range":[274,308],"raw":"孩子、双亲：结点的子树的根节点称为该结点的孩子，该结点称为孩子的双亲"}],"loc":{"start":{"line":22,"column":2},"end":{"line":22,"column":36}},"range":[274,308],"raw":"孩子、双亲：结点的子树的根节点称为该结点的孩子，该结点称为孩子的双亲"}],"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":36}},"range":[272,308],"raw":"- 孩子、双亲：结点的子树的根节点称为该结点的孩子，该结点称为孩子的双亲"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"祖先、子孙：从根结点到该结点经过的所有分支的结点称为该结点的祖先，相应地以某结点为根的所有","loc":{"start":{"line":23,"column":2},"end":{"line":23,"column":47}},"range":[311,356],"raw":"祖先、子孙：从根结点到该结点经过的所有分支的结点称为该结点的祖先，相应地以某结点为根的所有"}],"loc":{"start":{"line":23,"column":2},"end":{"line":23,"column":47}},"range":[311,356],"raw":"祖先、子孙：从根结点到该结点经过的所有分支的结点称为该结点的祖先，相应地以某结点为根的所有"}],"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":47}},"range":[309,356],"raw":"- 祖先、子孙：从根结点到该结点经过的所有分支的结点称为该结点的祖先，相应地以某结点为根的所有"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"兄弟：同一个双亲的孩子称为兄弟","loc":{"start":{"line":24,"column":2},"end":{"line":24,"column":17}},"range":[359,374],"raw":"兄弟：同一个双亲的孩子称为兄弟"}],"loc":{"start":{"line":24,"column":2},"end":{"line":24,"column":17}},"range":[359,374],"raw":"兄弟：同一个双亲的孩子称为兄弟"}],"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":17}},"range":[357,374],"raw":"- 兄弟：同一个双亲的孩子称为兄弟"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"层次：从根开始，根结点为第1层，根结点的孩子为第2层······","loc":{"start":{"line":25,"column":2},"end":{"line":25,"column":34}},"range":[377,409],"raw":"层次：从根开始，根结点为第1层，根结点的孩子为第2层······"}],"loc":{"start":{"line":25,"column":2},"end":{"line":25,"column":34}},"range":[377,409],"raw":"层次：从根开始，根结点为第1层，根结点的孩子为第2层······"}],"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":34}},"range":[375,409],"raw":"- 层次：从根开始，根结点为第1层，根结点的孩子为第2层······"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"堂兄弟：双亲在同一层的结点互称为堂兄弟","loc":{"start":{"line":26,"column":2},"end":{"line":26,"column":21}},"range":[412,431],"raw":"堂兄弟：双亲在同一层的结点互称为堂兄弟"}],"loc":{"start":{"line":26,"column":2},"end":{"line":26,"column":21}},"range":[412,431],"raw":"堂兄弟：双亲在同一层的结点互称为堂兄弟"}],"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":21}},"range":[410,431],"raw":"- 堂兄弟：双亲在同一层的结点互称为堂兄弟"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"深度：树中结点的最大深度为树的深度","loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":19}},"range":[434,451],"raw":"深度：树中结点的最大深度为树的深度"}],"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":19}},"range":[434,451],"raw":"深度：树中结点的最大深度为树的深度"}],"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":19}},"range":[432,451],"raw":"- 深度：树中结点的最大深度为树的深度"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"有序树、无序树：树中各个结点的子树从左到右是有次序的，不可以互换的则称为有序树，否则称为无序树","loc":{"start":{"line":28,"column":2},"end":{"line":28,"column":49}},"range":[454,501],"raw":"有序树、无序树：树中各个结点的子树从左到右是有次序的，不可以互换的则称为有序树，否则称为无序树"}],"loc":{"start":{"line":28,"column":2},"end":{"line":28,"column":49}},"range":[454,501],"raw":"有序树、无序树：树中各个结点的子树从左到右是有次序的，不可以互换的则称为有序树，否则称为无序树"}],"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":49}},"range":[452,501],"raw":"- 有序树、无序树：树中各个结点的子树从左到右是有次序的，不可以互换的则称为有序树，否则称为无序树"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"森林：若干棵互不相交树的集合","loc":{"start":{"line":29,"column":2},"end":{"line":29,"column":16}},"range":[504,518],"raw":"森林：若干棵互不相交树的集合"}],"loc":{"start":{"line":29,"column":2},"end":{"line":29,"column":16}},"range":[504,518],"raw":"森林：若干棵互不相交树的集合"}],"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":16}},"range":[502,518],"raw":"- 森林：若干棵互不相交树的集合"}],"loc":{"start":{"line":17,"column":0},"end":{"line":29,"column":16}},"range":[158,518],"raw":"- 结点：包含一个数据元素和若干个指向其他子树的分支\n- 结点度：结点拥有的子树的数目成为结点的度\n- 叶子结点（终端结点）：结点度为0的结点\n- 分支结点（非终端结点）：结点度不为0的结点\n- 树的度：树内各个结点度的最大值\n- 孩子、双亲：结点的子树的根节点称为该结点的孩子，该结点称为孩子的双亲\n- 祖先、子孙：从根结点到该结点经过的所有分支的结点称为该结点的祖先，相应地以某结点为根的所有\n- 兄弟：同一个双亲的孩子称为兄弟\n- 层次：从根开始，根结点为第1层，根结点的孩子为第2层······\n- 堂兄弟：双亲在同一层的结点互称为堂兄弟\n- 深度：树中结点的最大深度为树的深度\n- 有序树、无序树：树中各个结点的子树从左到右是有次序的，不可以互换的则称为有序树，否则称为无序树\n- 森林：若干棵互不相交树的集合"},{"type":"Paragraph","children":[{"type":"Str","value":"任何一棵树都是一个二元组$$Tree=(root,F)$$，root是数据元素，称为该树的根节点，$$F=(T_{1},T_{2},......,T_{m})$$是有m棵树的森林，$$T_{i}=(r_{i},F_{i})$$称为root的第i棵子树。","loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":126}},"range":[520,646],"raw":"任何一棵树都是一个二元组$$Tree=(root,F)$$，root是数据元素，称为该树的根节点，$$F=(T_{1},T_{2},......,T_{m})$$是有m棵树的森林，$$T_{i}=(r_{i},F_{i})$$称为root的第i棵子树。"}],"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":126}},"range":[520,646],"raw":"任何一棵树都是一个二元组$$Tree=(root,F)$$，root是数据元素，称为该树的根节点，$$F=(T_{1},T_{2},......,T_{m})$$是有m棵树的森林，$$T_{i}=(r_{i},F_{i})$$称为root的第i棵子树。"}],"loc":{"start":{"line":1,"column":0},"end":{"line":31,"column":126}},"range":[0,646],"raw":"---\ntags: ['数据结构','树']\n---\n\n## 树和树的定义\n\n> 树是一种以分支关系定义的层次结构\n\n任何一棵非空的树：\n(1) 有且仅有一个根(Root)节点;\n(2) 当n>1时，其余结点可以分为若干个互不相交的子树;\n\n树的定义是一个递归定义，在树的定义中也用到了树的概念。\n\n**术语**\n\n- 结点：包含一个数据元素和若干个指向其他子树的分支\n- 结点度：结点拥有的子树的数目成为结点的度\n- 叶子结点（终端结点）：结点度为0的结点\n- 分支结点（非终端结点）：结点度不为0的结点\n- 树的度：树内各个结点度的最大值\n- 孩子、双亲：结点的子树的根节点称为该结点的孩子，该结点称为孩子的双亲\n- 祖先、子孙：从根结点到该结点经过的所有分支的结点称为该结点的祖先，相应地以某结点为根的所有\n- 兄弟：同一个双亲的孩子称为兄弟\n- 层次：从根开始，根结点为第1层，根结点的孩子为第2层······\n- 堂兄弟：双亲在同一层的结点互称为堂兄弟\n- 深度：树中结点的最大深度为树的深度\n- 有序树、无序树：树中各个结点的子树从左到右是有次序的，不可以互换的则称为有序树，否则称为无序树\n- 森林：若干棵互不相交树的集合\n\n任何一棵树都是一个二元组$$Tree=(root,F)$$，root是数据元素，称为该树的根节点，$$F=(T_{1},T_{2},......,T_{m})$$是有m棵树的森林，$$T_{i}=(r_{i},F_{i})$$称为root的第i棵子树。"},"catalogue":{"title":"2020-07-25-树和树的定义","json-path":"2020-07-25-树和树的定义.json","mdate":"2022-08-30T14:19:31.448Z","tags":["数据结构","树"]}}