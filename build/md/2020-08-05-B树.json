{"ast":{"type":"Document","children":[{"type":"Yaml","value":"title: 'B树和B+树'\ntags: ['数据结构','B树','B+树']","loc":{"start":{"line":1,"column":0},"end":{"line":4,"column":3}},"range":[0,49],"raw":"---\ntitle: 'B树和B+树'\ntags: ['数据结构','B树','B+树']\n---"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"B树","loc":{"start":{"line":5,"column":3},"end":{"line":5,"column":5}},"range":[53,55],"raw":"B树"}],"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":5}},"range":[50,55],"raw":"## B树"},{"type":"Paragraph","children":[{"type":"Str","value":"又称多路平衡查找树，B树中所有结点的","loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":18}},"range":[57,75],"raw":"又称多路平衡查找树，B树中所有结点的"},{"type":"Strong","children":[{"type":"Str","value":"孩子结点数","loc":{"start":{"line":7,"column":20},"end":{"line":7,"column":25}},"range":[77,82],"raw":"孩子结点数"}],"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":27}},"range":[75,84],"raw":"**孩子结点数**"},{"type":"Str","value":"的最大值称为B树的阶。","loc":{"start":{"line":7,"column":27},"end":{"line":7,"column":38}},"range":[84,95],"raw":"的最大值称为B树的阶。"}],"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"range":[57,95],"raw":"又称多路平衡查找树，B树中所有结点的**孩子结点数**的最大值称为B树的阶。"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"B树的特征","loc":{"start":{"line":9,"column":4},"end":{"line":9,"column":9}},"range":[101,106],"raw":"B树的特征"}],"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":9}},"range":[97,106],"raw":"### B树的特征"},{"type":"Paragraph","children":[{"type":"Str","value":"一棵m阶B树或为空树，或满足如下的条件的m叉树：","loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":24}},"range":[108,132],"raw":"一棵m阶B树或为空树，或满足如下的条件的m叉树："}],"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":24}},"range":[108,132],"raw":"一棵m阶B树或为空树，或满足如下的条件的m叉树："},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"树中每个结点至多有m棵子树（至多含有m-1个关键字）","loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":28}},"range":[136,162],"raw":"树中每个结点至多有m棵子树（至多含有m-1个关键字）"}],"loc":{"start":{"line":13,"column":2},"end":{"line":13,"column":28}},"range":[136,162],"raw":"树中每个结点至多有m棵子树（至多含有m-1个关键字）"}],"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}},"range":[134,162],"raw":"- 树中每个结点至多有m棵子树（至多含有m-1个关键字）"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"若根结点不是终端节点，则至少有两棵子树","loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":21}},"range":[165,184],"raw":"若根结点不是终端节点，则至少有两棵子树"}],"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":21}},"range":[165,184],"raw":"若根结点不是终端节点，则至少有两棵子树"}],"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":21}},"range":[163,184],"raw":"- 若根结点不是终端节点，则至少有两棵子树"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"除根结点外的所有非叶节点至少有$\\lceil\\frac{m}{2}\\rceil$棵子树（即$\\lceil\\frac{m}{2}\\rceil-1$个关键字）","loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":79}},"range":[187,264],"raw":"除根结点外的所有非叶节点至少有$\\lceil\\frac{m}{2}\\rceil$棵子树（即$\\lceil\\frac{m}{2}\\rceil-1$个关键字）"}],"loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":79}},"range":[187,264],"raw":"除根结点外的所有非叶节点至少有$\\lceil\\frac{m}{2}\\rceil$棵子树（即$\\lceil\\frac{m}{2}\\rceil-1$个关键字）"}],"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":79}},"range":[185,264],"raw":"- 除根结点外的所有非叶节点至少有$\\lceil\\frac{m}{2}\\rceil$棵子树（即$\\lceil\\frac{m}{2}\\rceil-1$个关键字）"},{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"非叶节点的结构：","loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":10}},"range":[267,275],"raw":"非叶节点的结构："}],"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":10}},"range":[267,275],"raw":"非叶节点的结构："},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/08/05/dKoNO94ETnPbMRv.png","alt":"quicker_f986338d-c707-4935-8160-23c73da328ee.png","loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":104}},"range":[279,381],"raw":"![quicker_f986338d-c707-4935-8160-23c73da328ee.png](https://i.loli.net/2020/08/05/dKoNO94ETnPbMRv.png)"}],"loc":{"start":{"line":18,"column":2},"end":{"line":18,"column":104}},"range":[279,381],"raw":"![quicker_f986338d-c707-4935-8160-23c73da328ee.png](https://i.loli.net/2020/08/05/dKoNO94ETnPbMRv.png)"},{"type":"Paragraph","children":[{"type":"Str","value":"$K_{i};(i=1,2,...,n)$为结点的关键字，$K1<K2<...<Kn$，\n$P_{i}(i=0,1,...,n)$为指向子树根节点的指针，$P_{i}-1$所指子树的关键字均小于$K_{i}$，$P_{i}$所指子树的关键字均大于$K_{i}$。","loc":{"start":{"line":20,"column":2},"end":{"line":21,"column":88}},"range":[385,519],"raw":"$K_{i}\\;(i=1,2,...,n)$为结点的关键字，$K1<K2<...<Kn$，\n  $P_{i}(i=0,1,...,n)$为指向子树根节点的指针，$P_{i}-1$所指子树的关键字均小于$K_{i}$，$P_{i}$所指子树的关键字均大于$K_{i}$。"}],"loc":{"start":{"line":20,"column":2},"end":{"line":21,"column":88}},"range":[385,519],"raw":"$K_{i}\\;(i=1,2,...,n)$为结点的关键字，$K1<K2<...<Kn$，\n  $P_{i}(i=0,1,...,n)$为指向子树根节点的指针，$P_{i}-1$所指子树的关键字均小于$K_{i}$，$P_{i}$所指子树的关键字均大于$K_{i}$。"}],"loc":{"start":{"line":16,"column":0},"end":{"line":21,"column":88}},"range":[265,519],"raw":"- 非叶节点的结构：\n\n  ![quicker_f986338d-c707-4935-8160-23c73da328ee.png](https://i.loli.net/2020/08/05/dKoNO94ETnPbMRv.png)\n\n  $K_{i}\\;(i=1,2,...,n)$为结点的关键字，$K1<K2<...<Kn$，\n  $P_{i}(i=0,1,...,n)$为指向子树根节点的指针，$P_{i}-1$所指子树的关键字均小于$K_{i}$，$P_{i}$所指子树的关键字均大于$K_{i}$。"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"所有的叶节点都出现在同一层次上，不携带任何信息","loc":{"start":{"line":22,"column":2},"end":{"line":22,"column":25}},"range":[522,545],"raw":"所有的叶节点都出现在同一层次上，不携带任何信息"}],"loc":{"start":{"line":22,"column":2},"end":{"line":22,"column":25}},"range":[522,545],"raw":"所有的叶节点都出现在同一层次上，不携带任何信息"}],"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":25}},"range":[520,545],"raw":"- 所有的叶节点都出现在同一层次上，不携带任何信息"}],"loc":{"start":{"line":13,"column":0},"end":{"line":22,"column":25}},"range":[134,545],"raw":"- 树中每个结点至多有m棵子树（至多含有m-1个关键字）\n- 若根结点不是终端节点，则至少有两棵子树\n- 除根结点外的所有非叶节点至少有$\\lceil\\frac{m}{2}\\rceil$棵子树（即$\\lceil\\frac{m}{2}\\rceil-1$个关键字）\n- 非叶节点的结构：\n\n  ![quicker_f986338d-c707-4935-8160-23c73da328ee.png](https://i.loli.net/2020/08/05/dKoNO94ETnPbMRv.png)\n\n  $K_{i}\\;(i=1,2,...,n)$为结点的关键字，$K1<K2<...<Kn$，\n  $P_{i}(i=0,1,...,n)$为指向子树根节点的指针，$P_{i}-1$所指子树的关键字均小于$K_{i}$，$P_{i}$所指子树的关键字均大于$K_{i}$。\n- 所有的叶节点都出现在同一层次上，不携带任何信息"},{"type":"Paragraph","children":[{"type":"Str","value":"n个关键字，阶数为m的b树，其高度h满足：","loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":21}},"range":[547,568],"raw":"n个关键字，阶数为m的b树，其高度h满足："}],"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":21}},"range":[547,568],"raw":"n个关键字，阶数为m的b树，其高度h满足："},{"type":"Paragraph","children":[{"type":"Str","value":"$log_{m}(n+1)\\leq h \\leq \\left (log_{\\lceil \\frac{m}{2} \\rceil}\\frac{n+1}{2}\\right )+1$","loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":87}},"range":[570,657],"raw":"$log_{m}(n+1)\\leq h \\leq \\left (log_{\\lceil \\frac{m}{2} \\rceil}\\frac{n+1}{2}\\right )+1$"}],"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":87}},"range":[570,657],"raw":"$log_{m}(n+1)\\leq h \\leq \\left (log_{\\lceil \\frac{m}{2} \\rceil}\\frac{n+1}{2}\\right )+1$"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"B树的查找操作","loc":{"start":{"line":28,"column":4},"end":{"line":28,"column":11}},"range":[663,670],"raw":"B树的查找操作"}],"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":11}},"range":[659,670],"raw":"### B树的查找操作"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"在B树中查找关键字所在的结点","loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":16}},"range":[674,688],"raw":"在B树中查找关键字所在的结点"}],"loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":16}},"range":[674,688],"raw":"在B树中查找关键字所在的结点"}],"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":16}},"range":[672,688],"raw":"- 在B树中查找关键字所在的结点"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"在结点中查找关键字","loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":11}},"range":[691,700],"raw":"在结点中查找关键字"}],"loc":{"start":{"line":31,"column":2},"end":{"line":31,"column":11}},"range":[691,700],"raw":"在结点中查找关键字"}],"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":11}},"range":[689,700],"raw":"- 在结点中查找关键字"}],"loc":{"start":{"line":30,"column":0},"end":{"line":31,"column":11}},"range":[672,700],"raw":"- 在B树中查找关键字所在的结点\n- 在结点中查找关键字"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"B树的插入操作","loc":{"start":{"line":33,"column":4},"end":{"line":33,"column":11}},"range":[706,713],"raw":"B树的插入操作"}],"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":11}},"range":[702,713],"raw":"### B树的插入操作"},{"type":"List","ordered":false,"start":null,"spread":true,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"定位\n查找插入该关键字的位置，最底层中非叶子节点","loc":{"start":{"line":35,"column":2},"end":{"line":36,"column":23}},"range":[717,743],"raw":"定位\n  查找插入该关键字的位置，最底层中非叶子节点"}],"loc":{"start":{"line":35,"column":2},"end":{"line":36,"column":23}},"range":[717,743],"raw":"定位\n  查找插入该关键字的位置，最底层中非叶子节点"}],"loc":{"start":{"line":35,"column":0},"end":{"line":36,"column":23}},"range":[715,743],"raw":"- 定位\n  查找插入该关键字的位置，最底层中非叶子节点"},{"type":"ListItem","spread":true,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"插入","loc":{"start":{"line":38,"column":2},"end":{"line":38,"column":4}},"range":[747,749],"raw":"插入"}],"loc":{"start":{"line":38,"column":2},"end":{"line":38,"column":4}},"range":[747,749],"raw":"插入"},{"type":"Paragraph","children":[{"type":"Str","value":"若插入后不会破坏m阶二叉树的定义，即插入后关键字的个数在区间$[\\lceil \\frac{m}{2} \\rceil, m-1]$，则直接插入。","loc":{"start":{"line":40,"column":2},"end":{"line":40,"column":73}},"range":[753,824],"raw":"若插入后不会破坏m阶二叉树的定义，即插入后关键字的个数在区间$[\\lceil \\frac{m}{2} \\rceil, m-1]$，则直接插入。"}],"loc":{"start":{"line":40,"column":2},"end":{"line":40,"column":73}},"range":[753,824],"raw":"若插入后不会破坏m阶二叉树的定义，即插入后关键字的个数在区间$[\\lceil \\frac{m}{2} \\rceil, m-1]$，则直接插入。"},{"type":"Paragraph","children":[{"type":"Str","value":"若插入后，关键字的数量大于m-1。则对插入后的结点进行分裂操作；","loc":{"start":{"line":42,"column":2},"end":{"line":42,"column":34}},"range":[828,860],"raw":"若插入后，关键字的数量大于m-1。则对插入后的结点进行分裂操作；"}],"loc":{"start":{"line":42,"column":2},"end":{"line":42,"column":34}},"range":[828,860],"raw":"若插入后，关键字的数量大于m-1。则对插入后的结点进行分裂操作；"},{"type":"Paragraph","children":[{"type":"Str","value":"分裂：插入后的结点中间位置$(\\lceil \\frac{m}{2} \\rceil)$关键字并入父结点中，\n中间位置左侧的结点留在原先结点中，右侧的结点放入新的结点中，\n若并入父结点后，父节点关键字数量超出范围，向上继续分裂，知道符合要求为止（如果需要对根节点分裂，树的高度+1）。","loc":{"start":{"line":44,"column":2},"end":{"line":46,"column":58}},"range":[864,1008],"raw":"分裂：插入后的结点中间位置$(\\lceil \\frac{m}{2} \\rceil)$关键字并入父结点中，\n  中间位置左侧的结点留在原先结点中，右侧的结点放入新的结点中，\n  若并入父结点后，父节点关键字数量超出范围，向上继续分裂，知道符合要求为止（如果需要对根节点分裂，树的高度+1）。"}],"loc":{"start":{"line":44,"column":2},"end":{"line":46,"column":58}},"range":[864,1008],"raw":"分裂：插入后的结点中间位置$(\\lceil \\frac{m}{2} \\rceil)$关键字并入父结点中，\n  中间位置左侧的结点留在原先结点中，右侧的结点放入新的结点中，\n  若并入父结点后，父节点关键字数量超出范围，向上继续分裂，知道符合要求为止（如果需要对根节点分裂，树的高度+1）。"}],"loc":{"start":{"line":38,"column":0},"end":{"line":46,"column":58}},"range":[745,1008],"raw":"- 插入\n\n  若插入后不会破坏m阶二叉树的定义，即插入后关键字的个数在区间$[\\lceil \\frac{m}{2} \\rceil, m-1]$，则直接插入。\n\n  若插入后，关键字的数量大于m-1。则对插入后的结点进行分裂操作；\n\n  分裂：插入后的结点中间位置$(\\lceil \\frac{m}{2} \\rceil)$关键字并入父结点中，\n  中间位置左侧的结点留在原先结点中，右侧的结点放入新的结点中，\n  若并入父结点后，父节点关键字数量超出范围，向上继续分裂，知道符合要求为止（如果需要对根节点分裂，树的高度+1）。"}],"loc":{"start":{"line":35,"column":0},"end":{"line":46,"column":58}},"range":[715,1008],"raw":"- 定位\n  查找插入该关键字的位置，最底层中非叶子节点\n\n- 插入\n\n  若插入后不会破坏m阶二叉树的定义，即插入后关键字的个数在区间$[\\lceil \\frac{m}{2} \\rceil, m-1]$，则直接插入。\n\n  若插入后，关键字的数量大于m-1。则对插入后的结点进行分裂操作；\n\n  分裂：插入后的结点中间位置$(\\lceil \\frac{m}{2} \\rceil)$关键字并入父结点中，\n  中间位置左侧的结点留在原先结点中，右侧的结点放入新的结点中，\n  若并入父结点后，父节点关键字数量超出范围，向上继续分裂，知道符合要求为止（如果需要对根节点分裂，树的高度+1）。"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"B树的删除操作","loc":{"start":{"line":48,"column":4},"end":{"line":48,"column":11}},"range":[1014,1021],"raw":"B树的删除操作"}],"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":11}},"range":[1010,1021],"raw":"### B树的删除操作"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"删除叶子结点中的关键字","loc":{"start":{"line":50,"column":5},"end":{"line":50,"column":16}},"range":[1028,1039],"raw":"删除叶子结点中的关键字"}],"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":16}},"range":[1023,1039],"raw":"#### 删除叶子结点中的关键字"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"直接删除：若被删除的关键字所在的结点的关键字个数 > $\\lceil \\frac{m}{2} \\rceil - 1$，表明删除后仍满足B树的定义，直接删除。","loc":{"start":{"line":52,"column":2},"end":{"line":52,"column":80}},"range":[1043,1121],"raw":"直接删除：若被删除的关键字所在的结点的关键字个数 > $\\lceil \\frac{m}{2} \\rceil - 1$，表明删除后仍满足B树的定义，直接删除。"}],"loc":{"start":{"line":52,"column":2},"end":{"line":52,"column":80}},"range":[1043,1121],"raw":"直接删除：若被删除的关键字所在的结点的关键字个数 > $\\lceil \\frac{m}{2} \\rceil - 1$，表明删除后仍满足B树的定义，直接删除。"}],"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":80}},"range":[1041,1121],"raw":"- 直接删除：若被删除的关键字所在的结点的关键字个数 > $\\lceil \\frac{m}{2} \\rceil - 1$，表明删除后仍满足B树的定义，直接删除。"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"兄弟够借：若被删除的关键字所在的结点的关键字个数 = $\\lceil \\frac{m}{2} \\rceil - 1$，且与此结点邻近的兄弟结点的关键字个数 $\\leq \\lceil \\frac{m}{2} \\rceil$，则需要从兄弟结点借一个关键字，此过程需要调整该结点、双亲结点和兄弟结点的关键字。","loc":{"start":{"line":53,"column":2},"end":{"line":53,"column":153}},"range":[1124,1275],"raw":"兄弟够借：若被删除的关键字所在的结点的关键字个数 = $\\lceil \\frac{m}{2} \\rceil - 1$，且与此结点邻近的兄弟结点的关键字个数 $\\leq \\lceil \\frac{m}{2} \\rceil$，则需要从兄弟结点借一个关键字，此过程需要调整该结点、双亲结点和兄弟结点的关键字。"}],"loc":{"start":{"line":53,"column":2},"end":{"line":53,"column":153}},"range":[1124,1275],"raw":"兄弟够借：若被删除的关键字所在的结点的关键字个数 = $\\lceil \\frac{m}{2} \\rceil - 1$，且与此结点邻近的兄弟结点的关键字个数 $\\leq \\lceil \\frac{m}{2} \\rceil$，则需要从兄弟结点借一个关键字，此过程需要调整该结点、双亲结点和兄弟结点的关键字。"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"从左（右）边的兄弟结点借：将其双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字放入到要删除关键字的结点的最左（右）边，然后将其左边兄弟结点中最大（小）的关键字放入到双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字中。","loc":{"start":{"line":54,"column":4},"end":{"line":54,"column":130}},"range":[1280,1406],"raw":"从左（右）边的兄弟结点借：将其双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字放入到要删除关键字的结点的最左（右）边，然后将其左边兄弟结点中最大（小）的关键字放入到双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字中。"}],"loc":{"start":{"line":54,"column":4},"end":{"line":54,"column":130}},"range":[1280,1406],"raw":"从左（右）边的兄弟结点借：将其双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字放入到要删除关键字的结点的最左（右）边，然后将其左边兄弟结点中最大（小）的关键字放入到双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字中。"}],"loc":{"start":{"line":54,"column":2},"end":{"line":54,"column":130}},"range":[1278,1406],"raw":"- 从左（右）边的兄弟结点借：将其双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字放入到要删除关键字的结点的最左（右）边，然后将其左边兄弟结点中最大（小）的关键字放入到双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字中。"}],"loc":{"start":{"line":54,"column":2},"end":{"line":54,"column":130}},"range":[1278,1406],"raw":"- 从左（右）边的兄弟结点借：将其双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字放入到要删除关键字的结点的最左（右）边，然后将其左边兄弟结点中最大（小）的关键字放入到双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字中。"}],"loc":{"start":{"line":53,"column":0},"end":{"line":54,"column":130}},"range":[1122,1406],"raw":"- 兄弟够借：若被删除的关键字所在的结点的关键字个数 = $\\lceil \\frac{m}{2} \\rceil - 1$，且与此结点邻近的兄弟结点的关键字个数 $\\leq \\lceil \\frac{m}{2} \\rceil$，则需要从兄弟结点借一个关键字，此过程需要调整该结点、双亲结点和兄弟结点的关键字。\n  - 从左（右）边的兄弟结点借：将其双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字放入到要删除关键字的结点的最左（右）边，然后将其左边兄弟结点中最大（小）的关键字放入到双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字中。"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"兄弟不够借：若被删除的关键字所在的结点关键字总数=$\\lceil \\frac{m}{2} \\rceil - 1$，且与该结点临近的兄弟结点的关键字总数均=$\\lceil \\frac{m}{2} \\rceil - 1$，则删除要删除的关键字，并与其中一个不够借的兄弟结点和双亲结点中被两兄弟夹住的关键字合并。若合并后双亲结点因减少一个结点而导致不符合定义，则继续执行2，3步骤。","loc":{"start":{"line":55,"column":2},"end":{"line":55,"column":190}},"range":[1409,1597],"raw":"兄弟不够借：若被删除的关键字所在的结点关键字总数=$\\lceil \\frac{m}{2} \\rceil - 1$，且与该结点临近的兄弟结点的关键字总数均=$\\lceil \\frac{m}{2} \\rceil - 1$，则删除要删除的关键字，并与其中一个不够借的兄弟结点和双亲结点中被两兄弟夹住的关键字合并。若合并后双亲结点因减少一个结点而导致不符合定义，则继续执行2，3步骤。"}],"loc":{"start":{"line":55,"column":2},"end":{"line":55,"column":190}},"range":[1409,1597],"raw":"兄弟不够借：若被删除的关键字所在的结点关键字总数=$\\lceil \\frac{m}{2} \\rceil - 1$，且与该结点临近的兄弟结点的关键字总数均=$\\lceil \\frac{m}{2} \\rceil - 1$，则删除要删除的关键字，并与其中一个不够借的兄弟结点和双亲结点中被两兄弟夹住的关键字合并。若合并后双亲结点因减少一个结点而导致不符合定义，则继续执行2，3步骤。"}],"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":190}},"range":[1407,1597],"raw":"- 兄弟不够借：若被删除的关键字所在的结点关键字总数=$\\lceil \\frac{m}{2} \\rceil - 1$，且与该结点临近的兄弟结点的关键字总数均=$\\lceil \\frac{m}{2} \\rceil - 1$，则删除要删除的关键字，并与其中一个不够借的兄弟结点和双亲结点中被两兄弟夹住的关键字合并。若合并后双亲结点因减少一个结点而导致不符合定义，则继续执行2，3步骤。"}],"loc":{"start":{"line":52,"column":0},"end":{"line":55,"column":190}},"range":[1041,1597],"raw":"- 直接删除：若被删除的关键字所在的结点的关键字个数 > $\\lceil \\frac{m}{2} \\rceil - 1$，表明删除后仍满足B树的定义，直接删除。\n- 兄弟够借：若被删除的关键字所在的结点的关键字个数 = $\\lceil \\frac{m}{2} \\rceil - 1$，且与此结点邻近的兄弟结点的关键字个数 $\\leq \\lceil \\frac{m}{2} \\rceil$，则需要从兄弟结点借一个关键字，此过程需要调整该结点、双亲结点和兄弟结点的关键字。\n  - 从左（右）边的兄弟结点借：将其双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字放入到要删除关键字的结点的最左（右）边，然后将其左边兄弟结点中最大（小）的关键字放入到双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字中。\n- 兄弟不够借：若被删除的关键字所在的结点关键字总数=$\\lceil \\frac{m}{2} \\rceil - 1$，且与该结点临近的兄弟结点的关键字总数均=$\\lceil \\frac{m}{2} \\rceil - 1$，则删除要删除的关键字，并与其中一个不够借的兄弟结点和双亲结点中被两兄弟夹住的关键字合并。若合并后双亲结点因减少一个结点而导致不符合定义，则继续执行2，3步骤。"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"删除非叶子结点中的关键字","loc":{"start":{"line":57,"column":5},"end":{"line":57,"column":17}},"range":[1604,1616],"raw":"删除非叶子结点中的关键字"}],"loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":17}},"range":[1599,1616],"raw":"#### 删除非叶子结点中的关键字"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"若小于k的子树中关键字的个数>$\\lceil \\frac{m}{2} \\rceil - 1$，找出k的前驱值$k'$，取代k，然后递归删除$k'$即可。","loc":{"start":{"line":59,"column":2},"end":{"line":59,"column":78}},"range":[1620,1696],"raw":"若小于k的子树中关键字的个数>$\\lceil \\frac{m}{2} \\rceil - 1$，找出k的前驱值$k'$，取代k，然后递归删除$k'$即可。"}],"loc":{"start":{"line":59,"column":2},"end":{"line":59,"column":78}},"range":[1620,1696],"raw":"若小于k的子树中关键字的个数>$\\lceil \\frac{m}{2} \\rceil - 1$，找出k的前驱值$k'$，取代k，然后递归删除$k'$即可。"}],"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":78}},"range":[1618,1696],"raw":"- 若小于k的子树中关键字的个数>$\\lceil \\frac{m}{2} \\rceil - 1$，找出k的前驱值$k'$，取代k，然后递归删除$k'$即可。"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"若大于k的子树中关键字的个数>$\\lceil \\frac{m}{2} \\rceil - 1$，找出k的后继值$k'$，取代k，然后递归删除$k'$即可。","loc":{"start":{"line":60,"column":2},"end":{"line":60,"column":78}},"range":[1699,1775],"raw":"若大于k的子树中关键字的个数>$\\lceil \\frac{m}{2} \\rceil - 1$，找出k的后继值$k'$，取代k，然后递归删除$k'$即可。"}],"loc":{"start":{"line":60,"column":2},"end":{"line":60,"column":78}},"range":[1699,1775],"raw":"若大于k的子树中关键字的个数>$\\lceil \\frac{m}{2} \\rceil - 1$，找出k的后继值$k'$，取代k，然后递归删除$k'$即可。"}],"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":78}},"range":[1697,1775],"raw":"- 若大于k的子树中关键字的个数>$\\lceil \\frac{m}{2} \\rceil - 1$，找出k的后继值$k'$，取代k，然后递归删除$k'$即可。"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"若前后两个子树的关键字的个数均为$\\lceil \\frac{m}{2} \\rceil - 1$，则将前后两子树合并，然后删除k即可。","loc":{"start":{"line":61,"column":2},"end":{"line":61,"column":68}},"range":[1778,1844],"raw":"若前后两个子树的关键字的个数均为$\\lceil \\frac{m}{2} \\rceil - 1$，则将前后两子树合并，然后删除k即可。"}],"loc":{"start":{"line":61,"column":2},"end":{"line":61,"column":68}},"range":[1778,1844],"raw":"若前后两个子树的关键字的个数均为$\\lceil \\frac{m}{2} \\rceil - 1$，则将前后两子树合并，然后删除k即可。"}],"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":68}},"range":[1776,1844],"raw":"- 若前后两个子树的关键字的个数均为$\\lceil \\frac{m}{2} \\rceil - 1$，则将前后两子树合并，然后删除k即可。"}],"loc":{"start":{"line":59,"column":0},"end":{"line":61,"column":68}},"range":[1618,1844],"raw":"- 若小于k的子树中关键字的个数>$\\lceil \\frac{m}{2} \\rceil - 1$，找出k的前驱值$k'$，取代k，然后递归删除$k'$即可。\n- 若大于k的子树中关键字的个数>$\\lceil \\frac{m}{2} \\rceil - 1$，找出k的后继值$k'$，取代k，然后递归删除$k'$即可。\n- 若前后两个子树的关键字的个数均为$\\lceil \\frac{m}{2} \\rceil - 1$，则将前后两子树合并，然后删除k即可。"},{"type":"HorizontalRule","loc":{"start":{"line":63,"column":0},"end":{"line":63,"column":33}},"range":[1846,1879],"raw":"*********************************"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"B+树","loc":{"start":{"line":65,"column":3},"end":{"line":65,"column":6}},"range":[1884,1887],"raw":"B+树"}],"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":6}},"range":[1881,1887],"raw":"## B+树"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"B+树的概念","loc":{"start":{"line":67,"column":4},"end":{"line":67,"column":10}},"range":[1893,1899],"raw":"B+树的概念"}],"loc":{"start":{"line":67,"column":0},"end":{"line":67,"column":10}},"range":[1889,1899],"raw":"### B+树的概念"},{"type":"Paragraph","children":[{"type":"Str","value":"一棵m阶B+树需要满足如下的条件：","loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":17}},"range":[1901,1918],"raw":"一棵m阶B+树需要满足如下的条件："}],"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":17}},"range":[1901,1918],"raw":"一棵m阶B+树需要满足如下的条件："},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"每个分支结点最多有m棵子树；","loc":{"start":{"line":71,"column":2},"end":{"line":71,"column":16}},"range":[1922,1936],"raw":"每个分支结点最多有m棵子树；"}],"loc":{"start":{"line":71,"column":2},"end":{"line":71,"column":16}},"range":[1922,1936],"raw":"每个分支结点最多有m棵子树；"}],"loc":{"start":{"line":71,"column":0},"end":{"line":71,"column":16}},"range":[1920,1936],"raw":"- 每个分支结点最多有m棵子树；"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"非叶根结点至少有两棵子树，其他每个分支结点至少$\\lceil \\frac{m}{2} \\rceil$棵子树；","loc":{"start":{"line":72,"column":2},"end":{"line":72,"column":56}},"range":[1939,1993],"raw":"非叶根结点至少有两棵子树，其他每个分支结点至少$\\lceil \\frac{m}{2} \\rceil$棵子树；"}],"loc":{"start":{"line":72,"column":2},"end":{"line":72,"column":56}},"range":[1939,1993],"raw":"非叶根结点至少有两棵子树，其他每个分支结点至少$\\lceil \\frac{m}{2} \\rceil$棵子树；"}],"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":56}},"range":[1937,1993],"raw":"- 非叶根结点至少有两棵子树，其他每个分支结点至少$\\lceil \\frac{m}{2} \\rceil$棵子树；"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"结点的子树个数与关键字个数相等；","loc":{"start":{"line":73,"column":2},"end":{"line":73,"column":18}},"range":[1996,2012],"raw":"结点的子树个数与关键字个数相等；"}],"loc":{"start":{"line":73,"column":2},"end":{"line":73,"column":18}},"range":[1996,2012],"raw":"结点的子树个数与关键字个数相等；"}],"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":18}},"range":[1994,2012],"raw":"- 结点的子树个数与关键字个数相等；"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"所有叶子结点包含全部关键字及指向相应记录的指针，叶节点中将关键字按照大小顺序排列，相邻叶节点按照大小顺序相连接；","loc":{"start":{"line":74,"column":2},"end":{"line":74,"column":58}},"range":[2015,2071],"raw":"所有叶子结点包含全部关键字及指向相应记录的指针，叶节点中将关键字按照大小顺序排列，相邻叶节点按照大小顺序相连接；"}],"loc":{"start":{"line":74,"column":2},"end":{"line":74,"column":58}},"range":[2015,2071],"raw":"所有叶子结点包含全部关键字及指向相应记录的指针，叶节点中将关键字按照大小顺序排列，相邻叶节点按照大小顺序相连接；"}],"loc":{"start":{"line":74,"column":0},"end":{"line":74,"column":58}},"range":[2013,2071],"raw":"- 所有叶子结点包含全部关键字及指向相应记录的指针，叶节点中将关键字按照大小顺序排列，相邻叶节点按照大小顺序相连接；"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"所有分支结点（可视为索引的索引）中仅包含它们的子结点（即下一级的索引块）中的关键字的最大值，及指向其子结点的指针。","loc":{"start":{"line":75,"column":2},"end":{"line":75,"column":59}},"range":[2074,2131],"raw":"所有分支结点（可视为索引的索引）中仅包含它们的子结点（即下一级的索引块）中的关键字的最大值，及指向其子结点的指针。"}],"loc":{"start":{"line":75,"column":2},"end":{"line":75,"column":59}},"range":[2074,2131],"raw":"所有分支结点（可视为索引的索引）中仅包含它们的子结点（即下一级的索引块）中的关键字的最大值，及指向其子结点的指针。"}],"loc":{"start":{"line":75,"column":0},"end":{"line":75,"column":59}},"range":[2072,2131],"raw":"- 所有分支结点（可视为索引的索引）中仅包含它们的子结点（即下一级的索引块）中的关键字的最大值，及指向其子结点的指针。"}],"loc":{"start":{"line":71,"column":0},"end":{"line":75,"column":59}},"range":[1920,2131],"raw":"- 每个分支结点最多有m棵子树；\n- 非叶根结点至少有两棵子树，其他每个分支结点至少$\\lceil \\frac{m}{2} \\rceil$棵子树；\n- 结点的子树个数与关键字个数相等；\n- 所有叶子结点包含全部关键字及指向相应记录的指针，叶节点中将关键字按照大小顺序排列，相邻叶节点按照大小顺序相连接；\n- 所有分支结点（可视为索引的索引）中仅包含它们的子结点（即下一级的索引块）中的关键字的最大值，及指向其子结点的指针。"},{"type":"HorizontalRule","loc":{"start":{"line":77,"column":0},"end":{"line":77,"column":33}},"range":[2133,2166],"raw":"*********************************"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"B树和B+树的区别","loc":{"start":{"line":79,"column":3},"end":{"line":79,"column":12}},"range":[2171,2180],"raw":"B树和B+树的区别"}],"loc":{"start":{"line":79,"column":0},"end":{"line":79,"column":12}},"range":[2168,2180],"raw":"## B树和B+树的区别"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"在B+树中，含有n个关键字的结点只包含n棵子树，即每个关键字只对应一棵子树；而在B树中，具有n个关键字的结点含有n+1棵子树。","loc":{"start":{"line":81,"column":2},"end":{"line":81,"column":65}},"range":[2184,2247],"raw":"在B+树中，含有n个关键字的结点只包含n棵子树，即每个关键字只对应一棵子树；而在B树中，具有n个关键字的结点含有n+1棵子树。"}],"loc":{"start":{"line":81,"column":2},"end":{"line":81,"column":65}},"range":[2184,2247],"raw":"在B+树中，含有n个关键字的结点只包含n棵子树，即每个关键字只对应一棵子树；而在B树中，具有n个关键字的结点含有n+1棵子树。"}],"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":65}},"range":[2182,2247],"raw":"- 在B+树中，含有n个关键字的结点只包含n棵子树，即每个关键字只对应一棵子树；而在B树中，具有n个关键字的结点含有n+1棵子树。"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"在B+树中，每个结点的关键字树的范围是$\\lceil \\frac{m}{2} \\rceil \\leq n \\leq m$ (根节点：$1 \\leq n \\leq m$)；在B树中，每个结点（非根内部结点）的关键字个数n的范围是$\\lceil \\frac{m}{2} \\rceil - 1 \\leq n \\leq m - 1$（根节点：$1 \\leq n \\leq m-1$）。","loc":{"start":{"line":82,"column":2},"end":{"line":82,"column":190}},"range":[2250,2438],"raw":"在B+树中，每个结点的关键字树的范围是$\\lceil \\frac{m}{2} \\rceil \\leq n \\leq m$ (根节点：$1 \\leq n \\leq m$)；在B树中，每个结点（非根内部结点）的关键字个数n的范围是$\\lceil \\frac{m}{2} \\rceil - 1 \\leq n \\leq m - 1$（根节点：$1 \\leq n \\leq m-1$）。"}],"loc":{"start":{"line":82,"column":2},"end":{"line":82,"column":190}},"range":[2250,2438],"raw":"在B+树中，每个结点的关键字树的范围是$\\lceil \\frac{m}{2} \\rceil \\leq n \\leq m$ (根节点：$1 \\leq n \\leq m$)；在B树中，每个结点（非根内部结点）的关键字个数n的范围是$\\lceil \\frac{m}{2} \\rceil - 1 \\leq n \\leq m - 1$（根节点：$1 \\leq n \\leq m-1$）。"}],"loc":{"start":{"line":82,"column":0},"end":{"line":82,"column":190}},"range":[2248,2438],"raw":"- 在B+树中，每个结点的关键字树的范围是$\\lceil \\frac{m}{2} \\rceil \\leq n \\leq m$ (根节点：$1 \\leq n \\leq m$)；在B树中，每个结点（非根内部结点）的关键字个数n的范围是$\\lceil \\frac{m}{2} \\rceil - 1 \\leq n \\leq m - 1$（根节点：$1 \\leq n \\leq m-1$）。"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"在B+树中，叶子结点包含信息，所有非叶子结点仅起索引作用，非叶子结点中的每个索引项只含有对应子树的最大关键字和指向该子树的指针，不含有该关键字对应记录的存储地址。","loc":{"start":{"line":83,"column":2},"end":{"line":83,"column":83}},"range":[2441,2522],"raw":"在B+树中，叶子结点包含信息，所有非叶子结点仅起索引作用，非叶子结点中的每个索引项只含有对应子树的最大关键字和指向该子树的指针，不含有该关键字对应记录的存储地址。"}],"loc":{"start":{"line":83,"column":2},"end":{"line":83,"column":83}},"range":[2441,2522],"raw":"在B+树中，叶子结点包含信息，所有非叶子结点仅起索引作用，非叶子结点中的每个索引项只含有对应子树的最大关键字和指向该子树的指针，不含有该关键字对应记录的存储地址。"}],"loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":83}},"range":[2439,2522],"raw":"- 在B+树中，叶子结点包含信息，所有非叶子结点仅起索引作用，非叶子结点中的每个索引项只含有对应子树的最大关键字和指向该子树的指针，不含有该关键字对应记录的存储地址。"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"在B+树中，叶结点包含信息，所有非叶结点仅起索引作用，非叶结点的每个索引项只含有对应子树的最大关键字和指向该子树的指针；而在B树中，叶子结点包含关键字和其他结点和其他结点包含的关键字是不重复的。","loc":{"start":{"line":84,"column":2},"end":{"line":84,"column":99}},"range":[2525,2622],"raw":"在B+树中，叶结点包含信息，所有非叶结点仅起索引作用，非叶结点的每个索引项只含有对应子树的最大关键字和指向该子树的指针；而在B树中，叶子结点包含关键字和其他结点和其他结点包含的关键字是不重复的。"}],"loc":{"start":{"line":84,"column":2},"end":{"line":84,"column":99}},"range":[2525,2622],"raw":"在B+树中，叶结点包含信息，所有非叶结点仅起索引作用，非叶结点的每个索引项只含有对应子树的最大关键字和指向该子树的指针；而在B树中，叶子结点包含关键字和其他结点和其他结点包含的关键字是不重复的。"}],"loc":{"start":{"line":84,"column":0},"end":{"line":84,"column":99}},"range":[2523,2622],"raw":"- 在B+树中，叶结点包含信息，所有非叶结点仅起索引作用，非叶结点的每个索引项只含有对应子树的最大关键字和指向该子树的指针；而在B树中，叶子结点包含关键字和其他结点和其他结点包含的关键字是不重复的。"}],"loc":{"start":{"line":81,"column":0},"end":{"line":84,"column":99}},"range":[2182,2622],"raw":"- 在B+树中，含有n个关键字的结点只包含n棵子树，即每个关键字只对应一棵子树；而在B树中，具有n个关键字的结点含有n+1棵子树。\n- 在B+树中，每个结点的关键字树的范围是$\\lceil \\frac{m}{2} \\rceil \\leq n \\leq m$ (根节点：$1 \\leq n \\leq m$)；在B树中，每个结点（非根内部结点）的关键字个数n的范围是$\\lceil \\frac{m}{2} \\rceil - 1 \\leq n \\leq m - 1$（根节点：$1 \\leq n \\leq m-1$）。\n- 在B+树中，叶子结点包含信息，所有非叶子结点仅起索引作用，非叶子结点中的每个索引项只含有对应子树的最大关键字和指向该子树的指针，不含有该关键字对应记录的存储地址。\n- 在B+树中，叶结点包含信息，所有非叶结点仅起索引作用，非叶结点的每个索引项只含有对应子树的最大关键字和指向该子树的指针；而在B树中，叶子结点包含关键字和其他结点和其他结点包含的关键字是不重复的。"}],"loc":{"start":{"line":1,"column":0},"end":{"line":85,"column":0}},"range":[0,2623],"raw":"---\ntitle: 'B树和B+树'\ntags: ['数据结构','B树','B+树']\n---\n## B树\n\n又称多路平衡查找树，B树中所有结点的**孩子结点数**的最大值称为B树的阶。\n\n### B树的特征\n\n一棵m阶B树或为空树，或满足如下的条件的m叉树：\n\n- 树中每个结点至多有m棵子树（至多含有m-1个关键字）\n- 若根结点不是终端节点，则至少有两棵子树\n- 除根结点外的所有非叶节点至少有$\\lceil\\frac{m}{2}\\rceil$棵子树（即$\\lceil\\frac{m}{2}\\rceil-1$个关键字）\n- 非叶节点的结构：\n\n  ![quicker_f986338d-c707-4935-8160-23c73da328ee.png](https://i.loli.net/2020/08/05/dKoNO94ETnPbMRv.png)\n\n  $K_{i}\\;(i=1,2,...,n)$为结点的关键字，$K1<K2<...<Kn$，\n  $P_{i}(i=0,1,...,n)$为指向子树根节点的指针，$P_{i}-1$所指子树的关键字均小于$K_{i}$，$P_{i}$所指子树的关键字均大于$K_{i}$。\n- 所有的叶节点都出现在同一层次上，不携带任何信息\n\nn个关键字，阶数为m的b树，其高度h满足：\n\n$log_{m}(n+1)\\leq h \\leq \\left (log_{\\lceil \\frac{m}{2} \\rceil}\\frac{n+1}{2}\\right )+1$\n\n### B树的查找操作\n\n- 在B树中查找关键字所在的结点\n- 在结点中查找关键字\n\n### B树的插入操作\n\n- 定位\n  查找插入该关键字的位置，最底层中非叶子节点\n\n- 插入\n\n  若插入后不会破坏m阶二叉树的定义，即插入后关键字的个数在区间$[\\lceil \\frac{m}{2} \\rceil, m-1]$，则直接插入。\n\n  若插入后，关键字的数量大于m-1。则对插入后的结点进行分裂操作；\n\n  分裂：插入后的结点中间位置$(\\lceil \\frac{m}{2} \\rceil)$关键字并入父结点中，\n  中间位置左侧的结点留在原先结点中，右侧的结点放入新的结点中，\n  若并入父结点后，父节点关键字数量超出范围，向上继续分裂，知道符合要求为止（如果需要对根节点分裂，树的高度+1）。\n\n### B树的删除操作\n\n#### 删除叶子结点中的关键字\n\n- 直接删除：若被删除的关键字所在的结点的关键字个数 > $\\lceil \\frac{m}{2} \\rceil - 1$，表明删除后仍满足B树的定义，直接删除。\n- 兄弟够借：若被删除的关键字所在的结点的关键字个数 = $\\lceil \\frac{m}{2} \\rceil - 1$，且与此结点邻近的兄弟结点的关键字个数 $\\leq \\lceil \\frac{m}{2} \\rceil$，则需要从兄弟结点借一个关键字，此过程需要调整该结点、双亲结点和兄弟结点的关键字。\n  - 从左（右）边的兄弟结点借：将其双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字放入到要删除关键字的结点的最左（右）边，然后将其左边兄弟结点中最大（小）的关键字放入到双亲结点中被要删除关键字的结点和其左（右）边的兄弟结点夹住的关键字中。\n- 兄弟不够借：若被删除的关键字所在的结点关键字总数=$\\lceil \\frac{m}{2} \\rceil - 1$，且与该结点临近的兄弟结点的关键字总数均=$\\lceil \\frac{m}{2} \\rceil - 1$，则删除要删除的关键字，并与其中一个不够借的兄弟结点和双亲结点中被两兄弟夹住的关键字合并。若合并后双亲结点因减少一个结点而导致不符合定义，则继续执行2，3步骤。\n\n#### 删除非叶子结点中的关键字\n\n- 若小于k的子树中关键字的个数>$\\lceil \\frac{m}{2} \\rceil - 1$，找出k的前驱值$k'$，取代k，然后递归删除$k'$即可。\n- 若大于k的子树中关键字的个数>$\\lceil \\frac{m}{2} \\rceil - 1$，找出k的后继值$k'$，取代k，然后递归删除$k'$即可。\n- 若前后两个子树的关键字的个数均为$\\lceil \\frac{m}{2} \\rceil - 1$，则将前后两子树合并，然后删除k即可。\n\n*********************************\n\n## B+树\n\n### B+树的概念\n\n一棵m阶B+树需要满足如下的条件：\n\n- 每个分支结点最多有m棵子树；\n- 非叶根结点至少有两棵子树，其他每个分支结点至少$\\lceil \\frac{m}{2} \\rceil$棵子树；\n- 结点的子树个数与关键字个数相等；\n- 所有叶子结点包含全部关键字及指向相应记录的指针，叶节点中将关键字按照大小顺序排列，相邻叶节点按照大小顺序相连接；\n- 所有分支结点（可视为索引的索引）中仅包含它们的子结点（即下一级的索引块）中的关键字的最大值，及指向其子结点的指针。\n\n*********************************\n\n## B树和B+树的区别\n\n- 在B+树中，含有n个关键字的结点只包含n棵子树，即每个关键字只对应一棵子树；而在B树中，具有n个关键字的结点含有n+1棵子树。\n- 在B+树中，每个结点的关键字树的范围是$\\lceil \\frac{m}{2} \\rceil \\leq n \\leq m$ (根节点：$1 \\leq n \\leq m$)；在B树中，每个结点（非根内部结点）的关键字个数n的范围是$\\lceil \\frac{m}{2} \\rceil - 1 \\leq n \\leq m - 1$（根节点：$1 \\leq n \\leq m-1$）。\n- 在B+树中，叶子结点包含信息，所有非叶子结点仅起索引作用，非叶子结点中的每个索引项只含有对应子树的最大关键字和指向该子树的指针，不含有该关键字对应记录的存储地址。\n- 在B+树中，叶结点包含信息，所有非叶结点仅起索引作用，非叶结点的每个索引项只含有对应子树的最大关键字和指向该子树的指针；而在B树中，叶子结点包含关键字和其他结点和其他结点包含的关键字是不重复的。\n"},"catalogue":{"title":"B树和B+树","json-path":"2020-08-05-B树.json","mdate":"2022-08-30T14:19:31.451Z","tags":["数据结构","B树","B+树"]}}