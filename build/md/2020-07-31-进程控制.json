{"ast":{"type":"Document","children":[{"type":"Yaml","value":"tags: ['操作系统','进程']","loc":{"start":{"line":1,"column":0},"end":{"line":3,"column":3}},"range":[0,27],"raw":"---\ntags: ['操作系统','进程']\n---"},{"type":"Header","depth":1,"children":[{"type":"Str","value":"进程控制","loc":{"start":{"line":4,"column":2},"end":{"line":4,"column":6}},"range":[30,34],"raw":"进程控制"}],"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":6}},"range":[28,34],"raw":"# 进程控制"},{"type":"Paragraph","children":[{"type":"Str","value":"进程控制是进程管理中的基本功能：","loc":{"start":{"line":6,"column":0},"end":{"line":6,"column":16}},"range":[36,52],"raw":"进程控制是进程管理中的基本功能："}],"loc":{"start":{"line":6,"column":0},"end":{"line":6,"column":16}},"range":[36,52],"raw":"进程控制是进程管理中的基本功能："},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"创建一个新进程","loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":9}},"range":[56,63],"raw":"创建一个新进程"}],"loc":{"start":{"line":8,"column":2},"end":{"line":8,"column":9}},"range":[56,63],"raw":"创建一个新进程"}],"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":9}},"range":[54,63],"raw":"- 创建一个新进程"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"终止一个已完成的进程","loc":{"start":{"line":9,"column":2},"end":{"line":9,"column":12}},"range":[66,76],"raw":"终止一个已完成的进程"}],"loc":{"start":{"line":9,"column":2},"end":{"line":9,"column":12}},"range":[66,76],"raw":"终止一个已完成的进程"}],"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":12}},"range":[64,76],"raw":"- 终止一个已完成的进程"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"终止一个因某事件不能继续运行的进程","loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":19}},"range":[79,96],"raw":"终止一个因某事件不能继续运行的进程"}],"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":19}},"range":[79,96],"raw":"终止一个因某事件不能继续运行的进程"}],"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":19}},"range":[77,96],"raw":"- 终止一个因某事件不能继续运行的进程"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"进程运行中的状态转换","loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":12}},"range":[99,109],"raw":"进程运行中的状态转换"}],"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":12}},"range":[99,109],"raw":"进程运行中的状态转换"}],"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":12}},"range":[97,109],"raw":"- 进程运行中的状态转换"}],"loc":{"start":{"line":8,"column":0},"end":{"line":11,"column":12}},"range":[54,109],"raw":"- 创建一个新进程\n- 终止一个已完成的进程\n- 终止一个因某事件不能继续运行的进程\n- 进程运行中的状态转换"},{"type":"Paragraph","children":[{"type":"Str","value":"进程控制一般由OS内的","loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":11}},"range":[111,122],"raw":"进程控制一般由OS内的"},{"type":"Strong","children":[{"type":"Str","value":"原语","loc":{"start":{"line":13,"column":13},"end":{"line":13,"column":15}},"range":[124,126],"raw":"原语"}],"loc":{"start":{"line":13,"column":11},"end":{"line":13,"column":17}},"range":[122,128],"raw":"**原语**"},{"type":"Str","value":"实现","loc":{"start":{"line":13,"column":17},"end":{"line":13,"column":19}},"range":[128,130],"raw":"实现"}],"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":19}},"range":[111,130],"raw":"进程控制一般由OS内的**原语**实现"},{"type":"BlockQuote","children":[{"type":"Paragraph","children":[{"type":"Str","value":"原子操作：只一个操作的所有动作要么都做，要么都不做，是不可分割的基本单位，在执行的过程中","loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":46}},"range":[134,178],"raw":"原子操作：只一个操作的所有动作要么都做，要么都不做，是不可分割的基本单位，在执行的过程中"},{"type":"Strong","children":[{"type":"Str","value":"不允许被中断","loc":{"start":{"line":15,"column":48},"end":{"line":15,"column":54}},"range":[180,186],"raw":"不允许被中断"}],"loc":{"start":{"line":15,"column":46},"end":{"line":15,"column":56}},"range":[178,188],"raw":"**不允许被中断**"},{"type":"Str","value":"，原子操作在管态下执行，常驻内存。","loc":{"start":{"line":15,"column":56},"end":{"line":15,"column":73}},"range":[188,205],"raw":"，原子操作在管态下执行，常驻内存。"}],"loc":{"start":{"line":15,"column":2},"end":{"line":15,"column":73}},"range":[134,205],"raw":"原子操作：只一个操作的所有动作要么都做，要么都不做，是不可分割的基本单位，在执行的过程中**不允许被中断**，原子操作在管态下执行，常驻内存。"},{"type":"Paragraph","children":[{"type":"Str","value":"原语： 由若干条语句组成，用于完成某一功能的一个过程，它们是“原子操作”，原语的作用是实现进程的通信和控制，避免造成其状态的不确定性","loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":68}},"range":[210,276],"raw":"原语： 由若干条语句组成，用于完成某一功能的一个过程，它们是“原子操作”，原语的作用是实现进程的通信和控制，避免造成其状态的不确定性"}],"loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":68}},"range":[210,276],"raw":"原语： 由若干条语句组成，用于完成某一功能的一个过程，它们是“原子操作”，原语的作用是实现进程的通信和控制，避免造成其状态的不确定性"}],"loc":{"start":{"line":15,"column":0},"end":{"line":17,"column":68}},"range":[132,276],"raw":"> 原子操作：只一个操作的所有动作要么都做，要么都不做，是不可分割的基本单位，在执行的过程中**不允许被中断**，原子操作在管态下执行，常驻内存。\n>\n> 原语： 由若干条语句组成，用于完成某一功能的一个过程，它们是“原子操作”，原语的作用是实现进程的通信和控制，避免造成其状态的不确定性"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"进程的创建","loc":{"start":{"line":19,"column":3},"end":{"line":19,"column":8}},"range":[281,286],"raw":"进程的创建"}],"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":8}},"range":[278,286],"raw":"## 进程的创建"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"进程图（Process Graph）","loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":22}},"range":[292,310],"raw":"进程图（Process Graph）"}],"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":22}},"range":[288,310],"raw":"### 进程图（Process Graph）"},{"type":"Paragraph","children":[{"type":"Str","value":"用于描述一个进程的家族关系的","loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":14}},"range":[312,326],"raw":"用于描述一个进程的家族关系的"},{"type":"Strong","children":[{"type":"Str","value":"有向树","loc":{"start":{"line":23,"column":16},"end":{"line":23,"column":19}},"range":[328,331],"raw":"有向树"}],"loc":{"start":{"line":23,"column":14},"end":{"line":23,"column":21}},"range":[326,333],"raw":"**有向树**"},{"type":"Str","value":"（有向树是有向图，不是树）。用一条从父进程指向子进程的有向边来描述它们之间的父子关系。创建父进程的进程被成为祖先进程，树根代表的进程作为家族的祖先。","loc":{"start":{"line":23,"column":21},"end":{"line":23,"column":95}},"range":[333,407],"raw":"（有向树是有向图，不是树）。用一条从父进程指向子进程的有向边来描述它们之间的父子关系。创建父进程的进程被成为祖先进程，树根代表的进程作为家族的祖先。"}],"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":95}},"range":[312,407],"raw":"用于描述一个进程的家族关系的**有向树**（有向树是有向图，不是树）。用一条从父进程指向子进程的有向边来描述它们之间的父子关系。创建父进程的进程被成为祖先进程，树根代表的进程作为家族的祖先。"},{"type":"Paragraph","children":[{"type":"Str","value":"子进程可以继承父进程所有的资源：父进程打开的文件、分配到的缓冲区等。","loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":34}},"range":[409,443],"raw":"子进程可以继承父进程所有的资源：父进程打开的文件、分配到的缓冲区等。"}],"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":34}},"range":[409,443],"raw":"子进程可以继承父进程所有的资源：父进程打开的文件、分配到的缓冲区等。"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"如果子进程被撤销，应该将从父进程获得的资源归还给父进程。","loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":30}},"range":[447,475],"raw":"如果子进程被撤销，应该将从父进程获得的资源归还给父进程。"}],"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":30}},"range":[447,475],"raw":"如果子进程被撤销，应该将从父进程获得的资源归还给父进程。"}],"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":30}},"range":[445,475],"raw":"- 如果子进程被撤销，应该将从父进程获得的资源归还给父进程。"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"如果父进程被撤销，也必须同时撤销所有的子进程。","loc":{"start":{"line":28,"column":2},"end":{"line":28,"column":25}},"range":[478,501],"raw":"如果父进程被撤销，也必须同时撤销所有的子进程。"}],"loc":{"start":{"line":28,"column":2},"end":{"line":28,"column":25}},"range":[478,501],"raw":"如果父进程被撤销，也必须同时撤销所有的子进程。"}],"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":25}},"range":[476,501],"raw":"- 如果父进程被撤销，也必须同时撤销所有的子进程。"}],"loc":{"start":{"line":27,"column":0},"end":{"line":28,"column":25}},"range":[445,501],"raw":"- 如果子进程被撤销，应该将从父进程获得的资源归还给父进程。\n- 如果父进程被撤销，也必须同时撤销所有的子进程。"},{"type":"Paragraph","children":[{"type":"Str","value":"为了表示进程之间的家族关系，在PCB内都设置了家族关系表，标明自己的父进程及所有的子进程。","loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":45}},"range":[503,548],"raw":"为了表示进程之间的家族关系，在PCB内都设置了家族关系表，标明自己的父进程及所有的子进程。"}],"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":45}},"range":[503,548],"raw":"为了表示进程之间的家族关系，在PCB内都设置了家族关系表，标明自己的父进程及所有的子进程。"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/31/nasX4Sj9vtpdqPc.png","alt":"PNG??.png","loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":63}},"range":[550,613],"raw":"![PNG??.png](https://i.loli.net/2020/07/31/nasX4Sj9vtpdqPc.png)"}],"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":63}},"range":[550,613],"raw":"![PNG??.png](https://i.loli.net/2020/07/31/nasX4Sj9vtpdqPc.png)"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"引起创建进程的事件","loc":{"start":{"line":34,"column":4},"end":{"line":34,"column":13}},"range":[619,628],"raw":"引起创建进程的事件"}],"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":13}},"range":[615,628],"raw":"### 引起创建进程的事件"},{"type":"Paragraph","children":[{"type":"Str","value":"一个进程去创建另一个进程的典型事件有以下四个类型：","loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":25}},"range":[630,655],"raw":"一个进程去创建另一个进程的典型事件有以下四个类型："}],"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":25}},"range":[630,655],"raw":"一个进程去创建另一个进程的典型事件有以下四个类型："},{"type":"List","ordered":true,"start":1,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"用户登录：为终端建立进程","loc":{"start":{"line":38,"column":3},"end":{"line":38,"column":15}},"range":[660,672],"raw":"用户登录：为终端建立进程"}],"loc":{"start":{"line":38,"column":3},"end":{"line":38,"column":15}},"range":[660,672],"raw":"用户登录：为终端建立进程"}],"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":15}},"range":[657,672],"raw":"1. 用户登录：为终端建立进程"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"作业调度：作业调度程序按照一定的算法调度到某个作业时为该作业创建进程","loc":{"start":{"line":39,"column":3},"end":{"line":39,"column":37}},"range":[676,710],"raw":"作业调度：作业调度程序按照一定的算法调度到某个作业时为该作业创建进程"}],"loc":{"start":{"line":39,"column":3},"end":{"line":39,"column":37}},"range":[676,710],"raw":"作业调度：作业调度程序按照一定的算法调度到某个作业时为该作业创建进程"}],"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":37}},"range":[673,710],"raw":"2. 作业调度：作业调度程序按照一定的算法调度到某个作业时为该作业创建进程"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"提供服务：运行中的用户程序向操作系统提出请求，系统专门创建的进程来提供用户程序需要的服务","loc":{"start":{"line":40,"column":3},"end":{"line":40,"column":47}},"range":[714,758],"raw":"提供服务：运行中的用户程序向操作系统提出请求，系统专门创建的进程来提供用户程序需要的服务"}],"loc":{"start":{"line":40,"column":3},"end":{"line":40,"column":47}},"range":[714,758],"raw":"提供服务：运行中的用户程序向操作系统提出请求，系统专门创建的进程来提供用户程序需要的服务"}],"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":47}},"range":[711,758],"raw":"3. 提供服务：运行中的用户程序向操作系统提出请求，系统专门创建的进程来提供用户程序需要的服务"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"应用请求：由应用本身为自己创建一个新的进程，以期完成一个并发的特定任务","loc":{"start":{"line":41,"column":3},"end":{"line":41,"column":38}},"range":[762,797],"raw":"应用请求：由应用本身为自己创建一个新的进程，以期完成一个并发的特定任务"}],"loc":{"start":{"line":41,"column":3},"end":{"line":41,"column":38}},"range":[762,797],"raw":"应用请求：由应用本身为自己创建一个新的进程，以期完成一个并发的特定任务"}],"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":38}},"range":[759,797],"raw":"4. 应用请求：由应用本身为自己创建一个新的进程，以期完成一个并发的特定任务"}],"loc":{"start":{"line":38,"column":0},"end":{"line":41,"column":38}},"range":[657,797],"raw":"1. 用户登录：为终端建立进程\n2. 作业调度：作业调度程序按照一定的算法调度到某个作业时为该作业创建进程\n3. 提供服务：运行中的用户程序向操作系统提出请求，系统专门创建的进程来提供用户程序需要的服务\n4. 应用请求：由应用本身为自己创建一个新的进程，以期完成一个并发的特定任务"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"进程的创建(Creation Of Process)","loc":{"start":{"line":43,"column":4},"end":{"line":43,"column":30}},"range":[803,829],"raw":"进程的创建(Creation Of Process)"}],"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":30}},"range":[799,829],"raw":"### 进程的创建(Creation Of Process)"},{"type":"Paragraph","children":[{"type":"Str","value":"调用进程创建原语Create()创建一个新的进程：","loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":25}},"range":[831,856],"raw":"调用进程创建原语Create()创建一个新的进程："}],"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":25}},"range":[831,856],"raw":"调用进程创建原语Create()创建一个新的进程："},{"type":"List","ordered":true,"start":1,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"申请空白的PCB：申请一个唯一的数字标识符，在PCB集合内索取一个空白的PCB","loc":{"start":{"line":47,"column":3},"end":{"line":47,"column":42}},"range":[861,900],"raw":"申请空白的PCB：申请一个唯一的数字标识符，在PCB集合内索取一个空白的PCB"}],"loc":{"start":{"line":47,"column":3},"end":{"line":47,"column":42}},"range":[861,900],"raw":"申请空白的PCB：申请一个唯一的数字标识符，在PCB集合内索取一个空白的PCB"}],"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":42}},"range":[858,900],"raw":"1. 申请空白的PCB：申请一个唯一的数字标识符，在PCB集合内索取一个空白的PCB"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"为新进程分配资源：为新进程的程序和数据以及用户栈分配必要的内存空间。操作系统必须知道新的进程需要的内存大小。","loc":{"start":{"line":48,"column":3},"end":{"line":48,"column":57}},"range":[904,958],"raw":"为新进程分配资源：为新进程的程序和数据以及用户栈分配必要的内存空间。操作系统必须知道新的进程需要的内存大小。"}],"loc":{"start":{"line":48,"column":3},"end":{"line":48,"column":57}},"range":[904,958],"raw":"为新进程分配资源：为新进程的程序和数据以及用户栈分配必要的内存空间。操作系统必须知道新的进程需要的内存大小。"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"对于批处理作业或者为应用创建子进程，用户需要在提出创建进程请求的时候提供所需要的内存大小","loc":{"start":{"line":49,"column":5},"end":{"line":49,"column":49}},"range":[964,1008],"raw":"对于批处理作业或者为应用创建子进程，用户需要在提出创建进程请求的时候提供所需要的内存大小"}],"loc":{"start":{"line":49,"column":5},"end":{"line":49,"column":49}},"range":[964,1008],"raw":"对于批处理作业或者为应用创建子进程，用户需要在提出创建进程请求的时候提供所需要的内存大小"}],"loc":{"start":{"line":49,"column":3},"end":{"line":49,"column":49}},"range":[962,1008],"raw":"- 对于批处理作业或者为应用创建子进程，用户需要在提出创建进程请求的时候提供所需要的内存大小"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"对于交互性作业，创建进程时可以不指定需要的内存大小，由操作系统分配一定的空间","loc":{"start":{"line":50,"column":5},"end":{"line":50,"column":43}},"range":[1014,1052],"raw":"对于交互性作业，创建进程时可以不指定需要的内存大小，由操作系统分配一定的空间"}],"loc":{"start":{"line":50,"column":5},"end":{"line":50,"column":43}},"range":[1014,1052],"raw":"对于交互性作业，创建进程时可以不指定需要的内存大小，由操作系统分配一定的空间"}],"loc":{"start":{"line":50,"column":3},"end":{"line":50,"column":43}},"range":[1012,1052],"raw":"- 对于交互性作业，创建进程时可以不指定需要的内存大小，由操作系统分配一定的空间"}],"loc":{"start":{"line":49,"column":3},"end":{"line":50,"column":43}},"range":[962,1052],"raw":"- 对于批处理作业或者为应用创建子进程，用户需要在提出创建进程请求的时候提供所需要的内存大小\n   - 对于交互性作业，创建进程时可以不指定需要的内存大小，由操作系统分配一定的空间"}],"loc":{"start":{"line":48,"column":0},"end":{"line":50,"column":43}},"range":[901,1052],"raw":"2. 为新进程分配资源：为新进程的程序和数据以及用户栈分配必要的内存空间。操作系统必须知道新的进程需要的内存大小。\n   - 对于批处理作业或者为应用创建子进程，用户需要在提出创建进程请求的时候提供所需要的内存大小\n   - 对于交互性作业，创建进程时可以不指定需要的内存大小，由操作系统分配一定的空间"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"初始化PCB：","loc":{"start":{"line":51,"column":3},"end":{"line":51,"column":10}},"range":[1056,1063],"raw":"初始化PCB："}],"loc":{"start":{"line":51,"column":3},"end":{"line":51,"column":10}},"range":[1056,1063],"raw":"初始化PCB："},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"初始化标识信息，将系统分配的标识符和父进程的标识符填入到PCB中","loc":{"start":{"line":52,"column":7},"end":{"line":52,"column":39}},"range":[1071,1103],"raw":"初始化标识信息，将系统分配的标识符和父进程的标识符填入到PCB中"}],"loc":{"start":{"line":52,"column":7},"end":{"line":52,"column":39}},"range":[1071,1103],"raw":"初始化标识信息，将系统分配的标识符和父进程的标识符填入到PCB中"}],"loc":{"start":{"line":52,"column":5},"end":{"line":52,"column":39}},"range":[1069,1103],"raw":"- 初始化标识信息，将系统分配的标识符和父进程的标识符填入到PCB中"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"初始化处理机状态：将程序计数器指向程序的入口，栈指针指向栈顶","loc":{"start":{"line":53,"column":7},"end":{"line":53,"column":37}},"range":[1111,1141],"raw":"初始化处理机状态：将程序计数器指向程序的入口，栈指针指向栈顶"}],"loc":{"start":{"line":53,"column":7},"end":{"line":53,"column":37}},"range":[1111,1141],"raw":"初始化处理机状态：将程序计数器指向程序的入口，栈指针指向栈顶"}],"loc":{"start":{"line":53,"column":5},"end":{"line":53,"column":37}},"range":[1109,1141],"raw":"- 初始化处理机状态：将程序计数器指向程序的入口，栈指针指向栈顶"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"初始化处理机控制信息：将进程的状态设置为就绪状态或者静止就绪状态，设置优先级","loc":{"start":{"line":54,"column":7},"end":{"line":54,"column":45}},"range":[1149,1187],"raw":"初始化处理机控制信息：将进程的状态设置为就绪状态或者静止就绪状态，设置优先级"}],"loc":{"start":{"line":54,"column":7},"end":{"line":54,"column":45}},"range":[1149,1187],"raw":"初始化处理机控制信息：将进程的状态设置为就绪状态或者静止就绪状态，设置优先级"}],"loc":{"start":{"line":54,"column":5},"end":{"line":54,"column":45}},"range":[1147,1187],"raw":"- 初始化处理机控制信息：将进程的状态设置为就绪状态或者静止就绪状态，设置优先级"}],"loc":{"start":{"line":52,"column":5},"end":{"line":54,"column":45}},"range":[1069,1187],"raw":"- 初始化标识信息，将系统分配的标识符和父进程的标识符填入到PCB中\n     - 初始化处理机状态：将程序计数器指向程序的入口，栈指针指向栈顶\n     - 初始化处理机控制信息：将进程的状态设置为就绪状态或者静止就绪状态，设置优先级"}],"loc":{"start":{"line":51,"column":0},"end":{"line":54,"column":45}},"range":[1053,1187],"raw":"3. 初始化PCB：\n     - 初始化标识信息，将系统分配的标识符和父进程的标识符填入到PCB中\n     - 初始化处理机状态：将程序计数器指向程序的入口，栈指针指向栈顶\n     - 初始化处理机控制信息：将进程的状态设置为就绪状态或者静止就绪状态，设置优先级"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"将进程插入就绪队列。如果就绪队列可以接受新进程，就将进程插入就绪队列","loc":{"start":{"line":55,"column":3},"end":{"line":55,"column":37}},"range":[1191,1225],"raw":"将进程插入就绪队列。如果就绪队列可以接受新进程，就将进程插入就绪队列"}],"loc":{"start":{"line":55,"column":3},"end":{"line":55,"column":37}},"range":[1191,1225],"raw":"将进程插入就绪队列。如果就绪队列可以接受新进程，就将进程插入就绪队列"}],"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":37}},"range":[1188,1225],"raw":"4. 将进程插入就绪队列。如果就绪队列可以接受新进程，就将进程插入就绪队列"}],"loc":{"start":{"line":47,"column":0},"end":{"line":55,"column":37}},"range":[858,1225],"raw":"1. 申请空白的PCB：申请一个唯一的数字标识符，在PCB集合内索取一个空白的PCB\n2. 为新进程分配资源：为新进程的程序和数据以及用户栈分配必要的内存空间。操作系统必须知道新的进程需要的内存大小。\n   - 对于批处理作业或者为应用创建子进程，用户需要在提出创建进程请求的时候提供所需要的内存大小\n   - 对于交互性作业，创建进程时可以不指定需要的内存大小，由操作系统分配一定的空间\n3. 初始化PCB：\n     - 初始化标识信息，将系统分配的标识符和父进程的标识符填入到PCB中\n     - 初始化处理机状态：将程序计数器指向程序的入口，栈指针指向栈顶\n     - 初始化处理机控制信息：将进程的状态设置为就绪状态或者静止就绪状态，设置优先级\n4. 将进程插入就绪队列。如果就绪队列可以接受新进程，就将进程插入就绪队列"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"进程终止","loc":{"start":{"line":57,"column":4},"end":{"line":57,"column":8}},"range":[1231,1235],"raw":"进程终止"}],"loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":8}},"range":[1227,1235],"raw":"### 进程终止"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"引起终止的事件","loc":{"start":{"line":59,"column":5},"end":{"line":59,"column":12}},"range":[1242,1249],"raw":"引起终止的事件"}],"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":12}},"range":[1237,1249],"raw":"#### 引起终止的事件"},{"type":"Header","depth":5,"children":[{"type":"Str","value":"正常终止","loc":{"start":{"line":61,"column":6},"end":{"line":61,"column":10}},"range":[1257,1261],"raw":"正常终止"}],"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":10}},"range":[1251,1261],"raw":"##### 正常终止"},{"type":"Paragraph","children":[{"type":"Str","value":"任何计算机系统中都有一个表示程序已经运行完的指示，当程序运行到这个指示时，会产生一个中断通知操作系统这个进程已经运行完毕了，","loc":{"start":{"line":63,"column":0},"end":{"line":63,"column":62}},"range":[1263,1325],"raw":"任何计算机系统中都有一个表示程序已经运行完的指示，当程序运行到这个指示时，会产生一个中断通知操作系统这个进程已经运行完毕了，"}],"loc":{"start":{"line":63,"column":0},"end":{"line":63,"column":62}},"range":[1263,1325],"raw":"任何计算机系统中都有一个表示程序已经运行完的指示，当程序运行到这个指示时，会产生一个中断通知操作系统这个进程已经运行完毕了，"},{"type":"Header","depth":5,"children":[{"type":"Str","value":"异常终止","loc":{"start":{"line":65,"column":6},"end":{"line":65,"column":10}},"range":[1333,1337],"raw":"异常终止"}],"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":10}},"range":[1327,1337],"raw":"##### 异常终止"},{"type":"Paragraph","children":[{"type":"Str","value":"进程运行期间出现某种错误导致的进程终止","loc":{"start":{"line":67,"column":0},"end":{"line":67,"column":19}},"range":[1339,1358],"raw":"进程运行期间出现某种错误导致的进程终止"}],"loc":{"start":{"line":67,"column":0},"end":{"line":67,"column":19}},"range":[1339,1358],"raw":"进程运行期间出现某种错误导致的进程终止"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"越界错误：访问的存储区超出该进程的区域","loc":{"start":{"line":69,"column":2},"end":{"line":69,"column":21}},"range":[1362,1381],"raw":"越界错误：访问的存储区超出该进程的区域"}],"loc":{"start":{"line":69,"column":2},"end":{"line":69,"column":21}},"range":[1362,1381],"raw":"越界错误：访问的存储区超出该进程的区域"}],"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":21}},"range":[1360,1381],"raw":"- 越界错误：访问的存储区超出该进程的区域"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"保错误：试图访问受保护的不允许访问的资源或文件","loc":{"start":{"line":70,"column":2},"end":{"line":70,"column":25}},"range":[1384,1407],"raw":"保错误：试图访问受保护的不允许访问的资源或文件"}],"loc":{"start":{"line":70,"column":2},"end":{"line":70,"column":25}},"range":[1384,1407],"raw":"保错误：试图访问受保护的不允许访问的资源或文件"}],"loc":{"start":{"line":70,"column":0},"end":{"line":70,"column":25}},"range":[1382,1407],"raw":"- 保错误：试图访问受保护的不允许访问的资源或文件"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"非法指令：试图执行一条不存在的指令","loc":{"start":{"line":71,"column":2},"end":{"line":71,"column":19}},"range":[1410,1427],"raw":"非法指令：试图执行一条不存在的指令"}],"loc":{"start":{"line":71,"column":2},"end":{"line":71,"column":19}},"range":[1410,1427],"raw":"非法指令：试图执行一条不存在的指令"}],"loc":{"start":{"line":71,"column":0},"end":{"line":71,"column":19}},"range":[1408,1427],"raw":"- 非法指令：试图执行一条不存在的指令"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"特权指令错：试图执行只允许OS执行的指令","loc":{"start":{"line":72,"column":2},"end":{"line":72,"column":22}},"range":[1430,1450],"raw":"特权指令错：试图执行只允许OS执行的指令"}],"loc":{"start":{"line":72,"column":2},"end":{"line":72,"column":22}},"range":[1430,1450],"raw":"特权指令错：试图执行只允许OS执行的指令"}],"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":22}},"range":[1428,1450],"raw":"- 特权指令错：试图执行只允许OS执行的指令"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"运行超时：进程的执行时间超过指定的最大值","loc":{"start":{"line":73,"column":2},"end":{"line":73,"column":22}},"range":[1453,1473],"raw":"运行超时：进程的执行时间超过指定的最大值"}],"loc":{"start":{"line":73,"column":2},"end":{"line":73,"column":22}},"range":[1453,1473],"raw":"运行超时：进程的执行时间超过指定的最大值"}],"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":22}},"range":[1451,1473],"raw":"- 运行超时：进程的执行时间超过指定的最大值"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"等待超时：进程等待某个事件的时间超过最大值","loc":{"start":{"line":74,"column":2},"end":{"line":74,"column":23}},"range":[1476,1497],"raw":"等待超时：进程等待某个事件的时间超过最大值"}],"loc":{"start":{"line":74,"column":2},"end":{"line":74,"column":23}},"range":[1476,1497],"raw":"等待超时：进程等待某个事件的时间超过最大值"}],"loc":{"start":{"line":74,"column":0},"end":{"line":74,"column":23}},"range":[1474,1497],"raw":"- 等待超时：进程等待某个事件的时间超过最大值"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"算数运算错：试图执行一个被禁止的运算","loc":{"start":{"line":75,"column":2},"end":{"line":75,"column":20}},"range":[1500,1518],"raw":"算数运算错：试图执行一个被禁止的运算"}],"loc":{"start":{"line":75,"column":2},"end":{"line":75,"column":20}},"range":[1500,1518],"raw":"算数运算错：试图执行一个被禁止的运算"}],"loc":{"start":{"line":75,"column":0},"end":{"line":75,"column":20}},"range":[1498,1518],"raw":"- 算数运算错：试图执行一个被禁止的运算"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"I/O故障：在I/O过程中发生错误","loc":{"start":{"line":76,"column":2},"end":{"line":76,"column":19}},"range":[1521,1538],"raw":"I/O故障：在I/O过程中发生错误"}],"loc":{"start":{"line":76,"column":2},"end":{"line":76,"column":19}},"range":[1521,1538],"raw":"I/O故障：在I/O过程中发生错误"}],"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":19}},"range":[1519,1538],"raw":"- I/O故障：在I/O过程中发生错误"}],"loc":{"start":{"line":69,"column":0},"end":{"line":76,"column":19}},"range":[1360,1538],"raw":"- 越界错误：访问的存储区超出该进程的区域\n- 保错误：试图访问受保护的不允许访问的资源或文件\n- 非法指令：试图执行一条不存在的指令\n- 特权指令错：试图执行只允许OS执行的指令\n- 运行超时：进程的执行时间超过指定的最大值\n- 等待超时：进程等待某个事件的时间超过最大值\n- 算数运算错：试图执行一个被禁止的运算\n- I/O故障：在I/O过程中发生错误"},{"type":"Header","depth":5,"children":[{"type":"Str","value":"外界干预","loc":{"start":{"line":78,"column":6},"end":{"line":78,"column":10}},"range":[1546,1550],"raw":"外界干预"}],"loc":{"start":{"line":78,"column":0},"end":{"line":78,"column":10}},"range":[1540,1550],"raw":"##### 外界干预"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"操作员或者操作系统干预","loc":{"start":{"line":80,"column":2},"end":{"line":80,"column":13}},"range":[1554,1565],"raw":"操作员或者操作系统干预"}],"loc":{"start":{"line":80,"column":2},"end":{"line":80,"column":13}},"range":[1554,1565],"raw":"操作员或者操作系统干预"}],"loc":{"start":{"line":80,"column":0},"end":{"line":80,"column":13}},"range":[1552,1565],"raw":"- 操作员或者操作系统干预"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"父进程请求","loc":{"start":{"line":81,"column":2},"end":{"line":81,"column":7}},"range":[1568,1573],"raw":"父进程请求"}],"loc":{"start":{"line":81,"column":2},"end":{"line":81,"column":7}},"range":[1568,1573],"raw":"父进程请求"}],"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":7}},"range":[1566,1573],"raw":"- 父进程请求"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"父进程终止","loc":{"start":{"line":82,"column":2},"end":{"line":82,"column":7}},"range":[1576,1581],"raw":"父进程终止"}],"loc":{"start":{"line":82,"column":2},"end":{"line":82,"column":7}},"range":[1576,1581],"raw":"父进程终止"}],"loc":{"start":{"line":82,"column":0},"end":{"line":82,"column":7}},"range":[1574,1581],"raw":"- 父进程终止"}],"loc":{"start":{"line":80,"column":0},"end":{"line":82,"column":7}},"range":[1552,1581],"raw":"- 操作员或者操作系统干预\n- 父进程请求\n- 父进程终止"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"进程终止的过程","loc":{"start":{"line":84,"column":5},"end":{"line":84,"column":12}},"range":[1588,1595],"raw":"进程终止的过程"}],"loc":{"start":{"line":84,"column":0},"end":{"line":84,"column":12}},"range":[1583,1595],"raw":"#### 进程终止的过程"},{"type":"Paragraph","children":[{"type":"Str","value":"OS调用终止原语时：","loc":{"start":{"line":86,"column":0},"end":{"line":86,"column":10}},"range":[1597,1607],"raw":"OS调用终止原语时："}],"loc":{"start":{"line":86,"column":0},"end":{"line":86,"column":10}},"range":[1597,1607],"raw":"OS调用终止原语时："},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"根据要终止的进程的标识符，从PCB集合里找出要终止的PCB，读取要终止的进程的状态","loc":{"start":{"line":88,"column":2},"end":{"line":88,"column":43}},"range":[1611,1652],"raw":"根据要终止的进程的标识符，从PCB集合里找出要终止的PCB，读取要终止的进程的状态"}],"loc":{"start":{"line":88,"column":2},"end":{"line":88,"column":43}},"range":[1611,1652],"raw":"根据要终止的进程的标识符，从PCB集合里找出要终止的PCB，读取要终止的进程的状态"}],"loc":{"start":{"line":88,"column":0},"end":{"line":88,"column":43}},"range":[1609,1652],"raw":"- 根据要终止的进程的标识符，从PCB集合里找出要终止的PCB，读取要终止的进程的状态"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"如果要被终止的进程处于执行状态，应该立即终止进程的执行，将调度标志置为真，指示改进程被终止后应该重新被调度","loc":{"start":{"line":89,"column":2},"end":{"line":89,"column":55}},"range":[1655,1708],"raw":"如果要被终止的进程处于执行状态，应该立即终止进程的执行，将调度标志置为真，指示改进程被终止后应该重新被调度"}],"loc":{"start":{"line":89,"column":2},"end":{"line":89,"column":55}},"range":[1655,1708],"raw":"如果要被终止的进程处于执行状态，应该立即终止进程的执行，将调度标志置为真，指示改进程被终止后应该重新被调度"}],"loc":{"start":{"line":89,"column":0},"end":{"line":89,"column":55}},"range":[1653,1708],"raw":"- 如果要被终止的进程处于执行状态，应该立即终止进程的执行，将调度标志置为真，指示改进程被终止后应该重新被调度"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"如果要被终止的进程由子孙进程，应该将子孙进程终止，防止它们成为不可控的进程","loc":{"start":{"line":90,"column":2},"end":{"line":90,"column":39}},"range":[1711,1748],"raw":"如果要被终止的进程由子孙进程，应该将子孙进程终止，防止它们成为不可控的进程"}],"loc":{"start":{"line":90,"column":2},"end":{"line":90,"column":39}},"range":[1711,1748],"raw":"如果要被终止的进程由子孙进程，应该将子孙进程终止，防止它们成为不可控的进程"}],"loc":{"start":{"line":90,"column":0},"end":{"line":90,"column":39}},"range":[1709,1748],"raw":"- 如果要被终止的进程由子孙进程，应该将子孙进程终止，防止它们成为不可控的进程"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"被终止的进程的所有资源，应该归还给其父进程，或者操作系统","loc":{"start":{"line":91,"column":2},"end":{"line":91,"column":30}},"range":[1751,1779],"raw":"被终止的进程的所有资源，应该归还给其父进程，或者操作系统"}],"loc":{"start":{"line":91,"column":2},"end":{"line":91,"column":30}},"range":[1751,1779],"raw":"被终止的进程的所有资源，应该归还给其父进程，或者操作系统"}],"loc":{"start":{"line":91,"column":0},"end":{"line":91,"column":30}},"range":[1749,1779],"raw":"- 被终止的进程的所有资源，应该归还给其父进程，或者操作系统"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"将被终止的进程（PCB）从所在队列（或链表）移除，等待其他的程序搜集信息","loc":{"start":{"line":92,"column":2},"end":{"line":92,"column":38}},"range":[1782,1818],"raw":"将被终止的进程（PCB）从所在队列（或链表）移除，等待其他的程序搜集信息"}],"loc":{"start":{"line":92,"column":2},"end":{"line":92,"column":38}},"range":[1782,1818],"raw":"将被终止的进程（PCB）从所在队列（或链表）移除，等待其他的程序搜集信息"}],"loc":{"start":{"line":92,"column":0},"end":{"line":92,"column":38}},"range":[1780,1818],"raw":"- 将被终止的进程（PCB）从所在队列（或链表）移除，等待其他的程序搜集信息"}],"loc":{"start":{"line":88,"column":0},"end":{"line":92,"column":38}},"range":[1609,1818],"raw":"- 根据要终止的进程的标识符，从PCB集合里找出要终止的PCB，读取要终止的进程的状态\n- 如果要被终止的进程处于执行状态，应该立即终止进程的执行，将调度标志置为真，指示改进程被终止后应该重新被调度\n- 如果要被终止的进程由子孙进程，应该将子孙进程终止，防止它们成为不可控的进程\n- 被终止的进程的所有资源，应该归还给其父进程，或者操作系统\n- 将被终止的进程（PCB）从所在队列（或链表）移除，等待其他的程序搜集信息"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"进程的阻塞与唤醒","loc":{"start":{"line":94,"column":4},"end":{"line":94,"column":12}},"range":[1824,1832],"raw":"进程的阻塞与唤醒"}],"loc":{"start":{"line":94,"column":0},"end":{"line":94,"column":12}},"range":[1820,1832],"raw":"### 进程的阻塞与唤醒"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"引起进程阻塞和唤醒的事件","loc":{"start":{"line":96,"column":5},"end":{"line":96,"column":17}},"range":[1839,1851],"raw":"引起进程阻塞和唤醒的事件"}],"loc":{"start":{"line":96,"column":0},"end":{"line":96,"column":17}},"range":[1834,1851],"raw":"#### 引起进程阻塞和唤醒的事件"},{"type":"Header","depth":5,"children":[{"type":"Str","value":"请求系统服务","loc":{"start":{"line":98,"column":6},"end":{"line":98,"column":12}},"range":[1859,1865],"raw":"请求系统服务"}],"loc":{"start":{"line":98,"column":0},"end":{"line":98,"column":12}},"range":[1853,1865],"raw":"##### 请求系统服务"},{"type":"Paragraph","children":[{"type":"Str","value":"请求系统的服务，但是系统不能马上满足时","loc":{"start":{"line":100,"column":0},"end":{"line":100,"column":19}},"range":[1867,1886],"raw":"请求系统的服务，但是系统不能马上满足时"}],"loc":{"start":{"line":100,"column":0},"end":{"line":100,"column":19}},"range":[1867,1886],"raw":"请求系统的服务，但是系统不能马上满足时"},{"type":"Header","depth":5,"children":[{"type":"Str","value":"启动某种操作","loc":{"start":{"line":102,"column":6},"end":{"line":102,"column":12}},"range":[1894,1900],"raw":"启动某种操作"}],"loc":{"start":{"line":102,"column":0},"end":{"line":102,"column":12}},"range":[1888,1900],"raw":"##### 启动某种操作"},{"type":"Paragraph","children":[{"type":"Str","value":"进程在启动某种操作后，必须要等到该操作结束后才能继续执行时","loc":{"start":{"line":104,"column":0},"end":{"line":104,"column":29}},"range":[1902,1931],"raw":"进程在启动某种操作后，必须要等到该操作结束后才能继续执行时"}],"loc":{"start":{"line":104,"column":0},"end":{"line":104,"column":29}},"range":[1902,1931],"raw":"进程在启动某种操作后，必须要等到该操作结束后才能继续执行时"},{"type":"Header","depth":5,"children":[{"type":"Str","value":"新数据尚未到达","loc":{"start":{"line":106,"column":6},"end":{"line":106,"column":13}},"range":[1939,1946],"raw":"新数据尚未到达"}],"loc":{"start":{"line":106,"column":0},"end":{"line":106,"column":13}},"range":[1933,1946],"raw":"##### 新数据尚未到达"},{"type":"Paragraph","children":[{"type":"Str","value":"对于相互合作的进程，如果其中的一个进程需要先获得合作的另一进程的数据才能继续执行，对数据进行处理时","loc":{"start":{"line":108,"column":0},"end":{"line":108,"column":49}},"range":[1948,1997],"raw":"对于相互合作的进程，如果其中的一个进程需要先获得合作的另一进程的数据才能继续执行，对数据进行处理时"}],"loc":{"start":{"line":108,"column":0},"end":{"line":108,"column":49}},"range":[1948,1997],"raw":"对于相互合作的进程，如果其中的一个进程需要先获得合作的另一进程的数据才能继续执行，对数据进行处理时"},{"type":"Header","depth":5,"children":[{"type":"Str","value":"无新工作可做","loc":{"start":{"line":110,"column":6},"end":{"line":110,"column":12}},"range":[2005,2011],"raw":"无新工作可做"}],"loc":{"start":{"line":110,"column":0},"end":{"line":110,"column":12}},"range":[1999,2011],"raw":"##### 无新工作可做"},{"type":"Paragraph","children":[{"type":"Str","value":"某些具有特殊功能的进程，在完成任务后，将自己阻塞起来，等待下一个任务的到来","loc":{"start":{"line":112,"column":0},"end":{"line":112,"column":37}},"range":[2013,2050],"raw":"某些具有特殊功能的进程，在完成任务后，将自己阻塞起来，等待下一个任务的到来"}],"loc":{"start":{"line":112,"column":0},"end":{"line":112,"column":37}},"range":[2013,2050],"raw":"某些具有特殊功能的进程，在完成任务后，将自己阻塞起来，等待下一个任务的到来"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"进程阻塞的过程","loc":{"start":{"line":114,"column":5},"end":{"line":114,"column":12}},"range":[2057,2064],"raw":"进程阻塞的过程"}],"loc":{"start":{"line":114,"column":0},"end":{"line":114,"column":12}},"range":[2052,2064],"raw":"#### 进程阻塞的过程"},{"type":"Paragraph","children":[{"type":"Str","value":"阻塞时进程主动的行为，调用系统的Block原语，进入Block状态，此时进程还处于执行状态，应该把PCB中的现行状态由“执行”改为“阻塞”，并将PCB插入阻塞队列。","loc":{"start":{"line":116,"column":0},"end":{"line":116,"column":82}},"range":[2066,2148],"raw":"阻塞时进程主动的行为，调用系统的Block原语，进入Block状态，此时进程还处于执行状态，应该把PCB中的现行状态由“执行”改为“阻塞”，并将PCB插入阻塞队列。"}],"loc":{"start":{"line":116,"column":0},"end":{"line":116,"column":82}},"range":[2066,2148],"raw":"阻塞时进程主动的行为，调用系统的Block原语，进入Block状态，此时进程还处于执行状态，应该把PCB中的现行状态由“执行”改为“阻塞”，并将PCB插入阻塞队列。"},{"type":"Paragraph","children":[{"type":"Str","value":"调度程序进行重新调度，将处理机分配给其他的进程并进行切换，保存被阻塞的进程的处理机状态到PCB中，再按新进程的PCB设置处理机的环境。","loc":{"start":{"line":118,"column":0},"end":{"line":118,"column":67}},"range":[2150,2217],"raw":"调度程序进行重新调度，将处理机分配给其他的进程并进行切换，保存被阻塞的进程的处理机状态到PCB中，再按新进程的PCB设置处理机的环境。"}],"loc":{"start":{"line":118,"column":0},"end":{"line":118,"column":67}},"range":[2150,2217],"raw":"调度程序进行重新调度，将处理机分配给其他的进程并进行切换，保存被阻塞的进程的处理机状态到PCB中，再按新进程的PCB设置处理机的环境。"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"进程唤醒的过程","loc":{"start":{"line":120,"column":5},"end":{"line":120,"column":12}},"range":[2224,2231],"raw":"进程唤醒的过程"}],"loc":{"start":{"line":120,"column":0},"end":{"line":120,"column":12}},"range":[2219,2231],"raw":"#### 进程唤醒的过程"},{"type":"Paragraph","children":[{"type":"Str","value":"被阻塞的进程所期待的事件发生时，被阻塞的进程将被唤醒。即将被唤醒的进程从阻塞队列中移出，将其PCB的现行状态改为“就绪”，插入到就绪队列中，等待调度。","loc":{"start":{"line":122,"column":0},"end":{"line":122,"column":75}},"range":[2233,2308],"raw":"被阻塞的进程所期待的事件发生时，被阻塞的进程将被唤醒。即将被唤醒的进程从阻塞队列中移出，将其PCB的现行状态改为“就绪”，插入到就绪队列中，等待调度。"}],"loc":{"start":{"line":122,"column":0},"end":{"line":122,"column":75}},"range":[2233,2308],"raw":"被阻塞的进程所期待的事件发生时，被阻塞的进程将被唤醒。即将被唤醒的进程从阻塞队列中移出，将其PCB的现行状态改为“就绪”，插入到就绪队列中，等待调度。"},{"type":"Paragraph","children":[{"type":"Str","value":"block原语和wakeup原语是一对作用相反的原语，如果再某一进程内调用了block原语，则必须再另一个与之合作的进程或者其他进程内调用与之对应的wakeup原语，否则该进程会长久进入阻塞状态，没有机会执行。","loc":{"start":{"line":124,"column":0},"end":{"line":124,"column":105}},"range":[2310,2415],"raw":"block原语和wakeup原语是一对作用相反的原语，如果再某一进程内调用了block原语，则必须再另一个与之合作的进程或者其他进程内调用与之对应的wakeup原语，否则该进程会长久进入阻塞状态，没有机会执行。"}],"loc":{"start":{"line":124,"column":0},"end":{"line":124,"column":105}},"range":[2310,2415],"raw":"block原语和wakeup原语是一对作用相反的原语，如果再某一进程内调用了block原语，则必须再另一个与之合作的进程或者其他进程内调用与之对应的wakeup原语，否则该进程会长久进入阻塞状态，没有机会执行。"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"进程挂起和激活","loc":{"start":{"line":126,"column":4},"end":{"line":126,"column":11}},"range":[2421,2428],"raw":"进程挂起和激活"}],"loc":{"start":{"line":126,"column":0},"end":{"line":126,"column":11}},"range":[2417,2428],"raw":"### 进程挂起和激活"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"引起进程挂起的事件","loc":{"start":{"line":128,"column":5},"end":{"line":128,"column":14}},"range":[2435,2444],"raw":"引起进程挂起的事件"}],"loc":{"start":{"line":128,"column":0},"end":{"line":128,"column":14}},"range":[2430,2444],"raw":"#### 引起进程挂起的事件"},{"type":"Header","depth":5,"children":[{"type":"Str","value":"进程主动请求","loc":{"start":{"line":130,"column":6},"end":{"line":130,"column":12}},"range":[2452,2458],"raw":"进程主动请求"}],"loc":{"start":{"line":130,"column":0},"end":{"line":130,"column":12}},"range":[2446,2458],"raw":"##### 进程主动请求"},{"type":"Paragraph","children":[{"type":"Str","value":"用户进程主动请求将自己挂起","loc":{"start":{"line":132,"column":0},"end":{"line":132,"column":13}},"range":[2460,2473],"raw":"用户进程主动请求将自己挂起"}],"loc":{"start":{"line":132,"column":0},"end":{"line":132,"column":13}},"range":[2460,2473],"raw":"用户进程主动请求将自己挂起"},{"type":"Header","depth":5,"children":[{"type":"Str","value":"父进程请求","loc":{"start":{"line":134,"column":6},"end":{"line":134,"column":11}},"range":[2481,2486],"raw":"父进程请求"}],"loc":{"start":{"line":134,"column":0},"end":{"line":134,"column":11}},"range":[2475,2486],"raw":"##### 父进程请求"},{"type":"Paragraph","children":[{"type":"Str","value":"父进程请求将自己的某个子线程挂起","loc":{"start":{"line":136,"column":0},"end":{"line":136,"column":16}},"range":[2488,2504],"raw":"父进程请求将自己的某个子线程挂起"}],"loc":{"start":{"line":136,"column":0},"end":{"line":136,"column":16}},"range":[2488,2504],"raw":"父进程请求将自己的某个子线程挂起"},{"type":"Header","depth":4,"children":[{"type":"Str","value":"进程挂起的过程","loc":{"start":{"line":138,"column":5},"end":{"line":138,"column":12}},"range":[2511,2518],"raw":"进程挂起的过程"}],"loc":{"start":{"line":138,"column":0},"end":{"line":138,"column":12}},"range":[2506,2518],"raw":"#### 进程挂起的过程"},{"type":"List","ordered":false,"start":null,"spread":true,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"活动就绪(Readya) $\\overset{Suspend}{\\rightarrow}$ 静止就绪(Readys)","loc":{"start":{"line":140,"column":2},"end":{"line":140,"column":60}},"range":[2522,2580],"raw":"活动就绪(Readya) $\\overset{Suspend}{\\rightarrow}$ 静止就绪(Readys)"}],"loc":{"start":{"line":140,"column":2},"end":{"line":140,"column":60}},"range":[2522,2580],"raw":"活动就绪(Readya) $\\overset{Suspend}{\\rightarrow}$ 静止就绪(Readys)"}],"loc":{"start":{"line":140,"column":0},"end":{"line":140,"column":60}},"range":[2520,2580],"raw":"- 活动就绪(Readya) $\\overset{Suspend}{\\rightarrow}$ 静止就绪(Readys)"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"活动阻塞(Blockeda) $\\overset{Suspend}{\\rightarrow}$ 静止阻塞(Blockeds)","loc":{"start":{"line":142,"column":2},"end":{"line":142,"column":64}},"range":[2586,2648],"raw":"活动阻塞(Blockeda) $\\overset{Suspend}{\\rightarrow}$ 静止阻塞(Blockeds)"}],"loc":{"start":{"line":142,"column":2},"end":{"line":142,"column":64}},"range":[2586,2648],"raw":"活动阻塞(Blockeda) $\\overset{Suspend}{\\rightarrow}$ 静止阻塞(Blockeds)"}],"loc":{"start":{"line":142,"column":0},"end":{"line":142,"column":64}},"range":[2584,2648],"raw":"- 活动阻塞(Blockeda) $\\overset{Suspend}{\\rightarrow}$ 静止阻塞(Blockeds)"}],"loc":{"start":{"line":140,"column":0},"end":{"line":143,"column":2}},"range":[2520,2651],"raw":"- 活动就绪(Readya) $\\overset{Suspend}{\\rightarrow}$ 静止就绪(Readys)\n  \n- 活动阻塞(Blockeda) $\\overset{Suspend}{\\rightarrow}$ 静止阻塞(Blockeds)\n  "},{"type":"Header","depth":4,"children":[{"type":"Str","value":"进程激活的过程","loc":{"start":{"line":144,"column":5},"end":{"line":144,"column":12}},"range":[2657,2664],"raw":"进程激活的过程"}],"loc":{"start":{"line":144,"column":0},"end":{"line":144,"column":12}},"range":[2652,2664],"raw":"#### 进程激活的过程"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"静止就绪(Readys) $\\overset{Active}{\\rightarrow}$ 活动就绪(Readya)","loc":{"start":{"line":146,"column":2},"end":{"line":146,"column":59}},"range":[2668,2725],"raw":"静止就绪(Readys) $\\overset{Active}{\\rightarrow}$ 活动就绪(Readya)"}],"loc":{"start":{"line":146,"column":2},"end":{"line":146,"column":59}},"range":[2668,2725],"raw":"静止就绪(Readys) $\\overset{Active}{\\rightarrow}$ 活动就绪(Readya)"}],"loc":{"start":{"line":146,"column":0},"end":{"line":146,"column":59}},"range":[2666,2725],"raw":"- 静止就绪(Readys) $\\overset{Active}{\\rightarrow}$ 活动就绪(Readya)"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"静止阻塞(Blockeds) $\\overset{Active}{\\rightarrow}$ 活动阻塞(Blockeda)","loc":{"start":{"line":147,"column":2},"end":{"line":147,"column":63}},"range":[2728,2789],"raw":"静止阻塞(Blockeds) $\\overset{Active}{\\rightarrow}$ 活动阻塞(Blockeda)"}],"loc":{"start":{"line":147,"column":2},"end":{"line":147,"column":63}},"range":[2728,2789],"raw":"静止阻塞(Blockeds) $\\overset{Active}{\\rightarrow}$ 活动阻塞(Blockeda)"}],"loc":{"start":{"line":147,"column":0},"end":{"line":147,"column":63}},"range":[2726,2789],"raw":"- 静止阻塞(Blockeds) $\\overset{Active}{\\rightarrow}$ 活动阻塞(Blockeda)"}],"loc":{"start":{"line":146,"column":0},"end":{"line":147,"column":63}},"range":[2666,2789],"raw":"- 静止就绪(Readys) $\\overset{Active}{\\rightarrow}$ 活动就绪(Readya)\n- 静止阻塞(Blockeds) $\\overset{Active}{\\rightarrow}$ 活动阻塞(Blockeda)"}],"loc":{"start":{"line":1,"column":0},"end":{"line":148,"column":0}},"range":[0,2790],"raw":"---\ntags: ['操作系统','进程']\n---\n# 进程控制\n\n进程控制是进程管理中的基本功能：\n\n- 创建一个新进程\n- 终止一个已完成的进程\n- 终止一个因某事件不能继续运行的进程\n- 进程运行中的状态转换\n\n进程控制一般由OS内的**原语**实现\n\n> 原子操作：只一个操作的所有动作要么都做，要么都不做，是不可分割的基本单位，在执行的过程中**不允许被中断**，原子操作在管态下执行，常驻内存。\n>\n> 原语： 由若干条语句组成，用于完成某一功能的一个过程，它们是“原子操作”，原语的作用是实现进程的通信和控制，避免造成其状态的不确定性\n\n## 进程的创建\n\n### 进程图（Process Graph）\n\n用于描述一个进程的家族关系的**有向树**（有向树是有向图，不是树）。用一条从父进程指向子进程的有向边来描述它们之间的父子关系。创建父进程的进程被成为祖先进程，树根代表的进程作为家族的祖先。\n\n子进程可以继承父进程所有的资源：父进程打开的文件、分配到的缓冲区等。\n\n- 如果子进程被撤销，应该将从父进程获得的资源归还给父进程。\n- 如果父进程被撤销，也必须同时撤销所有的子进程。\n\n为了表示进程之间的家族关系，在PCB内都设置了家族关系表，标明自己的父进程及所有的子进程。\n\n![PNG??.png](https://i.loli.net/2020/07/31/nasX4Sj9vtpdqPc.png)\n\n### 引起创建进程的事件\n\n一个进程去创建另一个进程的典型事件有以下四个类型：\n\n1. 用户登录：为终端建立进程\n2. 作业调度：作业调度程序按照一定的算法调度到某个作业时为该作业创建进程\n3. 提供服务：运行中的用户程序向操作系统提出请求，系统专门创建的进程来提供用户程序需要的服务\n4. 应用请求：由应用本身为自己创建一个新的进程，以期完成一个并发的特定任务\n\n### 进程的创建(Creation Of Process)\n\n调用进程创建原语Create()创建一个新的进程：\n\n1. 申请空白的PCB：申请一个唯一的数字标识符，在PCB集合内索取一个空白的PCB\n2. 为新进程分配资源：为新进程的程序和数据以及用户栈分配必要的内存空间。操作系统必须知道新的进程需要的内存大小。\n   - 对于批处理作业或者为应用创建子进程，用户需要在提出创建进程请求的时候提供所需要的内存大小\n   - 对于交互性作业，创建进程时可以不指定需要的内存大小，由操作系统分配一定的空间\n3. 初始化PCB：\n     - 初始化标识信息，将系统分配的标识符和父进程的标识符填入到PCB中\n     - 初始化处理机状态：将程序计数器指向程序的入口，栈指针指向栈顶\n     - 初始化处理机控制信息：将进程的状态设置为就绪状态或者静止就绪状态，设置优先级\n4. 将进程插入就绪队列。如果就绪队列可以接受新进程，就将进程插入就绪队列\n\n### 进程终止\n\n#### 引起终止的事件\n\n##### 正常终止\n\n任何计算机系统中都有一个表示程序已经运行完的指示，当程序运行到这个指示时，会产生一个中断通知操作系统这个进程已经运行完毕了，\n\n##### 异常终止\n\n进程运行期间出现某种错误导致的进程终止\n\n- 越界错误：访问的存储区超出该进程的区域\n- 保错误：试图访问受保护的不允许访问的资源或文件\n- 非法指令：试图执行一条不存在的指令\n- 特权指令错：试图执行只允许OS执行的指令\n- 运行超时：进程的执行时间超过指定的最大值\n- 等待超时：进程等待某个事件的时间超过最大值\n- 算数运算错：试图执行一个被禁止的运算\n- I/O故障：在I/O过程中发生错误\n\n##### 外界干预\n\n- 操作员或者操作系统干预\n- 父进程请求\n- 父进程终止\n\n#### 进程终止的过程\n\nOS调用终止原语时：\n\n- 根据要终止的进程的标识符，从PCB集合里找出要终止的PCB，读取要终止的进程的状态\n- 如果要被终止的进程处于执行状态，应该立即终止进程的执行，将调度标志置为真，指示改进程被终止后应该重新被调度\n- 如果要被终止的进程由子孙进程，应该将子孙进程终止，防止它们成为不可控的进程\n- 被终止的进程的所有资源，应该归还给其父进程，或者操作系统\n- 将被终止的进程（PCB）从所在队列（或链表）移除，等待其他的程序搜集信息\n\n### 进程的阻塞与唤醒\n\n#### 引起进程阻塞和唤醒的事件\n\n##### 请求系统服务\n\n请求系统的服务，但是系统不能马上满足时\n\n##### 启动某种操作\n\n进程在启动某种操作后，必须要等到该操作结束后才能继续执行时\n\n##### 新数据尚未到达\n\n对于相互合作的进程，如果其中的一个进程需要先获得合作的另一进程的数据才能继续执行，对数据进行处理时\n\n##### 无新工作可做\n\n某些具有特殊功能的进程，在完成任务后，将自己阻塞起来，等待下一个任务的到来\n\n#### 进程阻塞的过程\n\n阻塞时进程主动的行为，调用系统的Block原语，进入Block状态，此时进程还处于执行状态，应该把PCB中的现行状态由“执行”改为“阻塞”，并将PCB插入阻塞队列。\n\n调度程序进行重新调度，将处理机分配给其他的进程并进行切换，保存被阻塞的进程的处理机状态到PCB中，再按新进程的PCB设置处理机的环境。\n\n#### 进程唤醒的过程\n\n被阻塞的进程所期待的事件发生时，被阻塞的进程将被唤醒。即将被唤醒的进程从阻塞队列中移出，将其PCB的现行状态改为“就绪”，插入到就绪队列中，等待调度。\n\nblock原语和wakeup原语是一对作用相反的原语，如果再某一进程内调用了block原语，则必须再另一个与之合作的进程或者其他进程内调用与之对应的wakeup原语，否则该进程会长久进入阻塞状态，没有机会执行。\n\n### 进程挂起和激活\n\n#### 引起进程挂起的事件\n\n##### 进程主动请求\n\n用户进程主动请求将自己挂起\n\n##### 父进程请求\n\n父进程请求将自己的某个子线程挂起\n\n#### 进程挂起的过程\n\n- 活动就绪(Readya) $\\overset{Suspend}{\\rightarrow}$ 静止就绪(Readys)\n  \n- 活动阻塞(Blockeda) $\\overset{Suspend}{\\rightarrow}$ 静止阻塞(Blockeds)\n  \n#### 进程激活的过程\n\n- 静止就绪(Readys) $\\overset{Active}{\\rightarrow}$ 活动就绪(Readya)\n- 静止阻塞(Blockeds) $\\overset{Active}{\\rightarrow}$ 活动阻塞(Blockeda)\n"},"catalogue":{"title":"2020-07-31-进程控制","json-path":"2020-07-31-进程控制.json","mdate":"2022-08-30T14:19:31.449Z","tags":["操作系统","进程"]}}