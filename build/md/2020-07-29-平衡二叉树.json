{"ast":{"type":"Document","children":[{"type":"Yaml","value":"tags: ['数据结构','树']","loc":{"start":{"line":1,"column":0},"end":{"line":3,"column":3}},"range":[0,26],"raw":"---\ntags: ['数据结构','树']\n---"},{"type":"Header","depth":1,"children":[{"type":"Str","value":"平衡二叉树(AVL)","loc":{"start":{"line":5,"column":2},"end":{"line":5,"column":12}},"range":[30,40],"raw":"平衡二叉树(AVL)"}],"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":12}},"range":[28,40],"raw":"# 平衡二叉树(AVL)"},{"type":"BlockQuote","children":[{"type":"Paragraph","children":[{"type":"Str","value":"平衡因子：左子树的高度 - 右子树的高度\n平衡二叉树：任意结点的平衡因子的绝对值都不超过1","loc":{"start":{"line":7,"column":2},"end":{"line":8,"column":26}},"range":[44,91],"raw":"平衡因子：左子树的高度 - 右子树的高度\n> 平衡二叉树：任意结点的平衡因子的绝对值都不超过1"}],"loc":{"start":{"line":7,"column":2},"end":{"line":8,"column":26}},"range":[44,91],"raw":"平衡因子：左子树的高度 - 右子树的高度\n> 平衡二叉树：任意结点的平衡因子的绝对值都不超过1"}],"loc":{"start":{"line":7,"column":0},"end":{"line":8,"column":26}},"range":[42,91],"raw":"> 平衡因子：左子树的高度 - 右子树的高度\n> 平衡二叉树：任意结点的平衡因子的绝对值都不超过1"},{"type":"Paragraph","children":[{"type":"Str","value":"如何计算高度为h的","loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":9}},"range":[93,102],"raw":"如何计算高度为h的"},{"type":"Strong","children":[{"type":"Str","value":"最小","loc":{"start":{"line":10,"column":11},"end":{"line":10,"column":13}},"range":[104,106],"raw":"最小"}],"loc":{"start":{"line":10,"column":9},"end":{"line":10,"column":15}},"range":[102,108],"raw":"**最小**"},{"type":"Str","value":"平衡二叉树的结点数$$N_{n}$$?","loc":{"start":{"line":10,"column":15},"end":{"line":10,"column":34}},"range":[108,127],"raw":"平衡二叉树的结点数$$N_{n}$$?"}],"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":34}},"range":[93,127],"raw":"如何计算高度为h的**最小**平衡二叉树的结点数$$N_{n}$$?"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/29/NmzWMQSFaA4IcPy.png","alt":"PNG??.png","loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":63}},"range":[129,192],"raw":"![PNG??.png](https://i.loli.net/2020/07/29/NmzWMQSFaA4IcPy.png)"}],"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":63}},"range":[129,192],"raw":"![PNG??.png](https://i.loli.net/2020/07/29/NmzWMQSFaA4IcPy.png)"},{"type":"Paragraph","children":[{"type":"Str","value":"可以得到求最小平衡二叉树结点数的递推公式：\n$$\nN_{h} = N_{h-1} + N_{h-2}\n$$","loc":{"start":{"line":14,"column":0},"end":{"line":17,"column":2}},"range":[194,247],"raw":"可以得到求最小平衡二叉树结点数的递推公式：\n$$\nN_{h} = N_{h-1} + N_{h-2}\n$$"}],"loc":{"start":{"line":14,"column":0},"end":{"line":17,"column":2}},"range":[194,247],"raw":"可以得到求最小平衡二叉树结点数的递推公式：\n$$\nN_{h} = N_{h-1} + N_{h-2}\n$$"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"平衡二叉树的判断","loc":{"start":{"line":19,"column":3},"end":{"line":19,"column":11}},"range":[252,260],"raw":"平衡二叉树的判断"}],"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":11}},"range":[249,260],"raw":"## 平衡二叉树的判断"},{"type":"Paragraph","children":[{"type":"Str","value":"若根结点的左子树和右子树均为平衡二叉树且左右子树的高度差绝对值小于等于1.","loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}},"range":[262,299],"raw":"若根结点的左子树和右子树均为平衡二叉树且左右子树的高度差绝对值小于等于1."}],"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":37}},"range":[262,299],"raw":"若根结点的左子树和右子树均为平衡二叉树且左右子树的高度差绝对值小于等于1."},{"type":"Paragraph","children":[{"type":"Str","value":"后序遍历：","loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":5}},"range":[301,306],"raw":"后序遍历："}],"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":5}},"range":[301,306],"raw":"后序遍历："},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"判断左子树是平衡二叉树","loc":{"start":{"line":25,"column":2},"end":{"line":25,"column":13}},"range":[310,321],"raw":"判断左子树是平衡二叉树"}],"loc":{"start":{"line":25,"column":2},"end":{"line":25,"column":13}},"range":[310,321],"raw":"判断左子树是平衡二叉树"}],"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":13}},"range":[308,321],"raw":"- 判断左子树是平衡二叉树"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"判断右子树是平衡二叉树","loc":{"start":{"line":26,"column":2},"end":{"line":26,"column":13}},"range":[324,335],"raw":"判断右子树是平衡二叉树"}],"loc":{"start":{"line":26,"column":2},"end":{"line":26,"column":13}},"range":[324,335],"raw":"判断右子树是平衡二叉树"}],"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":13}},"range":[322,335],"raw":"- 判断右子树是平衡二叉树"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"判断以该结点为根结点的二叉树是平衡二叉树","loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":22}},"range":[338,358],"raw":"判断以该结点为根结点的二叉树是平衡二叉树"}],"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":22}},"range":[338,358],"raw":"判断以该结点为根结点的二叉树是平衡二叉树"}],"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":22}},"range":[336,358],"raw":"- 判断以该结点为根结点的二叉树是平衡二叉树"}],"loc":{"start":{"line":25,"column":0},"end":{"line":27,"column":22}},"range":[308,358],"raw":"- 判断左子树是平衡二叉树\n- 判断右子树是平衡二叉树\n- 判断以该结点为根结点的二叉树是平衡二叉树"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"代码实现","loc":{"start":{"line":29,"column":4},"end":{"line":29,"column":8}},"range":[364,368],"raw":"代码实现"}],"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":8}},"range":[360,368],"raw":"### 代码实现"},{"type":"CodeBlock","lang":"c","meta":null,"value":"#include \"math.h\"\n#define TRUE 1\n#define FALSE 0\n#define bool int\n\nvoid JudgeAVL(BiTree bt, bool *banlance, int *h){\n    int bl = 0, br = 0, hl = 0, hr = 0;\n    if(bt == NULL){\n        h = 0;\n        balance = TRUE;\n    }\n    else if(bt->lchild==NULL && bt->rchild==NULL){\n        h = 1;\n        balance = TRUE;\n    }\n    else{\n        JudgeAVL(bt, &bl, &hl);\n        JudgeAVL(bt, &br, &hr);\n        h = (hl > hr ? hl : hr) + 1;\n        balance = (abs(hl-hr) <= 1 && bl && br);\n    }\n}","loc":{"start":{"line":31,"column":0},"end":{"line":54,"column":3}},"range":[370,864],"raw":"```c\n#include \"math.h\"\n#define TRUE 1\n#define FALSE 0\n#define bool int\n\nvoid JudgeAVL(BiTree bt, bool *banlance, int *h){\n    int bl = 0, br = 0, hl = 0, hr = 0;\n    if(bt == NULL){\n        h = 0;\n        balance = TRUE;\n    }\n    else if(bt->lchild==NULL && bt->rchild==NULL){\n        h = 1;\n        balance = TRUE;\n    }\n    else{\n        JudgeAVL(bt, &bl, &hl);\n        JudgeAVL(bt, &br, &hr);\n        h = (hl > hr ? hl : hr) + 1;\n        balance = (abs(hl-hr) <= 1 && bl && br);\n    }\n}\n```"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"平衡二叉树的插入","loc":{"start":{"line":56,"column":3},"end":{"line":56,"column":11}},"range":[869,877],"raw":"平衡二叉树的插入"}],"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":11}},"range":[866,877],"raw":"## 平衡二叉树的插入"},{"type":"List","ordered":false,"start":null,"spread":false,"children":[{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"先按照二叉排序树的插入方式进行插入","loc":{"start":{"line":58,"column":2},"end":{"line":58,"column":19}},"range":[881,898],"raw":"先按照二叉排序树的插入方式进行插入"}],"loc":{"start":{"line":58,"column":2},"end":{"line":58,"column":19}},"range":[881,898],"raw":"先按照二叉排序树的插入方式进行插入"}],"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":19}},"range":[879,898],"raw":"- 先按照二叉排序树的插入方式进行插入"},{"type":"ListItem","spread":false,"checked":null,"children":[{"type":"Paragraph","children":[{"type":"Str","value":"对插入后的结果进行调整，如果不是平衡二叉树就对其进行调整","loc":{"start":{"line":59,"column":2},"end":{"line":59,"column":30}},"range":[901,929],"raw":"对插入后的结果进行调整，如果不是平衡二叉树就对其进行调整"}],"loc":{"start":{"line":59,"column":2},"end":{"line":59,"column":30}},"range":[901,929],"raw":"对插入后的结果进行调整，如果不是平衡二叉树就对其进行调整"}],"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":30}},"range":[899,929],"raw":"- 对插入后的结果进行调整，如果不是平衡二叉树就对其进行调整"}],"loc":{"start":{"line":58,"column":0},"end":{"line":59,"column":30}},"range":[879,929],"raw":"- 先按照二叉排序树的插入方式进行插入\n- 对插入后的结果进行调整，如果不是平衡二叉树就对其进行调整"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"LL平衡旋转（右单旋转）","loc":{"start":{"line":61,"column":4},"end":{"line":61,"column":16}},"range":[935,947],"raw":"LL平衡旋转（右单旋转）"}],"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":16}},"range":[931,947],"raw":"### LL平衡旋转（右单旋转）"},{"type":"Paragraph","children":[{"type":"Str","value":"原因：在结点A的左孩子的左子树上插入了新结点导致不平衡\n调整方法：将A的左孩子B代替A，将A作为结点B的右子树，B的原右子树作为A的左子树。","loc":{"start":{"line":63,"column":0},"end":{"line":64,"column":42}},"range":[949,1019],"raw":"原因：在结点A的左孩子的左子树上插入了新结点导致不平衡\n调整方法：将A的左孩子B代替A，将A作为结点B的右子树，B的原右子树作为A的左子树。"}],"loc":{"start":{"line":63,"column":0},"end":{"line":64,"column":42}},"range":[949,1019],"raw":"原因：在结点A的左孩子的左子树上插入了新结点导致不平衡\n调整方法：将A的左孩子B代替A，将A作为结点B的右子树，B的原右子树作为A的左子树。"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/29/DMPLcaJIxVUgKEy.png","alt":"quicker_505b4b2f-da65-41dc-8670-ffc0941404f3.png","loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":102}},"range":[1021,1123],"raw":"![quicker_505b4b2f-da65-41dc-8670-ffc0941404f3.png](https://i.loli.net/2020/07/29/DMPLcaJIxVUgKEy.png)"}],"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":102}},"range":[1021,1123],"raw":"![quicker_505b4b2f-da65-41dc-8670-ffc0941404f3.png](https://i.loli.net/2020/07/29/DMPLcaJIxVUgKEy.png)"},{"type":"BlockQuote","children":[{"type":"Paragraph","children":[{"type":"Emphasis","children":[{"type":"Strong","children":[{"type":"Str","value":"eg.1 H为0时","loc":{"start":{"line":68,"column":5},"end":{"line":68,"column":14}},"range":[1130,1139],"raw":"eg.1 H为0时"}],"loc":{"start":{"line":68,"column":3},"end":{"line":68,"column":16}},"range":[1128,1141],"raw":"**eg.1 H为0时**"}],"loc":{"start":{"line":68,"column":2},"end":{"line":68,"column":17}},"range":[1127,1142],"raw":"***eg.1 H为0时***"}],"loc":{"start":{"line":68,"column":2},"end":{"line":68,"column":17}},"range":[1127,1142],"raw":"***eg.1 H为0时***"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/29/AaqSIPXZGmvjOiH.png","alt":"quicker_982e2659-14c2-4c9b-acde-c5a4f9cb94e3.png","loc":{"start":{"line":70,"column":2},"end":{"line":70,"column":104}},"range":[1147,1249],"raw":"![quicker_982e2659-14c2-4c9b-acde-c5a4f9cb94e3.png](https://i.loli.net/2020/07/29/AaqSIPXZGmvjOiH.png)"}],"loc":{"start":{"line":70,"column":2},"end":{"line":70,"column":104}},"range":[1147,1249],"raw":"![quicker_982e2659-14c2-4c9b-acde-c5a4f9cb94e3.png](https://i.loli.net/2020/07/29/AaqSIPXZGmvjOiH.png)"},{"type":"Paragraph","children":[{"type":"Emphasis","children":[{"type":"Strong","children":[{"type":"Str","value":"eg.2 一般情况","loc":{"start":{"line":72,"column":5},"end":{"line":72,"column":14}},"range":[1257,1266],"raw":"eg.2 一般情况"}],"loc":{"start":{"line":72,"column":3},"end":{"line":72,"column":16}},"range":[1255,1268],"raw":"**eg.2 一般情况**"}],"loc":{"start":{"line":72,"column":2},"end":{"line":72,"column":17}},"range":[1254,1269],"raw":"***eg.2 一般情况***"}],"loc":{"start":{"line":72,"column":2},"end":{"line":72,"column":17}},"range":[1254,1269],"raw":"***eg.2 一般情况***"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/29/aInKYyxCTUS8LHt.png","alt":"quicker_3ced414c-af4a-44ad-aa1c-a70da0f390d4.png","loc":{"start":{"line":74,"column":2},"end":{"line":74,"column":104}},"range":[1274,1376],"raw":"![quicker_3ced414c-af4a-44ad-aa1c-a70da0f390d4.png](https://i.loli.net/2020/07/29/aInKYyxCTUS8LHt.png)"}],"loc":{"start":{"line":74,"column":2},"end":{"line":74,"column":104}},"range":[1274,1376],"raw":"![quicker_3ced414c-af4a-44ad-aa1c-a70da0f390d4.png](https://i.loli.net/2020/07/29/aInKYyxCTUS8LHt.png)"}],"loc":{"start":{"line":68,"column":0},"end":{"line":74,"column":104}},"range":[1125,1376],"raw":"> ***eg.1 H为0时***\n>\n> ![quicker_982e2659-14c2-4c9b-acde-c5a4f9cb94e3.png](https://i.loli.net/2020/07/29/AaqSIPXZGmvjOiH.png)\n>\n> ***eg.2 一般情况***\n>\n> ![quicker_3ced414c-af4a-44ad-aa1c-a70da0f390d4.png](https://i.loli.net/2020/07/29/aInKYyxCTUS8LHt.png)"},{"type":"Header","depth":3,"children":[{"type":"Str","value":"RR平衡旋转（左单旋转）","loc":{"start":{"line":76,"column":4},"end":{"line":76,"column":16}},"range":[1382,1394],"raw":"RR平衡旋转（左单旋转）"}],"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":16}},"range":[1378,1394],"raw":"### RR平衡旋转（左单旋转）"},{"type":"Paragraph","children":[{"type":"Str","value":"原因：在结点A的右孩子的右子树上插入了新节点导致不平衡\n调整方法：将A的右孩子B代替A，将A作为结点B的左子树，B的原左子树作为A的右子树。","loc":{"start":{"line":78,"column":0},"end":{"line":79,"column":42}},"range":[1396,1466],"raw":"原因：在结点A的右孩子的右子树上插入了新节点导致不平衡\n调整方法：将A的右孩子B代替A，将A作为结点B的左子树，B的原左子树作为A的右子树。"}],"loc":{"start":{"line":78,"column":0},"end":{"line":79,"column":42}},"range":[1396,1466],"raw":"原因：在结点A的右孩子的右子树上插入了新节点导致不平衡\n调整方法：将A的右孩子B代替A，将A作为结点B的左子树，B的原左子树作为A的右子树。"},{"type":"Paragraph","children":[{"type":"Str","value":"与LL平衡旋转是对称的关系","loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":13}},"range":[1468,1481],"raw":"与LL平衡旋转是对称的关系"}],"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":13}},"range":[1468,1481],"raw":"与LL平衡旋转是对称的关系"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/29/kjBO4r81FYKxlMq.png","alt":"quicker_35a9fe00-064c-49f9-b290-68fde0a186af.png","loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":102}},"range":[1483,1585],"raw":"![quicker_35a9fe00-064c-49f9-b290-68fde0a186af.png](https://i.loli.net/2020/07/29/kjBO4r81FYKxlMq.png)"}],"loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":102}},"range":[1483,1585],"raw":"![quicker_35a9fe00-064c-49f9-b290-68fde0a186af.png](https://i.loli.net/2020/07/29/kjBO4r81FYKxlMq.png)"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"LR平衡旋转（先左后右双旋转）","loc":{"start":{"line":85,"column":3},"end":{"line":85,"column":18}},"range":[1590,1605],"raw":"LR平衡旋转（先左后右双旋转）"}],"loc":{"start":{"line":85,"column":0},"end":{"line":85,"column":18}},"range":[1587,1605],"raw":"## LR平衡旋转（先左后右双旋转）"},{"type":"Paragraph","children":[{"type":"Str","value":"原因：在结点A的左孩子的右子树上插入了新的结点导致不平衡\n调整方法：将A的左孩子B的右孩子C代替B，然后再将C向上代替A的位置。","loc":{"start":{"line":87,"column":0},"end":{"line":88,"column":35}},"range":[1607,1671],"raw":"原因：在结点A的左孩子的右子树上插入了新的结点导致不平衡\n调整方法：将A的左孩子B的右孩子C代替B，然后再将C向上代替A的位置。"}],"loc":{"start":{"line":87,"column":0},"end":{"line":88,"column":35}},"range":[1607,1671],"raw":"原因：在结点A的左孩子的右子树上插入了新的结点导致不平衡\n调整方法：将A的左孩子B的右孩子C代替B，然后再将C向上代替A的位置。"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/29/IZF7Ps9Bqk8XtMr.png","alt":"quicker_274d036a-1652-4db9-9d9c-ebbc9e62bcb7.png","loc":{"start":{"line":90,"column":0},"end":{"line":90,"column":102}},"range":[1673,1775],"raw":"![quicker_274d036a-1652-4db9-9d9c-ebbc9e62bcb7.png](https://i.loli.net/2020/07/29/IZF7Ps9Bqk8XtMr.png)"}],"loc":{"start":{"line":90,"column":0},"end":{"line":90,"column":102}},"range":[1673,1775],"raw":"![quicker_274d036a-1652-4db9-9d9c-ebbc9e62bcb7.png](https://i.loli.net/2020/07/29/IZF7Ps9Bqk8XtMr.png)"},{"type":"BlockQuote","children":[{"type":"Paragraph","children":[{"type":"Emphasis","children":[{"type":"Strong","children":[{"type":"Str","value":"eg.1 一般情况","loc":{"start":{"line":92,"column":5},"end":{"line":92,"column":14}},"range":[1782,1791],"raw":"eg.1 一般情况"}],"loc":{"start":{"line":92,"column":3},"end":{"line":92,"column":16}},"range":[1780,1793],"raw":"**eg.1 一般情况**"}],"loc":{"start":{"line":92,"column":2},"end":{"line":92,"column":17}},"range":[1779,1794],"raw":"***eg.1 一般情况***"}],"loc":{"start":{"line":92,"column":2},"end":{"line":92,"column":17}},"range":[1779,1794],"raw":"***eg.1 一般情况***"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/29/1wQOpxHvCVt79oI.png","alt":"quicker_bf869700-747c-4047-aabe-7c04d848460e.png","loc":{"start":{"line":94,"column":2},"end":{"line":94,"column":104}},"range":[1799,1901],"raw":"![quicker_bf869700-747c-4047-aabe-7c04d848460e.png](https://i.loli.net/2020/07/29/1wQOpxHvCVt79oI.png)"}],"loc":{"start":{"line":94,"column":2},"end":{"line":94,"column":104}},"range":[1799,1901],"raw":"![quicker_bf869700-747c-4047-aabe-7c04d848460e.png](https://i.loli.net/2020/07/29/1wQOpxHvCVt79oI.png)"}],"loc":{"start":{"line":92,"column":0},"end":{"line":94,"column":104}},"range":[1777,1901],"raw":"> ***eg.1 一般情况***\n>\n> ![quicker_bf869700-747c-4047-aabe-7c04d848460e.png](https://i.loli.net/2020/07/29/1wQOpxHvCVt79oI.png)"},{"type":"Header","depth":2,"children":[{"type":"Str","value":"RL平衡旋转（先右后左双旋转）","loc":{"start":{"line":96,"column":3},"end":{"line":96,"column":18}},"range":[1906,1921],"raw":"RL平衡旋转（先右后左双旋转）"}],"loc":{"start":{"line":96,"column":0},"end":{"line":96,"column":18}},"range":[1903,1921],"raw":"## RL平衡旋转（先右后左双旋转）"},{"type":"Paragraph","children":[{"type":"Str","value":"原因：在结点A的右孩子的左子树上插入了新的结点导致不平衡\n调整方法：将A的右孩子B的左孩子C代替B，然后将C向上替代A的位置。","loc":{"start":{"line":98,"column":0},"end":{"line":99,"column":34}},"range":[1923,1986],"raw":"原因：在结点A的右孩子的左子树上插入了新的结点导致不平衡\n调整方法：将A的右孩子B的左孩子C代替B，然后将C向上替代A的位置。"}],"loc":{"start":{"line":98,"column":0},"end":{"line":99,"column":34}},"range":[1923,1986],"raw":"原因：在结点A的右孩子的左子树上插入了新的结点导致不平衡\n调整方法：将A的右孩子B的左孩子C代替B，然后将C向上替代A的位置。"},{"type":"Paragraph","children":[{"type":"Image","title":null,"url":"https://i.loli.net/2020/07/29/qUJHTsuBlmgM6zx.png","alt":"quicker_cd2f86fe-9323-465c-98d4-14188ce5ab4d.png","loc":{"start":{"line":101,"column":0},"end":{"line":101,"column":102}},"range":[1988,2090],"raw":"![quicker_cd2f86fe-9323-465c-98d4-14188ce5ab4d.png](https://i.loli.net/2020/07/29/qUJHTsuBlmgM6zx.png)"}],"loc":{"start":{"line":101,"column":0},"end":{"line":101,"column":102}},"range":[1988,2090],"raw":"![quicker_cd2f86fe-9323-465c-98d4-14188ce5ab4d.png](https://i.loli.net/2020/07/29/qUJHTsuBlmgM6zx.png)"}],"loc":{"start":{"line":1,"column":0},"end":{"line":102,"column":0}},"range":[0,2091],"raw":"---\ntags: ['数据结构','树']\n---\n\n# 平衡二叉树(AVL)\n\n> 平衡因子：左子树的高度 - 右子树的高度\n> 平衡二叉树：任意结点的平衡因子的绝对值都不超过1\n\n如何计算高度为h的**最小**平衡二叉树的结点数$$N_{n}$$?\n\n![PNG??.png](https://i.loli.net/2020/07/29/NmzWMQSFaA4IcPy.png)\n\n可以得到求最小平衡二叉树结点数的递推公式：\n$$\nN_{h} = N_{h-1} + N_{h-2}\n$$\n\n## 平衡二叉树的判断\n\n若根结点的左子树和右子树均为平衡二叉树且左右子树的高度差绝对值小于等于1.\n\n后序遍历：\n\n- 判断左子树是平衡二叉树\n- 判断右子树是平衡二叉树\n- 判断以该结点为根结点的二叉树是平衡二叉树\n\n### 代码实现\n\n```c\n#include \"math.h\"\n#define TRUE 1\n#define FALSE 0\n#define bool int\n\nvoid JudgeAVL(BiTree bt, bool *banlance, int *h){\n    int bl = 0, br = 0, hl = 0, hr = 0;\n    if(bt == NULL){\n        h = 0;\n        balance = TRUE;\n    }\n    else if(bt->lchild==NULL && bt->rchild==NULL){\n        h = 1;\n        balance = TRUE;\n    }\n    else{\n        JudgeAVL(bt, &bl, &hl);\n        JudgeAVL(bt, &br, &hr);\n        h = (hl > hr ? hl : hr) + 1;\n        balance = (abs(hl-hr) <= 1 && bl && br);\n    }\n}\n```\n\n## 平衡二叉树的插入\n\n- 先按照二叉排序树的插入方式进行插入\n- 对插入后的结果进行调整，如果不是平衡二叉树就对其进行调整\n\n### LL平衡旋转（右单旋转）\n\n原因：在结点A的左孩子的左子树上插入了新结点导致不平衡\n调整方法：将A的左孩子B代替A，将A作为结点B的右子树，B的原右子树作为A的左子树。\n\n![quicker_505b4b2f-da65-41dc-8670-ffc0941404f3.png](https://i.loli.net/2020/07/29/DMPLcaJIxVUgKEy.png)\n\n> ***eg.1 H为0时***\n>\n> ![quicker_982e2659-14c2-4c9b-acde-c5a4f9cb94e3.png](https://i.loli.net/2020/07/29/AaqSIPXZGmvjOiH.png)\n>\n> ***eg.2 一般情况***\n>\n> ![quicker_3ced414c-af4a-44ad-aa1c-a70da0f390d4.png](https://i.loli.net/2020/07/29/aInKYyxCTUS8LHt.png)\n\n### RR平衡旋转（左单旋转）\n\n原因：在结点A的右孩子的右子树上插入了新节点导致不平衡\n调整方法：将A的右孩子B代替A，将A作为结点B的左子树，B的原左子树作为A的右子树。\n\n与LL平衡旋转是对称的关系\n\n![quicker_35a9fe00-064c-49f9-b290-68fde0a186af.png](https://i.loli.net/2020/07/29/kjBO4r81FYKxlMq.png)\n\n## LR平衡旋转（先左后右双旋转）\n\n原因：在结点A的左孩子的右子树上插入了新的结点导致不平衡\n调整方法：将A的左孩子B的右孩子C代替B，然后再将C向上代替A的位置。\n\n![quicker_274d036a-1652-4db9-9d9c-ebbc9e62bcb7.png](https://i.loli.net/2020/07/29/IZF7Ps9Bqk8XtMr.png)\n\n> ***eg.1 一般情况***\n>\n> ![quicker_bf869700-747c-4047-aabe-7c04d848460e.png](https://i.loli.net/2020/07/29/1wQOpxHvCVt79oI.png)\n\n## RL平衡旋转（先右后左双旋转）\n\n原因：在结点A的右孩子的左子树上插入了新的结点导致不平衡\n调整方法：将A的右孩子B的左孩子C代替B，然后将C向上替代A的位置。\n\n![quicker_cd2f86fe-9323-465c-98d4-14188ce5ab4d.png](https://i.loli.net/2020/07/29/qUJHTsuBlmgM6zx.png)\n"},"catalogue":{"title":"2020-07-29-平衡二叉树","json-path":"2020-07-29-平衡二叉树.json","mdate":"2022-08-30T14:19:31.449Z","tags":["数据结构","树"]}}